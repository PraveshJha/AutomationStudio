{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/webpack/buildin/module.js","components/Widget/NumberWidget.js","components/Widget/IconWidget.js","components/Widget/index.js","pages/DashboardPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","__webpack_require__","d","__webpack_exports__","getColor","getThemeColors","availableColor","arguments","undefined","window","getComputedStyle","document","documentElement","getPropertyValue","concat","_toConsumableArray","arr","Array","isArray","i","arr2","_arrayWithoutHoles","iter","Symbol","iterator","prototype","toString","call","from","_iterableToArray","TypeError","_nonIterableSpread","module","exports","webpackPolyfill","deprecate","paths","defineProperty","enumerable","get","l","NumberWidget","subtitle","number","color","_ref$progress","progress","value","label","objectWithoutProperties","react_default","Card","body","CardText","CardTitle","IconWidget","bgColor","Icon","icon","iconProps","inverse","CardBody","size","CardSubtitle","Widget_NumberWidget","Widget_IconWidget","APIBasePath","ENV","APIURL","ReportPublishPath","ReportURL","GetPieChart","summaryPass","summaryFail","datasets","data","backgroundColor","labels","GetListvalueFromJsonResponce","options","allitem","keys","push","GetLineChart","Component","borderColor","borderWidth","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_7__","GetBarChart","fill","genLineDataforModuleFail","Options","option","react__WEBPACK_IMPORTED_MODULE_11___default","Environment","DateOptions","TimeOptions","_ref3","DashboardPage","props","_this","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","state","items","summary","dashboardTotalDays","defaultEnv","EXECUTIONDATE","executionDateList","EXECUTIONHTMLTime","allModule","allModuleName","PassModulewise","allPassModuleWise","FailModulewise","allFailModuleWise","ConfigurationFile","CommonTestData","loader","_ref4","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee7","homepage","homepageResponse","wrap","_context7","prev","next","fetch","sent","json","success","setState","Configuration","DefaultEnvironment","DashboardHistoryCount","_ref5","_callee6","request2","req2Response","_context6","_ref6","_callee5","request3","req3Response","_context5","_ref7","_callee4","request4","req4Response","_context4","DashboardTotalDayCount","_ref8","_callee3","request5","req5Response","ModuleName","_context3","_ref9","_callee2","request6","req6Response","RunTimeCheck","_context2","_ref10","_callee","request7","req7Response","_context","stop","apply","req7","req6","req5","req4","req3","req2","GetLoaderData","scrollTo","event","_this2","PreviousEnv","onchangeenvvalue","target","includes","_ref11","_callee8","Req1","Response1","_context8","Request1","_ref12","_callee9","_context9","_ref13","_callee12","_context12","_ref14","_callee11","Req2","Response2","_context11","_ref15","_callee10","Req3","Response3","_context10","Request3","Request2","HtmlLastResultResultAPI","_ref16","_callee13","ORResponse","ORJson","htmlfileName","_context13","toLowerCase","servermessage","open","HTMLLastResult","htmlenv","trim","executionDate","executionTime","Month","Dateformat","split","_this3","_ref17","_callee14","_context14","_ref18","_callee15","_context15","_this4","API","_ref19","_callee16","_context16","_this$state","tpass","postdetails","totalpass","error","tFail","totalfail","SummaryPass","SummaryFail","test1","testData","finalItem","GetAllModule","test2","GetAllPass","test3","GetAllFail","components_Page__WEBPACK_IMPORTED_MODULE_8__","react_loader_spinner__WEBPACK_IMPORTED_MODULE_22___default","height","width","timeout","visible","reactstrap__WEBPACK_IMPORTED_MODULE_12__","reactstrap__WEBPACK_IMPORTED_MODULE_13__","lg","md","sm","xs","components_Widget__WEBPACK_IMPORTED_MODULE_9__","try","totaltestscripts","totalcomponents","totalcustomfunction","onClick","OpenHTMLfileForLastResults","bind","lastresult","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","row","reactstrap__WEBPACK_IMPORTED_MODULE_19__","for","reactstrap__WEBPACK_IMPORTED_MODULE_20__","defaultValue","text","onChange","updateENV","updateExecutionDate","graphPopulateBasedOnExecutionTime","xl","OpenHTMLfilebasedonDateandTime","react_chartjs_2__WEBPACK_IMPORTED_MODULE_10__","scales","xAxes","scaleLabel","display","yAxes","stacked","ticks","beginAtZero","React"],"mappings":"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","file":"static/js/21.cc6a87b5.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardText, CardTitle } from 'reactstrap';\nimport Typography from '../Typography';\n\nconst NumberWidget = ({\n  title,\n  subtitle,\n  number,\n  color,\n  progress: { value, label },\n  ...restProps\n}) => {\n  return (\n    <Card body {...restProps}>\n      <div className=\"d-flex justify-content-between\">\n        <CardText tag=\"div\">\n          <Typography className=\"mb-0\">\n            <strong>{title}</strong>\n          </Typography>\n          <Typography className=\"mb-0 text-muted small\">{subtitle}</Typography>\n        </CardText>\n        <CardTitle className={`text-${color}`}>{number}</CardTitle>\n      </div>\n    </Card>\n  );\n};\n\nNumberWidget.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string,\n  number: PropTypes.oneOfType([\n    PropTypes.string.isRequired,\n    PropTypes.number.isRequired,\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n    'light',\n    'dark',\n  ]),\n  progress: PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string,\n  }),\n};\n\nNumberWidget.defaultProps = {\n  title: '',\n  subtitle: '',\n  number: 0,\n  color: 'primary',\n  progress: {\n    value: 0,\n    label: '',\n  },\n};\n\nexport default NumberWidget;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\n\nconst IconWidget = ({\n  bgColor,\n  icon: Icon,\n  iconProps,\n  title,\n  subtitle,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('cr-widget', className, {\n    [`bg-${bgColor}`]: bgColor,\n  });\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"cr-widget__icon\">\n        <Icon size={50} {...iconProps} />\n      </CardBody>\n      <CardBody>\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n      </CardBody>\n    </Card>\n  );\n};\n\nIconWidget.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.component,\n  iconProps: PropTypes.object,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n};\n\nIconWidget.defaultProps = {\n  bgColor: 'primary',\n  icon: 'span',\n  iconProps: { size: 50 },\n};\n\nexport default IconWidget;\n","export { default as NumberWidget } from './NumberWidget';\nexport { default as IconWidget } from './IconWidget';\n","import Page from 'components/Page';\nimport {NumberWidget } from 'components/Widget';\nimport {Pie } from 'react-chartjs-2';\nimport React from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n} from 'reactstrap';\nimport {\n  Form,\n  FormGroup,\n  Input,\n  Label,\n} \nfrom 'reactstrap';\nimport { getColor } from 'utils/colors';\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\nvar APIBasePath= window.ENV.APIURL;\nvar ReportPublishPath= window.ENV.ReportURL;\n//var APIBasePath ='http://localhost:49656/api/';\n//var ReportPublishPath ='http://192.168.1.42:8887/';\n\nfunction GetPieChart(summaryPass,summaryFail) {\n  return {\n    datasets: [\n      {\n        data: [summaryPass, summaryFail],\n        backgroundColor: [\n          getColor('success'),\n          getColor('danger'),\n        ],\n      },\n    ],\n    labels: ['PASS', 'FAIL'],\n  };\n}\n\nfunction GetListvalueFromJsonResponce(options) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n\t));\n\treturn allitem;\n}\n\nfunction GetLineChart(Component=[],summaryPass={},summaryFail={}) {\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        data: [\n          ...summaryPass,\n        ],\n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        data: [\n          ...summaryFail,\n        ],\n      },\n    ],\n  };\n}\n\nfunction GetBarChart(Component=[],summaryPass={},summaryFail={}) {\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        type: 'bar',\n        fill: true,\n        data: [\n          ...summaryPass,\n        ],\n        \n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        type: 'bar',\n        fill: true,\n        data: [\n          ...summaryFail,\n        ],\n      },\n    ],\n  };\n}\nfunction genLineDataforModuleFail(Component=[],summaryPass={},summaryFail={}){\n  return {\n    labels: Component,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        data: summaryPass,\n        fill: false\n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        data: summaryFail,\n        fill: false\n      },\n    ],\n  };\n};\n\nfunction Options({ options }) {\n    return (\n        options.map(option => \n                    <option >{option.Environment}</option>)\n                   );\n}\n\nfunction DateOptions({ options }) {\n  let allitem = []\n  for (let i = 0; i < options.length; i++) \n  {\n    allitem.push(options[i]);\n    \n  }\n  return (\n          allitem.map((i,index) => \n          <option >{allitem[index]}</option>)\n        );\n  \n}\nfunction TimeOptions({ options }) {\n  return (\n          Object.keys(options).map((key)  => \n          <option >{key}</option>)\n        );\n  \n}\nfunction GetAllModule(testData){\n  let allitem = []\n  let finalItem =[]\n     Object.keys(testData).map((key) => (\n      allitem.push(key)\n    ));\n\n    for (let i = 0; i < allitem.length-2; i++) \n    {\n      finalItem.push(allitem[i])\n    }\n  return (\n    finalItem\n  );\n}\n\nfunction GetAllPass(testData){\n  let allitem = []\n  let finalItem =[]\n     Object.keys(testData).map((key) => (\n      allitem.push(testData[key].split('|')[0])\n    ));\n    for (let i = 0; i < allitem.length-2; i++) \n    {\n      finalItem.push(allitem[i])\n    }\n  return (\n    finalItem\n  );\n}\n\nfunction GetAllFail(testData){\n  let allitem = []\n  let finalItem =[]\n     Object.keys(testData).map((key) => (\n      allitem.push(testData[key].split('|')[1])\n    ));\n    for (let i = 0; i < allitem.length-2; i++) \n    {\n      finalItem.push(allitem[i])\n    }\n  return (\n    finalItem\n  );\n}\n\nclass DashboardPage extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      items: [],\n      summary: [],\n      dashboardTotalDays:[],\n      defaultEnv:'',\n      ENV:'',\n      EXECUTIONDATE:'',\n      executionDateList:[],\n      EXECUTIONHTMLTime:'',\n      allModule :[],\n      allModuleName:[],\n      PassModulewise:[],\n      allPassModuleWise:[],\n      FailModulewise:[],\n      allFailModuleWise:[],\n      ConfigurationFile:[],\n      CommonTestData:[],\n      loader:true,\n\n    }\n    const GetLoaderData = async () => \n    {\n      const homepage = await fetch(APIBasePath+'dashboard');\n      const homepageResponse = await homepage.json();\n      if(homepageResponse.success)\n      {\n          this.setState({ConfigurationFile:homepageResponse.Configuration});\n          this.setState({CommonTestData:homepageResponse.CommonTestData});\n          this.setState({defaultEnv:this.state.ConfigurationFile.DefaultEnvironment})\n          this.setState({ENV:this.state.ConfigurationFile.DefaultEnvironment})\n          this.setState({EXECUTIONDATE:'Last '+this.state.ConfigurationFile.DashboardHistoryCount+' Execution Results'})\n          // Request 2\n        const req2 = async () => \n        {\n          const request2 = await fetch(APIBasePath+'as')\n          const req2Response = await request2.json();\n          this.setState({items:req2Response})\n          // Request 3\n          const req3 = async () => \n          {\n            const request3 = await fetch(APIBasePath+'summary?env='+this.state.ConfigurationFile.DefaultEnvironment+'&edate=Last '+this.state.ConfigurationFile.DashboardHistoryCount+' Execution Results')\n            const req3Response = await request3.json();\n            this.setState({summary:req3Response})\n            // Request 4\n            const req4 = async () => \n            {\n              const request4 = await fetch(APIBasePath+'summary?dashboardtotaldays='+this.state.ConfigurationFile.DashboardTotalDayCount)\n              const req4Response = await request4.json();\n              this.setState({dashboardTotalDays:GetListvalueFromJsonResponce(req4Response)})\n              // Request 5\n              const req5 = async () => \n              {\n                const request5 = await fetch(APIBasePath+'testcase?moduleName=')\n                const req5Response = await request5.json();\n                this.setState({allModuleName:req5Response})\n                var ModuleName = GetListvalueFromJsonResponce(this.state.allModuleName)\n                this.setState({allModule:ModuleName});\n                 // Request 6\n                const req6 = async () => \n                {\n                  const request6 = await fetch(APIBasePath+'dashboard?env='+this.state.ENV+'&histortyCount='+this.state.ConfigurationFile.DashboardHistoryCount+'&id=0')\n                  const req6Response = await request6.json();\n                  this.setState({PassModulewise:req6Response})\n                  var RunTimeCheck = GetListvalueFromJsonResponce(this.state.PassModulewise)\n                  this.setState({allPassModuleWise:RunTimeCheck});\n                   // Request 7\n                  const req7 = async () => \n                  {\n                    const request7 = await fetch(APIBasePath+'dashboard?env='+this.state.ENV+'&histortyCount='+this.state.ConfigurationFile.DashboardHistoryCount+'&id=1')\n                    const req7Response = await request7.json();\n                    this.setState({FailModulewise:req7Response})\n                    var RunTimeCheck = GetListvalueFromJsonResponce(this.state.FailModulewise)\n                    this.setState({allFailModuleWise:RunTimeCheck});\n                    this.setState({loader:false})\n                  }\n                  req7();\n                }\n                req6();\n              }\n              req5();\n            }\n            req4();\n          }\n          req3();\n        }\n        req2();\n      }\n    }\n    GetLoaderData();\n    \n   // this is needed, because InfiniteCalendar forces window scroll\n     window.scrollTo(0, 0);\n  }\n  \n  updateENV(event)\n  {\n    var PreviousEnv = this.state.ENV;\n    var onchangeenvvalue = event.target.value;\n    this.setState({ENV : onchangeenvvalue})\n    if(PreviousEnv ===onchangeenvvalue)\n    {\n      return;\n    }\n    if(this.state.EXECUTIONDATE.includes('Execution Results'))\n    {\n      this.setState({executionDateList : ''})\n      this.setState({loader:true})\n      const Request1 = async () => \n      {\n        const Req1 = await fetch(APIBasePath+'summary?env='+onchangeenvvalue+'&edate=Last '+this.state.ConfigurationFile.DashboardHistoryCount+' Execution Results')\n        const Response1 = await Req1.json();\n        this.setState({summary:Response1})\n        this.setState({loader:false})\n      }\n      Request1();\n      \n    }\n    else\n    {\n      this.setState({loader:true})\n      const Request1 = async () => \n      {\n        const Req1 = await fetch(APIBasePath+'summary?env='+onchangeenvvalue+'&executiondate='+this.state.EXECUTIONDATE)\n        const Response1 = await Req1.json();\n        this.setState({executionDateList:Response1})\n        this.setState({loader:false})\n      }\n      Request1();\n\n    }\n    if(PreviousEnv !==onchangeenvvalue)\n    {\n      this.setState({loader:true})\n      const Request1 = async () => \n      {\n        const Req1 = await fetch(APIBasePath+'dashboard?env='+onchangeenvvalue+'&histortyCount='+this.state.ConfigurationFile.DashboardHistoryCount+'&id=0')\n        const Response1 = await Req1.json();\n        this.setState({PassModulewise:Response1})\n        var RunTimeCheck = GetListvalueFromJsonResponce(this.state.PassModulewise)\n        this.setState({allPassModuleWise:RunTimeCheck});\n        const Request2 = async () => \n        {\n          const Req2 = await fetch(APIBasePath+'dashboard?env='+onchangeenvvalue+'&histortyCount='+this.state.ConfigurationFile.DashboardHistoryCount+'&id=1')\n          const Response2 = await Req2.json();\n          this.setState({FailModulewise:Response2})\n          var RunTimeCheck = GetListvalueFromJsonResponce(this.state.FailModulewise)\n          this.setState({allFailModuleWise:RunTimeCheck});\n          const Request3 = async () => \n          {\n            const Req3 = await fetch(APIBasePath+'testcase?moduleName=')\n            const Response3 = await Req3.json();\n            this.setState({allModuleName:Response3})\n            var ModuleName = GetListvalueFromJsonResponce(this.state.allModuleName)\n            this.setState({allModule:ModuleName});\n            this.setState({loader:false})\n          }\n          Request3();\n        }\n        Request2();\n      }\n      Request1();\n    }\n\n  }\n\n    OpenHTMLfileForLastResults()\n    {\n      var HtmlLastResultResultAPI = APIBasePath+'report?id=0'\n      //var HtmlLastResultResultAPI = 'http://localhost:49656/api/report?id=0'\n      const HTMLLastResult = async () => \n      {\n        const ORResponse = await fetch(HtmlLastResultResultAPI);\n        const ORJson = await ORResponse.json();\n        if(ORJson.success.toLowerCase()==='true')\n        {\n          var htmlfileName= ORJson.servermessage;\n          window.open(ReportPublishPath+'TestSuiteSummaryfile/'+htmlfileName);\n        }\n        \n      }\n      HTMLLastResult();\n      \n    }\n\n    OpenHTMLfilebasedonDateandTime()\n    {\n        var htmlenv = this.state.ENV;\n        if(htmlenv.trim()===\"\")\n        {\n          return;\n        }\n        var executionDate =this.state.EXECUTIONDATE;\n        if(executionDate.trim()==='Last '+this.state.ConfigurationFile.DashboardHistoryCount+' Execution Results')\n        {\n          return;;\n        }\n        if(executionDate.trim()===\"\")\n        {\n          return;\n        }\n        var executionTime =this.state.EXECUTIONHTMLTime;\n        if(executionTime.trim()===\"\")\n        {\n          return;\n        }\n        var Month =''\n        var Dateformat = executionDate.toString().split(' ');\n        switch(Dateformat[1])\n        {\n            case\"Jan\":\n            Month=\"01\";\n            break;\n            case\"Feb\":\n            Month=\"02\";\n            break;\n            case\"Mar\":\n            Month=\"03\";\n            break;\n            case\"Apr\":\n            Month=\"04\";\n            break;\n            case\"May\":\n            Month=\"05\";\n            break;\n            case\"Jun\":\n            Month=\"06\";\n            break;\n            case\"Jul\":\n            Month=\"07\";\n            break;\n            case\"Aug\":\n            Month=\"08\";\n            break;\n            case\"Sep\":\n            Month=\"09\";\n            break;\n            case\"Oct\":\n            Month=\"10\";\n            break;\n            case\"Nov\":\n            Month=\"11\";\n            break;\n            case\"Dec\":\n            Month=\"12\";\n            break;\n            default:\n              break;\n\n        }\n        var Monthformated=Month+'-'+Dateformat[0]+'-'+Dateformat[2];\n        var htmlfileName='TestSummary_'+htmlenv+'_'+Monthformated+'_'+executionTime+'.html'\n        window.open(ReportPublishPath+'TestSuiteSummaryfile/'+htmlenv+'/'+htmlfileName);\n    }\n    updateExecutionDate(event)\n    {\n      var executionDate = event.target.value;\n      this.setState({EXECUTIONDATE : event.target.value})\n      if(executionDate.includes('Execution Results'))\n      {\n        this.setState({executionDateList : ''})\n        this.setState({loader:true})\n        const Request1 = async () => \n        {\n          const Req1 = await fetch(APIBasePath+'summary?env='+this.state.ENV+'&edate=Last '+this.state.ConfigurationFile.DashboardHistoryCount+' Execution Results')\n          const Response1 = await Req1.json();\n          this.setState({summary:Response1})\n          this.setState({loader:false})\n        }\n        Request1();\n      }\n      else\n      {\n        this.setState({loader:true})\n        const Request1 = async () => \n        {\n          const Req1 = await fetch(APIBasePath+'summary?env='+this.state.ENV+'&executiondate='+executionDate)\n          const Response1 = await Req1.json();\n          this.setState({executionDateList:Response1})\n          this.setState({loader:false})\n        }\n        Request1();\n      \n      }\n    }\n    graphPopulateBasedOnExecutionTime(event)\n    {\n      var executionTime = event.target.value;\n      this.setState({EXECUTIONHTMLTime:executionTime});\n      var API = APIBasePath+'summary?env='+this.state.ENV+'&edate='+this.state.EXECUTIONDATE+'&etime='+executionTime;\n      this.setState({loader:true})\n      const Request1 = async () => \n      {\n        const Req1 = await fetch(API)\n        const Response1 = await Req1.json();\n        this.setState({summary:Response1})\n        this.setState({loader:false})\n      }\n      Request1();\n    }\n  render() {\n    \n    var {items,summary,defaultEnv,executionDateList} = this.state;\n    var tpass=0;\n    try{\n     tpass=items.map((postdetails,index)=> {\n                return postdetails.totalpass\n               })\n              }catch(error)\n              {}\n      var tFail=0;\n      try{\n     tFail=items.map((postdetails,index)=> {\n    return postdetails.totalfail\n    })}\n    catch(error)\n    {}\n    var summaryPass = summary.SummaryPass;\n    var summaryFail = summary.SummaryFail;\n    var test1 = GetAllModule(summary);\n    var test2 =GetAllPass(summary);\n    var test3 =GetAllFail(summary);\n    return (\n      <Page\n        className=\"DashboardPage\"\n        title=\"Dashboard\"\n        breadcrumbs={[{ name: 'Dashboard', active: true }]}\n      >\n         <Loader \n         type=\"ThreeDots\"\n         color=\"#00BFFF\"\n         height={50}\n         width={100}\n         timeout={120000} //3 secs\n         visible = {this.state.loader}\n        />\n        <Row>\n\t\t       <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Test Sctipts\"\n              try\n              number={items.map((postdetails,index)=> {\n                return postdetails.totaltestscripts\n               })}\n              color=\"secondary\"\n            />\n            </Col>\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Components\"\n              number={items.map((postdetails,index)=> {\n                return postdetails.totalcomponents\n               })}\n              color=\"secondary\"\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            <NumberWidget\n              title=\"Total Custom Function\"\n              number={items.map((postdetails,index)=> {\n                return postdetails.totalcustomfunction\n               })}\n              color=\"secondary\"\n            />\n          </Col>\n\n          <Col lg={3} md={6} sm={6} xs={12}>\n            < NumberWidget onClick={this.OpenHTMLfileForLastResults.bind(this)}\n              title=\"Last Results\"\n              subtitle={\"PASS: \" + tpass+ \" FAIL: \"+tFail}\n                number=  {items.map((postdetails,index)=> {\n                return postdetails.lastresult\n               })}\n              color=\"secondary\"\n              />\n          </Col>\n        </Row>\n      <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Selection Citieria</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                   Environment*\n                  </Label>\n                  <Col>\n                    <Input type=\"select\" name=\"env\" defaultValue = {defaultEnv} value={this.state.text} onChange={this.updateENV.bind(this)}>\n\t\t\t\t\t          <Options options={this.state.CommonTestData} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                    Execution Summary*\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"executionsummary\" value={this.state.text} onChange={this.updateExecutionDate.bind(this)}>\n\t\t\t\t\t          <option>Last {this.state.ConfigurationFile.DashboardHistoryCount} Execution Results</option>\n                    <DateOptions options={this.state.dashboardTotalDays} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup row>\n                  <Label for=\"exampleSelect\" sm={4}>\n                    Execution Time\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"executiontime\" defaultValue = \"\" value={this.state.text} onChange={this.graphPopulateBasedOnExecutionTime.bind(this)}>\n                    <option></option>\n                    <TimeOptions options={executionDateList} />\n                    </Input>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t <Col xl={6} >\n          <Card>\n            <CardHeader>Total Pass Fail Count</CardHeader>\n            <CardBody>\n\t\t\t  <Col onClick={this.OpenHTMLfilebasedonDateandTime.bind(this)}>\n              <Pie  data={GetPieChart(summaryPass,summaryFail)} />\n\t\t\t  </Col>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n        <Row>\n        <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>\n                Execution Status \n                <small> Last {this.state.ConfigurationFile.DashboardHistoryCount} Results</small>\n              </CardHeader>\n            <CardBody>\n              <Line\n                data={GetLineChart(test1,test2,test3)}\n                options={{\n                  scales: {\n                    xAxes: [\n                      {\n                        scaleLabel: {\n                          display: true,\n                        },\n                      },\n                    ],\n                    yAxes: [\n                      {\n                        stacked: true,\n                        scaleLabel: {\n                          display: true,\n                        },\n                      },\n                    ],\n                  },\n                }}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Execution Summary\n            <small> Last {this.state.ConfigurationFile.DashboardHistoryCount} Results</small>\n            </CardHeader>\n            <CardBody>\n              <Bar data={GetBarChart(test1,test2,test3)} \n              options={{\n                scales: {\n                  yAxes: [{\n                    ticks: {\n                      beginAtZero: true\n                    }\n                  }]\n                },\n              }}\n              />\n            </CardBody>\n          </Card>\n        </Col>\n        <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Module Pass/Fail Graph\n            <small> Last {this.state.ConfigurationFile.DashboardHistoryCount} Results</small>\n            </CardHeader>\n            <CardBody>\n            <Line data={genLineDataforModuleFail(this.state.allModule,this.state.allPassModuleWise,this.state.allFailModuleWise)} />\n            </CardBody>\n          </Card>\n        </Col>\n        </Row>\n      </Page>\n    );\n  }\n}\nexport default DashboardPage;\n"],"sourceRoot":""}
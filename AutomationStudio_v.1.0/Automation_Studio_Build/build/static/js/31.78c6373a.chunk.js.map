{"version":3,"sources":["components/Typography.js","components/Page.js","assets/img/bg/deleterow.JPG","assets/img/bg/addnewrow.JPG","pages/TestData.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","display-1","display-2","display-3","display-4","p","lead","blockquote","Typography","_ref","TypoComp","Tag","tag","className","type","restProps","Object","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","classes","classNames","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","assign","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","b","react__WEBPACK_IMPORTED_MODULE_1___default","e","_Typography__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_4__","reactstrap__WEBPACK_IMPORTED_MODULE_5__","length","map","_ref2","index","name","active","key","module","exports","__webpack_require__","APIBasePath","window","ENV","APIURL","Options","options","option","react__WEBPACK_IMPORTED_MODULE_10___default","Environment","GetListOfListItemforCommonItem","JsonItems","count","keys","CommonDataItem","i","keyName","testdata","id","commonKeyName","commonKeyValue","push","GetAllModule","TestData","props","_this","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__","this","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_6__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_7__","call","addNewCommonData","state","modEnv","trim","ItemCount","setState","modal","modalValidationText","loader","lastOneId","concat","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_3__","checkmodEnv","deleteCommonData","allItem","selectedrowid","selectedCommonID","commontestDataItems","filter","m","handleOnSelect","row","isSelect","selectedrow","handleOnSelectForTestData","selectedTestData","addNewTestDataRow","ItemList","testDataItemrowList","ColList","testDatacolumns","loaderTestData","selectedID","UpdatedRow","NewItemContent","parseInt","error","deleteTestDataRow","testData","toggle","modalType","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","envEnv","testdataEnv","checkenvEnv","envCopy","checkenvCopy","envRename","checkenvRename","CommonDataTotalSize","CommonTestDataChange","testDataModule","allModuleName","checkTestDataEnv","checkTestDataModule","PreviousTestDataState","CommonTestData","_ref3","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","F_Automation_Studio_Practice_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","homepage","homepageResponse","wrap","_context","prev","next","fetch","sent","json","stop","apply","arguments","GetLoaderData","event","target","value","_this2","tesEnv","tesModule","Message","NewItemList","newContent","j","text","APIBody","JSON","stringify","API","requestOptions","method","headers","Accept","Content-type","body","_ref4","_callee2","APIResponse","APIResponseJson","_context2","abrupt","servermessage","SaveTestDataRequest","_this3","TEnv","oldEnv","toString","_ref5","_callee3","ModuleResponce","ModuleList","_context3","GetModule","_this4","TestDModule","OldModule","keyValNew","TestEn","TotalHeader","testDataFile","_ref6","_callee4","Req1","Response1","allTestID","allTestIDcontent","TestDataFromID","testDataHeaderCol","_i5","Item","allRowItem","counter","_i6","TestID","CheckData","TestDataIteration1","_j","RowList","k","_context4","includes","dataField","undefined","err","Request1","envcopyvalue","toLowerCase","_this5","env","ORAPI","_ref7","_callee5","ORResponse","ORJson","_context5","success","DeleteEnvReq","_this6","ExceptionMessage","envName","_ref8","_callee6","_context6","NewEnvCopy","_this7","commonTestDataItem","CommonJObject","ORjson","_ref9","_callee7","_context7","commonDataRequest","_this8","onchangeenvvalue","URL","_ref10","_callee8","_context8","_this9","RenameEnv","_ref11","_callee9","_context9","_this10","selectRow","mode","onSelect","selectRowforTestData","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","columns","headerStyle","width","Cell","textFilter","validator","newValue","column","valid","message","totalCount","components_Page__WEBPACK_IMPORTED_MODULE_9__","react_loader_spinner__WEBPACK_IMPORTED_MODULE_28___default","color","height","timeout","visible","reactstrap__WEBPACK_IMPORTED_MODULE_13__","reactstrap__WEBPACK_IMPORTED_MODULE_14__","lg","md","sm","xs","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","inline","reactstrap__WEBPACK_IMPORTED_MODULE_19__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","for","reactstrap__WEBPACK_IMPORTED_MODULE_21__","invalid","onChange","SelectenvEnv","bind","selected","reactstrap__WEBPACK_IMPORTED_MODULE_22__","onClick","DeleteEnv","reactstrap__WEBPACK_IMPORTED_MODULE_23__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_24__","reactstrap__WEBPACK_IMPORTED_MODULE_25__","reactstrap__WEBPACK_IMPORTED_MODULE_26__","placeholder","SelectenvCopy","CreateNewEnvCopy","SelectenvRename","SaveCommonTestData","SelectmodEnv","reactstrap__WEBPACK_IMPORTED_MODULE_27__","src","bg1Image","style","bg3Image","react_bootstrap_table_next__WEBPACK_IMPORTED_MODULE_30___default","keyField","data","striped","hover","condensed","pagination","paginationFactory","rowEvents","rowIndex","onDataSizeChange","handleDataChange","filterFactory","cellEdit","cellEditFactory","blurToSave","afterSaveCell","oldValue","SaveModuleTestData","SelectTestDataEnv","SelectTestDataModule","React","Component"],"mappings":"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","file":"static/js/31.78c6373a.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","module.exports = __webpack_public_path__ + \"static/media/deleterow.9eb1ed86.JPG\";","module.exports = __webpack_public_path__ + \"static/media/addnewrow.11af4dc5.JPG\";","import Page from 'components/Page';\nimport React from 'react';\nimport bg3Image from 'assets/img/bg/deleterow.JPG';\nimport bg1Image from 'assets/img/bg/addnewrow.JPG';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  CardImg,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nvar APIBasePath= window.ENV.APIURL;\n\nfunction Options({ options }) {\n    return (\n        options.map(option => \n                    <option key={option.Environment}>                                   \n                    {option.Environment}\n                    </option>)\n                   );\n}\n\nfunction GetListOfListItemforCommonItem(JsonItems) \n{\n  let count = Object.keys(JsonItems).length;\n  let CommonDataItem=[];\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(JsonItems)[i-1];\n\tvar keyVal =JsonItems[keyName];\n\tvar  testdata={id:i,commonKeyName:keyName,commonKeyValue:keyVal};\n\tCommonDataItem.push(testdata);\n  }\n  return CommonDataItem;\n}\nfunction GetAllModule({ options }) {\n\n\treturn (\n\t  Object.keys(options).map((key)  => \n\t  <option >{options[key]}</option>)\n\t);\n\t\n  }\nclass TestData extends React.Component{\n\n\tconstructor(props)\n\t{\n\t\tsuper(props);\n\t\tthis.state=\n\t\t{\n\t\t\tenvEnv:'',\n\t\t\ttestdataEnv:'',\n\t\t\tcheckenvEnv:false,\n\t\t\tenvCopy:'',\n\t\t\tcheckenvCopy:false,\n\t\t\tenvRename:'',\n\t\t\tcheckenvRename:false,\n\t\t\tCommonDataItem: [],\n\t\t\tmodEnv:'',\n\t\t\tcheckmodEnv:false,\n\t\t\tCommonDataTotalSize:0,\n\t\t\tCommonTestDataChange: false,\n\t\t\tselectedCommonID:0,\n\t\t\tselectedTestData:0,\n\t\t\ttestDataModule:'',\n\t\t\tallModuleName: [],\n\t\t\ttestDatacolumns :[{}],\n\t\t\ttestDataItemrowList:[],\n\t\t\tcheckTestDataEnv:false,\n\t\t\tcheckTestDataModule:false,\n\t\t\tPreviousTestDataState:[],\n\t\t\tCommonTestData:[],\n\t\t\tloader:true,\n\t\t\tloaderTestData:false,\n\t\t}\n\n\t\tconst GetLoaderData = async () => \n\t\t{\n\t\t  const homepage = await fetch(APIBasePath+'dashboard');\n\t\t  const homepageResponse = await homepage.json();\n\t\t  this.setState({CommonTestData:homepageResponse.CommonTestData});\n\t\t  this.setState({loader:false});\n\t\t}\n\t\tGetLoaderData();\n\t\t\n\t}\n\n\tSelectenvEnv(event)\n\t{\n\t  \n\t  this.setState({envEnv: event.target.value})\n\t  \n\t}\n\tSaveModuleTestData()\n\t{\n\t\tvar tesEnv = this.state.testdataEnv;\n\t\tvar tesModule = this.state.testDataModule;\n\t\tvar Message='';\n\t\tif(tesEnv.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({checkTestDataEnv:true})\n\t\t\tMessage='Environment can not be blank';\n\t\t}\n\t\tif(tesModule.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({checkTestDataModule:true})\n\t\t\tMessage='Module can not be blank';\n\t\t}\n\t\tif(Message.trim()!==\"\")\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar ItemList = this.state.testDataItemrowList;\n\t\tvar ColList = this.state.testDatacolumns;\n\t\tif(ItemList.length===0)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t    return this.setState({modalValidationText:'Please add the test data information.'});\n\t\t}\n\t\tif(ColList.length===1 || ColList.length===0)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t    return this.setState({modalValidationText:'Please add the test data information.'});\n\t\t}\n\t\tfor(let i=0;i<ItemList.length;i++)\n\t\t{\n\t\t\tvar testIDName= ItemList[i]['testdatacolid1'];\n\t\t\tif(testIDName.trim() ===\"\")\n\t\t\t{\n\t\t\t\tthis.setState({modal:true})\n\t\t\t\treturn this.setState({modalValidationText:'Please add the test data information for record number '+(i+1)+', before saving the record.'});\n\t\t\t}\n\t\t}\n\t\tthis.setState({loaderTestData:true})\n\t\tvar NewItemList=[];\n\t\t\n\t\tfor(let i=0;i<ItemList.length;i++)\n\t\t{\n\t\t\tvar newContent={}\n\t\t\tnewContent['id']=i+1;\n\t\t\tfor(let j=1;j<ColList.length;j++)\n\t\t\t{\n\t\t\t\tnewContent[ColList[j].text]=ItemList[i]['testdatacolid'+j]\n\t\t\t}\n\t\t\tNewItemList.push(newContent);\n\t\t}\n\t\t//@ Post Request Send for Save Test Data.\n\t\t//console.log(NewItemList)\n\t\tvar APIBody = JSON.stringify(JSON.stringify(NewItemList))\n\t\t//var APIBody = JSON.stringify({QA:1})\n\t\tvar API =APIBasePath+'testdata?env='+tesEnv+'&module='+tesModule;\n        var requestOptions = {\n          method: 'POST',\n          headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n          body: APIBody\n        };\n        const SaveTestDataRequest = async () => \n        {\n          const APIResponse = await fetch(API,requestOptions);\n\t\t  const APIResponseJson = await APIResponse.json();\n\t\t  this.setState({loaderTestData:false})\n\t\t  this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:APIResponseJson.servermessage})\n          \n          \n        }\n        SaveTestDataRequest();\n\t}\n\tSelectTestDataEnv(event)\n\t{\n\t  var TEnv= event.target.value;\n\t  var oldEnv = this.state.testdataEnv;\n\t  \n\t  this.setState({testdataEnv: TEnv})\n\t  this.setState({checkTestDataEnv:false})\n\t  if(TEnv.trim().toString() !== oldEnv.trim().toString())\n\t  {\n\t\tthis.setState({loaderTestData:true})\n\t\tconst GetModule = async () => \n\t\t{\n\t\t\tconst ModuleResponce = await fetch(APIBasePath+'testcase?moduleName=')\n\t\t\tconst ModuleList = await ModuleResponce.json();\n\t\t\tthis.setState({allModuleName:ModuleList})\n\t\t\tthis.setState({loaderTestData:false})\n\t\t}\n\t\tGetModule();\n\t  }\n\t  \n\t}\n\n\tSelectTestDataModule(event)\n\t{\n\t\tvar TestDModule = event.target.value;\n\t\tvar OldModule = this.state.testDataModule;\n\t\t\n\t\tthis.setState({testDataModule : TestDModule})\n\t\tthis.setState({checkTestDataModule:false})\n\t\tvar keyName= '';\n\t\tvar keyValNew='';\n\t\t//@ Logic For Test Data\n\t\tvar TestEn= this.state.testdataEnv;\n\t\tif(TestDModule.trim().toString() !== OldModule.trim().toString())\n\t\t{\n\t\t\ttry \n\t\t\t{\n\t\t\t  this.setState({loaderTestData:true})\n\t\t\t  this.setState({PreviousTestDataState:[]})\n\t\t\t  var TotalHeader=[];\n\t\t\t  var testDataFile = {};\n\t\t\t  const Request1 = async () => \n\t\t\t  {\n\t\t\t\tconst Req1 = await fetch(APIBasePath+'testdata?env='+TestEn+'&module='+TestDModule)\n\t\t\t\tconst Response1 = await Req1.json();\n\t\t\t\ttestDataFile=Response1;\n\t\t\t\tlet allTestID = Object.keys(testDataFile);\n\t\t\t\tfor(let i=0;i<allTestID.length;i++)\n\t\t\t\t{\n\t\t\t\t  var allTestIDcontent = testDataFile[allTestID[i]][0][1];\n\t\t\t\t  let TestDataFromID= Object.keys(allTestIDcontent);\n\t\t\t\t  for(let j=0;j<TestDataFromID.length;j++)\n\t\t\t\t  {\n\t\t\t\t\t keyName =TestDataFromID[j];\n\t\t\t\t\tif(!TotalHeader.includes(keyName))\n\t\t\t\t\t{\n\t\t\t\t\t  TotalHeader.push(keyName);\n\t\t\t\t\t}\n\t\t\t\t  }\n\t\t\t\t}\n\t\t\t\t//@ Set Header Column\n\t\t\t\tthis.setState({testDatacolumns:[]});\n\t\t\t\tvar testDataHeaderCol= [{dataField: 'id',text: '#'},{dataField: 'testdatacolid1',text: 'TESTID'}];\n\t\t\t\tthis.setState({ testDatacolumns:testDataHeaderCol});\n\t\t\t\tthis.setState({ testDataItemrowList:[]});\n\t\t\t\t\n\t\t\t\tfor(let i=0;i<TotalHeader.length;i++)\n\t\t\t\t{\n\t\t\t\t  var Item={}\n\t\t\t\t  var coldatafiledName='testdatacolid'+(i+2)\n\t\t\t\t  Item={dataField:coldatafiledName,text:TotalHeader[i]}\n\t\t\t\t  testDataHeaderCol.push(Item)\n\t\t\t\t}\n\t\t\t\tthis.setState({ testDatacolumns:testDataHeaderCol});\n  \n\t\t\t\t//@ Set Row Details\n\t\t\t\tvar allRowItem=[];\n\t\t\t\t\n\t\t\t\tvar counter=0;\n\t\t\t\tfor(let i=0;i<allTestID.length;i++)\n\t\t\t\t{\n\t\t\t\t\tvar TestID=allTestID[i];\n\t\t\t\t   var CheckData = testDataFile[TestID][0];\n\t\t\t\t   var TestDataIteration1 = Object.keys(CheckData);\n\t\t\t\t\tfor(let j=0;j<TestDataIteration1.length;j++)\n\t\t\t\t\t{\n\t\t\t\t\t  counter=counter+1;\n\t\t\t\t\t  var RowList={}\n\t\t\t\t\t  RowList['id']=counter;\n\t\t\t\t\t  RowList['testdatacolid1']=TestID;\n\t\t\t\t\t  for(let k=0;k<TotalHeader.length;k++)\n\t\t\t\t\t  {\n\t\t\t\t\t\t   keyName= TotalHeader[k];\n\t\t\t\t\t\t   keyValNew=''\n\t\t\t\t\t\t  try\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\tkeyValNew= CheckData[j+1][keyName];\n\t\t\t\t\t\t   if(keyValNew===undefined)\n\t\t\t\t\t\t   {\n\t\t\t\t\t\t\t  keyValNew='';\n\t\t\t\t\t\t   }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  catch(err)\n\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t  keyValNew='';\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  var colNumber = (k+2);\n\t\t\t\t\t\t  RowList['testdatacolid'+colNumber] = keyValNew\n\t\t\t\t\t  }\n\t\t\t\t\t  allRowItem.push(RowList);\n\t\t\t\t  }\n\t\t\t\t  \n\t\t\t\t}\n\t\t\t   this.setState({ testDataItemrowList: allRowItem});\n\t\t\t   this.setState({PreviousTestDataState:allRowItem})\n\t\t\t   this.setState({loaderTestData:false})\n\t\t\t  }\n\t\t\t  Request1();\n\n\n\t\t\t}\n\t\t\tcatch (err) \n\t\t\t{\n\t\t\t\tthis.setState({testDatacolumns:[]});\n\t\t\t\tthis.setState({ testDataItemrowList:[]});\n\t\t\t\tthis.setState({loaderTestData:false})\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\t\n\t\n\t}\n\tSelectenvCopy(event)\n\t{\n\t  var envcopyvalue = event.target.value;\n\t  \n\t  this.setState({envCopy: event.target.value})\n\t  this.setState({checkenvCopy:false})\n\t  \n\t  var allItem = this.state.CommonTestData\n\t  for(let i=0;i<allItem.length;i++)\n\t  {\n\t\t  if(allItem[i].Environment.toString().trim().toLowerCase()===envcopyvalue.trim().toString().toLowerCase())\n\t\t  {\n\t\t\tthis.setState({checkenvCopy:true})\n\t\t\treturn this.setState({modalValidationText:'Env is already present'})\n\t\t  }\n\t  }\n  \n\t}\n\n\tSelectenvRename(event)\n\t{\n\t  var envcopyvalue=event.target.value;\n\t  \n\t  this.setState({envRename: event.target.value})\n\t  this.setState({checkenvRename:false})\n\t  \n\t  var allItem = this.state.CommonTestData\n\t  for(let i=0;i<allItem.length;i++)\n\t  {\n\t\t  if(allItem[i].Environment.toString().trim().toLowerCase()===envcopyvalue.trim().toString().toLowerCase())\n\t\t  {\n\t\t\tthis.setState({checkenvRename:true})\n\t\t\treturn this.setState({modalValidationText:'Env is already present'})\n\t\t  }\n\t  }\n  \n\t}\n\n\tDeleteEnv()\n\t{\n\t  //var ExceptionMessage='';\n\t  var env= this.state.envEnv\n\t  if(env.trim()===\"\")\n\t  {\n\t\t//ExceptionMessage= ExceptionMessage+ 'Environment* can not be left blank.'\n\t\treturn this.setState({checkenvEnv:true})\n\t  }\n      this.setState({loader:true})\n\t  var ORAPI =APIBasePath+'or?env='+env;\n\t  const DeleteEnvReq = async () => \n\t  {\n\t\tconst ORResponse = await fetch(ORAPI);\n\t\tconst ORJson = await ORResponse.json();\n\t\tif(ORJson.success.toLowerCase()==='true')\n\t\t{\n\t\t  this.setState({loader:true})\n\t\t  this.state.envEnv='';\n\t\t  this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:ORJson.servermessage})\n\t\t}\n\t\telse\n\t\t{\n\t\t  this.setState({loader:true})\n\t\t  this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:ORJson.servermessage})\n\t\t}\n\t\t\n\t\t\n\t  }\n\t  DeleteEnvReq();\n  \n\t}\n\n\tCreateNewEnvCopy()\n\t{\n\t  var ExceptionMessage ='';\n\t  var envName= this.state.envEnv\n\t  var envCopy= this.state.envCopy\n\t  if(envName.trim()===\"\")\n\t  {\n\t\tthis.setState({checkenvEnv:true})\n\t\tExceptionMessage= ExceptionMessage+ 'Environment* can not be left blank.'\n\t  }\n\t  if(envCopy.trim()===\"\")\n\t  {\n\t\tthis.setState({checkenvCopy:true})\n\t\tExceptionMessage= ExceptionMessage+ 'New Env. Copy* can not be left blank.'\n\t  }\n\t  if(ExceptionMessage.trim() !==\"\")\n\t  {\n\t   // this.setState({modal:true})\n\t\treturn this.setState({modalValidationText:ExceptionMessage})\n\t  }\n\t  if(envName.trim().toLowerCase()===envCopy.trim().toLowerCase())\n\t  {\n\t\t//this.setState({modal:true})\n\t\tthis.setState({checkenvCopy:true})\n\t\treturn this.setState({modalValidationText:'No Changes to Save'})\n\t  }\n\t  this.setState({loader:true})\n\t  var allItem = this.state.CommonTestData\n\t  for(let i=0;i<allItem.length;i++)\n\t  {\n\t\t  if(allItem[i].Environment.toString().trim().toLowerCase()===envCopy.trim().toString().toLowerCase())\n\t\t  {\n\t\t\tthis.setState({checkenvCopy:true})\n\t\t\treturn this.setState({modalValidationText:'No Changes to Save'})\n\t\t  }\n\t  }\n\t  var ORAPI =APIBasePath+'or?env='+envName+'&envcopy='+envCopy;\n\t  const NewEnvCopy = async () => \n\t  {\n\t\tconst ORResponse = await fetch(ORAPI);\n\t\tconst ORJson = await ORResponse.json();\n\t\tif(ORJson.success.toLowerCase()==='true')\n\t\t{\n\t\t  this.setState({loader:false})\n\t\t  this.state.envEnv='';\n\t\t  this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:ORJson.servermessage})\n\t\t}\n\t\telse\n\t\t{\n\t\t  this.setState({loader:false})\n\t\t  this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:ORJson.servermessage})\n\t\t}\n\t\t\n\t\t\n\t  }\n\t  NewEnvCopy();\n\t} \n\n\t  SaveCommonTestData()\n\t {\n\t\tvar ExceptionMessage ='';\n\t\tvar envName= this.state.modEnv\n\t\tif(envName.trim()===\"\")\n\t\t{\n\t\t  this.setState({checkmodEnv:true})\n\t\t  ExceptionMessage= ExceptionMessage+ 'Environment* can not be left blank.'\n\t\t}\n\t\tif(ExceptionMessage.trim() !==\"\")\n\t\t{\n\t\t // this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:ExceptionMessage})\n\t\t}\n\t\tif(!this.state.CommonTestDataChange)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'No Changes to Save'})\n\t\t}\n\n\t\t//@ Get all value from Common test data\n\t\tthis.setState({loader:true})\n\t\tvar commonTestDataItem = this.state.CommonDataItem;\n\t\tvar CommonJObject ={};\n\t\tfor(let i=0;i<commonTestDataItem.length;i++)\n\t\t{\n\t\t\tCommonJObject[commonTestDataItem[i].commonKeyName.toString()]=commonTestDataItem[i].commonKeyValue.toString();\n\t\t}\n\t\t\n\t\tvar ORjson = JSON.stringify(CommonJObject)\n\t\tvar ORAPI =APIBasePath+'testdata?env='+envName;\n\t\tvar requestOptions = {\n\t\t  method: 'POST',\n\t\t headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t  body: ORjson\n\t\t};\n\t\tconst commonDataRequest = async () => \n\t\t{\n\t\t  const ORResponse = await fetch(ORAPI,requestOptions);\n\t\t  const ORJson = await ORResponse.json();\n\t\t  this.setState({modal:true})\n\t\t  this.setState({loader:false})\n\t\t  return this.setState({modalValidationText:ORJson.servermessage})\n\t\t}\n\t\tcommonDataRequest();\n\n\t }\n\n\t SelectmodEnv(event){\n\t\tthis.setState({CommonDataItem : []})\n\t\tthis.setState({modEnv : ''})\n\t\tthis.setState({CommonDataTotalSize : 0})\n\t\tthis.setState({checkmodEnv:false})\n\t\tvar onchangeenvvalue = event.target.value;\n\t\tthis.setState({modEnv : event.target.value})\n\t\tthis.setState({loader:true})\n\t\tvar URL =  APIBasePath+'testscript?commonitem='+onchangeenvvalue;\n\t\tconst Request1 = async () => \n\t\t{\n\t\t  const Req1 = await fetch(URL)\n\t\t  const Response1 = await Req1.json();\n\t\t  this.setState({CommonDataItem:GetListOfListItemforCommonItem(Response1)})\n\t\t  this.setState({CommonDataTotalSize:this.state.CommonDataItem.length})\n\t\t  this.setState({loader:false})\n\t\t}\n\t\tRequest1();\n\n\t  }\n\n\tRenameEnv()\n\t{\n\t  var ExceptionMessage ='';\n\t  var envName= this.state.envEnv\n\t  var envCopy= this.state.envRename\n\t  if(envName.trim()===\"\")\n\t  {\n\t\tthis.setState({checkenvEnv:true})\n\t\tExceptionMessage= ExceptionMessage+ 'Environment* can not be left blank.'\n\t  }\n\t  if(envCopy.trim()===\"\")\n\t  {\n\t\tthis.setState({checkenvRename:true})\n\t\tExceptionMessage= ExceptionMessage+ 'Rename Env* can not be left blank.'\n\t  }\n\t  if(ExceptionMessage.trim() !==\"\")\n\t  {\n\t   // this.setState({modal:true})\n\t\treturn this.setState({modalValidationText:ExceptionMessage})\n\t  }\n\t  if(envName.trim().toLowerCase()===envCopy.trim().toLowerCase())\n\t  {\n\t\t//this.setState({modal:true})\n\t\tthis.setState({checkenvRename:true})\n\t\treturn this.setState({modalValidationText:'No Changes to Save'})\n\t  }\n\t  var allItem = this.state.CommonTestData\n\t  for(let i=0;i<allItem.length;i++)\n\t  {\n\t\t  if(allItem[i].Environment.toString().trim().toLowerCase()===envCopy.trim().toString().toLowerCase())\n\t\t  {\n\t\t\tthis.setState({checkenvRename:true})\n\t\t\treturn this.setState({modalValidationText:'Env is already present'})\n\t\t  }\n\t  }\n      this.setState({loader:true})\n\t  var ORAPI =APIBasePath+'or?oldname='+envName+'&newname='+envCopy+'&id=';\n\t  const RenameEnv = async () => \n\t  {\n\t\tconst ORResponse = await fetch(ORAPI);\n\t\tconst ORJson = await ORResponse.json();\n\t\tif(ORJson.success.toLowerCase()==='true')\n\t\t{\n\t\t  this.setState({loader:true})\n\t\t  this.state.envEnv='';\n\t\t  this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:ORJson.servermessage})\n\t\t}\n\t\telse\n\t\t{\n\t\t  this.setState({loader:true})\n\t\t  this.setState({modal:true})\n\t\t  return this.setState({modalValidationText:ORJson.servermessage})\n\t\t}\n\t\t\n\t\t\n\t  }\n\t  RenameEnv();\n\n  \n\t}\n\taddNewCommonData = () => \n\t{\n\t\tvar env = this.state.modEnv;\n\t\tif(env.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({checkmodEnv:true})\n\t\t\treturn;\n\t\t}\n\t\tvar ItemCount =this.state.CommonDataItem.length\n\t\t//console.log(ItemCount);\n\t\tif(ItemCount>0)\n\t\t{\n\t\t\tvar valuecheck = this.state.CommonDataItem[ItemCount-1].commonKeyName\n\t\t\t//console.log(valuecheck);\n\t\t\tif(valuecheck.trim()===\"\")\n\t\t\t{\n\t\t\t\tthis.setState({modal:true})\n\t\t\t    return this.setState({modalValidationText:'Before adding new Common key, add previous Common key.'})\n\t\t\t}\n\t\t}\n\t\tthis.setState({loader:true})\n\t\tvar lastOneId = this.state.CommonDataItem.length + 1;\n\t\tthis.setState({ CommonDataItem: [...this.state.CommonDataItem, {\n\t\t\tid: `${lastOneId}`, commonKeyName: ``,commonKeyValue:``\n\t\t}] });\n\t\tthis.setState({loader:false})\n\t}\n\tdeleteCommonData = () => {\n\n\t\tvar allItem = this.state.CommonDataItem.length;\n\t\tif(allItem===0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar selectedrowid = this.state.selectedCommonID;\n\t\tif(selectedrowid===0)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select record before delete action.'})\n\t\t}\n\t\tthis.setState({loader:true})\n\t\tvar commontestDataItems = this.state.CommonDataItem.filter(m => m.id !== selectedrowid);\n\t\tfor(let i=selectedrowid-1;i<allItem-1;i++)\n\t\t{\n\t\t\tcommontestDataItems[i].id=i+1;\n\t\t}\n\t\tthis.setState({ CommonDataItem: commontestDataItems });\n\t\tthis.setState({ selectedCommonID:selectedrowid });\n\t\tthis.setState({loader:false})\n\t\t\n\n\t  };\n\t  handleOnSelect = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\tvar selectedrow= row.id;\n\t\t\tthis.setState({ selectedCommonID:selectedrow });\n\n\t\t}\n\t}\n\thandleOnSelectForTestData = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\tvar selectedrow= row.id;\n\t\t\tthis.setState({ selectedTestData:selectedrow });\n\n\t\t}\n\t}\n\taddNewTestDataRow = () => \n\t{\n\t\tvar ItemList = this.state.testDataItemrowList;\n\t\tvar ColList = this.state.testDatacolumns;\n\t\tif(ColList.length===1)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(ItemList.length>1)\n\t\t{\n\t\t\tfor(let i=0;i<ItemList.length;i++)\n\t\t\t{\n\t\t\t\tvar testIDName= ItemList[i]['testdatacolid1'];\n\t\t\t\tif(testIDName.trim() ===\"\")\n\t\t\t\t{\n\t\t\t\t\tthis.setState({modal:true})\n\t\t\t        return this.setState({modalValidationText:'Please add the test data information for record number '+(i+1)+', before adding new record.'});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.setState({loaderTestData:true})\n\t\tvar selectedID = this.state.selectedTestData;\n\t\tif(selectedID>ItemList.length)\n\t\t{\n\t\t\tselectedID=0;\n\t\t}\n\t\t//@ Add New Row using variable\n\t\tif(selectedID ===0)\n\t\t{\n\t\t\tselectedID= ItemList.length;\n\t\t}\n\t\tvar UpdatedRow=[]\n\t\tfor(let i=0;i<selectedID;i++)\n\t\t{\n\t\t\tUpdatedRow[i]= this.state.testDataItemrowList[i];\n\t\t}\n\t\t//@ add New Row\n\t\tvar NewItemContent ={};\n\t\ttry\n\t\t{\n\t\tselectedID= parseInt(selectedID.trim())\n\t\t}\n\t\tcatch(error)\n\t\t{}\n\t\tNewItemContent['id']=selectedID+1;\n\t\tNewItemContent['testdatacolid1']=''\n\t\tfor(let i=2;i<ColList.length;i++)\n\t\t{\n\t\t\tvar keyName = 'testdatacolid'+i\n\t\t\tNewItemContent[keyName]='';\n\t\t}\n\t\tUpdatedRow.push(NewItemContent)\n\t\tfor(let i=selectedID;i<ItemList.length;i++)\n\t\t{\n\t\t\tItemList[i]['id']=i+2;\n\t\t\tUpdatedRow.push(ItemList[i]);\n\t\t}\n\t\tthis.setState({ testDataItemrowList: UpdatedRow});\n\t\tthis.setState({loaderTestData:false})\n\n\t}\n\tdeleteTestDataRow = () =>\n\t {\n\t\tvar ItemList = this.state.testDataItemrowList;\n\t\tif(ItemList.length===0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar selectedID = this.state.selectedTestData;\n\t\tif(selectedID===0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({loaderTestData:true})\n\t\tvar testData = this.state.testDataItemrowList.filter(m => m.id !== selectedID);\n\t\tfor(let i=selectedID;i<=testData.length;i++)\n\t\t{\n\t\t\ttestData[i-1]['id']=i;\n\t\t}\n\t\tthis.setState({ testDataItemrowList: testData });\n\t\tthis.setState({selectedTestData:selectedID})\n\t\tthis.setState({loaderTestData:false})\n\t  };\n\n\ttoggle = modalType => () => {\n\t\tif (!modalType) {\n\t\t  return this.setState({\n\t\t\tmodal: !this.state.modal,\n\t\t  });\n\t\t}\n\t\n\t\tthis.setState({\n\t\t  [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n\t\t});\n\t  };\n\t\n\t  render() {\n\t\n\t\tvar {allModuleName} = this.state;\n\t  \n\t\tconst selectRow = {\n\t\t\tmode: 'radio',\n\t\t\tonSelect: this.handleOnSelect\n\t\t\t};\n\t\tconst selectRowforTestData = {\n\t\t\tmode: 'radio',\n\t\t\tonSelect: this.handleOnSelectForTestData\n\t\t\t};\n\t\tconst rowEvents = {\n\t\t\tonClick: (e, row, rowIndex) => {\n\t\t\t\t//console.log(`clicked on row with index: ${rowIndex}`);\n\t\t}};\n\t\tconst afterSaveCell=(oldValue, newValue) =>\n\t\t{\n\t\t\tthis.setState({CommonTestDataChange:true})\n\t\t};\n\t\tconst options = {\n\t\tsizePerPage: 20,\n\t\thideSizePerPage: true,\n\t\thidePageListOnlyOnePage: true\n\t\t};\n\t\tvar columns = [\n\t\t\t{\n\t\t\t  dataField: 'id',\n\t\t\t  text: '#',\n\t\t\t  headerStyle: { width: '40px' },\n\t\t\t  Cell: row => (\n\t\t\t\t<div>\n\t\t\t\t  <span title={ row.value }>{ row.value }</span>\n\t\t\t\t</div>\n\t\t\t  )\n\t\t\t},\n\t\t\t{\n\t\t\t  dataField: 'commonKeyName',\n\t\t\t  text: 'Key Name*',\n\t\t\t  filter: textFilter(),\n\t\t\t  validator: (newValue, row, column) => {\n\t\t\t\tif (newValue.trim()==='') {\n\t\t\t\t  return {\n\t\t\t\t\tvalid: false,\n\t\t\t\t\tmessage: 'Key Name* can not be blank.'\n\t\t\t\t  };\n\t\t\t\t}\n\t\t\t\tvar totalCount = this.state.CommonDataItem.length;\n\t\t\t\tfor(let i=0;i<totalCount;i++)\n\t\t\t\t{\n\t\t\t\t\tvar ItemName = this.state.CommonDataItem[i].commonKeyName;\n\t\t\t\t\tif(ItemName.trim().toLowerCase()===newValue.trim().toLowerCase())\n\t\t\t\t\t{\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tvalid: false,\n\t\t\t\t\t\t\tmessage: 'Key Name* can not be duplicate.'\n\t\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t  }\n\t\t\t},\n\t\t\t{\n\t\t\t\tdataField: 'commonKeyValue',\n\t\t\t\ttext: 'Key Value',\n\t\t\t\tfilter: textFilter()\n\t\t\t  }\n\t\t  ];\n  return (\n    <Page title=\"Test Data\" breadcrumbs={[{ name: 'Test Data', active: true }]}>\n\t\t<Loader \n         type=\"ThreeDots\"\n         color=\"#00BFFF\"\n         height={50}\n         width={100}\n         timeout={120000} //3 secs\n         visible = {this.state.loader}\n        />\n\t\t  <Row>\n\t\t  <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Update Environment</CardHeader>\n            <CardBody>\n              <Form inline>\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" >\n                    Environment*\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.checkenvEnv} type=\"select\" name=\"envEnv\" value={this.state.envEnv} onChange={this.SelectenvEnv.bind(this)}>\n\t\t\t\t\t<option selected=\"selected\">{this.state.envEnv}</option>\n\t\t\t\t\t<Options options={this.state.CommonTestData} />\n\t\t\t\t\t</Input>\n                  </Col>\n\t\t\t\t</FormGroup>\n\t\t\t\t<Col>\n\t\t\t\t  <Button onClick={this.DeleteEnv.bind(this)} color=\"primary\" name=\"envDelete\" >Delete</Button>\n\t\t\t\t  <Modal\n\t\t\t\t\tisOpen={this.state.modal}\n\t\t\t\t\ttoggle={this.toggle()}\n\t\t\t\t\tclassName={this.props.className}>\n\t\t\t\t\t<ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n\t\t\t\t\t<ModalBody >\n\t\t\t\t\t{this.state.modalValidationText}\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle()}>\n\t\t\t\t\t\tOK\n\t\t\t\t\t</Button>\n\t\t\t\t\t</ModalFooter>\n              \t</Modal>\n\t\t\t\t</Col>\n\t\t\t  <FormGroup row>\n                  <Label for=\"exampleSelect\" >\n                    New Env. Copy*\n                  </Label>\n                    <Col >\n                    <Input invalid={this.state.checkenvCopy} value={this.state.envCopy} type=\"input\" name=\"newEnvCopy\" placeholder=\"New env name.\"  onChange={this.SelectenvCopy.bind(this)}/>\n                  </Col>\n              </FormGroup>\n\t\t\t  <Col>\n\t\t\t\t  <Button onClick={this.CreateNewEnvCopy.bind(this)} color=\"primary\" name =\"newEnvCopy\">Save</Button>\n\t\t\t  </Col>\n\t\t\t  <FormGroup row>\n                  <Label for=\"exampleSelect\" >\n                    Rename Env.*\n                  </Label>\n                    <Col >\n                    <Input invalid={this.state.checkenvRename} value={this.state.envRename} type=\"input\" name=\"newEnvName\" placeholder=\"New env name.\" onChange={this.SelectenvRename.bind(this)}/>\n                  </Col>\n              </FormGroup>\n\t\t\t  <Col>\n\t\t\t\t  <Button onClick={this.RenameEnv.bind(this)} color=\"primary\" name =\"newEnvName\">Save</Button>\n\t\t\t  </Col>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Common Test Data \n\t\t\t\t<row>\n\t\t\t\t\t<Button onClick={this.SaveCommonTestData.bind(this)} color=\"primary\" name =\"saveCommonTestData\">Save</Button>\n\t\t\t\t</row>\n\t\t\t</CardHeader>\n\t\t\t<CardHeader>Environment*\n\t\t\t\t<FormGroup row>\n                \t<Col >\n                    \t<Input invalid={this.state.checkmodEnv} type=\"select\" name=\"modEnv\" value={this.state.modEnv} onChange={this.SelectmodEnv.bind(this)}>\n\t\t\t\t\t\t<option selected=\"selected\">{this.state.modEnv}</option>\n\t\t\t\t\t\t<Options options={this.state.CommonTestData} />\n\t\t\t\t\t\t</Input>\n                  \t</Col>\n\t\t\t\t  \t<CardImg\n\t\t\t\t\t className=\"card-img-right\"\n\t\t\t\t\t  src={bg1Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.addNewCommonData() }\n\t\t\t\t\t/>\n\t\t\t\t\t<CardImg\n\t\t\t\t\t  className=\"card-img-right\"\n\t\t\t\t\t  src={bg3Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.deleteCommonData() } \n\t\t\t\t\t/>\n             \t</FormGroup>\n\t\t\t</CardHeader>\n            <CardBody>\n\t\t\t<BootstrapTable\n\t\t\t\tkeyField=\"id\"\n\t\t\t\tdata={ this.state.CommonDataItem }\n\t\t\t\tcolumns={ columns }\n\t\t\t\tstriped\n\t\t\t\thover\n\t\t\t\tcondensed\n\t\t\t\tpagination={ paginationFactory(options) }\n\t\t\t\trowEvents={ rowEvents }\n\t\t\t\tonDataSizeChange={ this.handleDataChange }\n\t\t\t\tfilter={ filterFactory() }\n\t\t\t\tselectRow={ selectRow }\n\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\tmode: 'click',\n\t\t\t\t\tblurToSave: true,\n\t\t\t\t\tafterSaveCell\n\t\t\t\t\t})}\n\t\t\t/>\n            </CardBody>\n          </Card>\n        </Col>\n\t</Row>\n\t  <Row>\n\t  \t<Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Update Test Script Data\n\t\t\t\t<CardImg\n\t\t\t\t\tclassName=\"card-img-right\"\n\t\t\t\t\tsrc={bg1Image}\n\t\t\t\t\tstyle={{ width: 'auto', height: 30 }}\n\t\t\t\t\tonClick={ () => this.addNewTestDataRow() }\n\t\t\t\t\t/>\n\t\t\t\t\t<CardImg\n\t\t\t\t\t\tclassName=\"card-img-right\"\n\t\t\t\t\t\tsrc={bg3Image}\n\t\t\t\t\t\tstyle={{ width: 'auto', height: 30 }}\n\t\t\t\t\t\tonClick={ () => this.deleteTestDataRow() }\n\t\t\t\t\t/>\n\t\t\t\t<Button onClick={this.SaveModuleTestData.bind(this)} color=\"primary\" name =\"saveTestData\">Save</Button>\n\t\t\t\t<Loader \n\t\t\t\ttype=\"ThreeDots\"\n\t\t\t\tcolor=\"#00BFFF\"\n\t\t\t\theight={50}\n\t\t\t\twidth={100}\n\t\t\t\ttimeout={120000} //3 secs\n\t\t\t\tvisible = {this.state.loaderTestData}\n\t\t\t\t/>\n\t\t\t</CardHeader>\n            <CardBody>\n\t\t\t<Form >\n                <FormGroup row>\n                  <Label for=\"exampleSelect\" >\n                    Environment*\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.checkTestDataEnv} type=\"select\" name=\"testdataEnv\" value={this.state.testdataEnv} onChange={this.SelectTestDataEnv.bind(this)}>\n\t\t\t\t\t<option selected=\"selected\">{this.state.testdataEnv}</option>\n\t\t\t\t\t<Options options={this.state.CommonTestData} />\n\t\t\t\t\t</Input>\n                  </Col>\n\t\t\t\t  <Label for=\"exampleSelect\" >\n                    Module*\n                  </Label>\n\t\t\t\t  <Col >\n                    <Input  invalid={this.state.checkTestDataModule} type=\"select\" name=\"testDataModule\" value={this.state.testDataModule} onChange={this.SelectTestDataModule.bind(this)}>\n\t\t\t\t\t<option selected=\"selected\">{this.state.testDataModule}</option>\n\t\t\t\t\t<GetAllModule options={allModuleName} />\n\t\t\t\t\t</Input>\n                  </Col>\n\t\t\t\t</FormGroup>\n\t\t\t\t<CardBody>\n\t\t\t\t<BootstrapTable\n\t\t\t\t\tkeyField=\"id\"\n\t\t\t\t\tdata={ this.state.testDataItemrowList }\n\t\t\t\t\tcolumns={ this.state.testDatacolumns}\n\t\t\t\t\tstriped\n\t\t\t\t\thover\n\t\t\t\t\tcondensed\n\t\t\t\t\tpagination={ paginationFactory(options) }\n\t\t\t\t\tselectRow={ selectRowforTestData }\n\t\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\t\tmode: 'click',\n\t\t\t\t\t\tblurToSave: true,\n\t\t\t\t\t\t})}\n\t\t\t\t/>\n                </CardBody>\n            </Form>\n            </CardBody>\n          </Card>\n        </Col>\t\t\t\n        </Row>\n\t\t</Page>\n  );\n  }\n};\n\nexport default TestData;\n"],"sourceRoot":""}
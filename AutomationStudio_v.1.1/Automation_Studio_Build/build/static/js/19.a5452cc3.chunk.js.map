{"version":3,"sources":["components/Typography.js","components/Page.js","../node_modules/reactstrap/es/Fade.js","../node_modules/reactstrap/es/ModalBody.js","../node_modules/reactstrap/es/Portal.js","../node_modules/reactstrap/es/Modal.js","../node_modules/reactstrap/es/ModalHeader.js","../node_modules/reactstrap/es/ModalFooter.js","pages/TestAttribute.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","Tag","tag","className","type","restProps","classes","classNames","TypoComp","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","name","active","index","key","propTypes","_objectSpread","Transition","PropTypes","oneOfType","arrayOf","node","tagPropType","baseClass","string","baseClassActive","cssModule","object","innerRef","func","timeout","TransitionTimeouts","Fade","appear","enter","exit","in","props","otherProps","_objectWithoutPropertiesLoose","transitionProps","pick","TransitionPropTypeKeys","childProps","omit","React","createElement","status","isActive","mapToCssModules","_extends","ref","ModalBody","attributes","isRequired","any","Portal","_React$Component","apply","this","arguments","_inheritsLoose","_proto","prototype","componentWillUnmount","defaultNode","document","body","removeChild","render","canUseDOM","appendChild","ReactDOM","createPortal","Component","noop","FadePropTypes","shape","isOpen","bool","autoFocus","centered","size","toggle","keyboard","role","labelledBy","backdrop","oneOf","onEnter","onExit","onOpened","onClosed","wrapClassName","modalClassName","backdropClassName","contentClassName","external","fade","zIndex","number","backdropTransition","modalTransition","propsToOmit","Object","keys","Modal","mountOnEnter","_this","call","_element","_originalBodyPadding","getFocusableChildren","bind","_assertThisInitialized","handleBackdropClick","handleBackdropMouseDown","handleEscape","handleTab","state","init","componentDidMount","setFocus","_isMounted","componentWillReceiveProps","nextProps","setState","componentWillUpdate","nextState","componentDidUpdate","prevProps","prevState","style","destroy","isAppearing","onEntered","onExited","_dialog","parentNode","focus","querySelectorAll","focusableElements","join","getFocusedChild","currentFocus","focusableChildren","activeElement","err","target","_mouseDownElement","stopPropagation","which","totalFocusable","focusedIndex","i","shiftKey","preventDefault","keyCode","_triggeringElement","setAttribute","position","getOriginalBodyPadding","conditionallyUpdateScrollbar","openCount","modalOpenClassName","modalOpenClassNameRegex","RegExp","replace","trim","setScrollbarWidth","renderModalDialog","_classNames","_this2","dialogBaseClass","c","_this$props","modalAttributes","onClick","onMouseDown","onKeyUp","onKeyDown","display","tabIndex","hasTransition","Backdrop","wrapTag","closeAriaLabel","charCode","close","ModalHeader","closeButton","WrapTag","closeIcon","String","fromCharCode","ModalFooter","APIBasePath","window","ENV","APIURL","GetAllModule","options","CheckValueFromJson","checkvalue","allitem","push","toLowerCase","TestAttribute","constructor","super","modalType","modal","ModuleModuleName","NewModuleName","allModuleName","ModuleName","TestID","TestCaseID","testCaseName","NewTestID","modalValidationText","newmoduleNameCheck","existingModuleName","testAttributeModuleNameCheck","testAttributeTestIDcheck","testAttributeNewTestIDcheck","testAttributeNewTestCaseName","postResponceresult","loader","a","fetch","Request1","json","Response1","Req1","SelectModule","event","value","UpdateModuleName","UpdateNewTestCaseID","UpdateNewTestCaseName","updateModule","updateTestID","TestCaseName","SaveModuleName","oldName","NewName","ExceptionMessage","requestOptions","method","headers","JSON","stringify","newModuleName","success","Request2","Response2","servermessage","Req2","SaveTestAttribute","testAttributeModule","testAttributeTestID","testAttributeNewTestID","testAttributeName","newTestID","newTestCaseName","color","height","width","visible","lg","md","sm","xs","col","for","invalid","onChange","selected","placeholder"],"mappings":"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","file":"static/js/19.a5452cc3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionPropTypeKeys, TransitionTimeouts, tagPropType } from './utils';\n\nvar propTypes = _objectSpread({}, Transition.propTypes, {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  baseClass: PropTypes.string,\n  baseClassActive: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n});\n\nvar defaultProps = _objectSpread({}, Transition.defaultProps, {\n  tag: 'div',\n  baseClass: 'fade',\n  baseClassActive: 'show',\n  timeout: TransitionTimeouts.Fade,\n  appear: true,\n  enter: true,\n  exit: true,\n  in: true\n});\n\nfunction Fade(props) {\n  var Tag = props.tag,\n      baseClass = props.baseClass,\n      baseClassActive = props.baseClassActive,\n      className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      innerRef = props.innerRef,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"tag\", \"baseClass\", \"baseClassActive\", \"className\", \"cssModule\", \"children\", \"innerRef\"]);\n\n  var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n  var childProps = omit(otherProps, TransitionPropTypeKeys);\n  return React.createElement(Transition, transitionProps, function (status) {\n    var isActive = status === 'entered';\n    var classes = mapToCssModules(classNames(className, baseClass, isActive && baseClassActive), cssModule);\n    return React.createElement(Tag, _extends({\n      className: classes\n    }, childProps, {\n      ref: innerRef\n    }), children);\n  });\n}\n\nFade.propTypes = propTypes;\nFade.defaultProps = defaultProps;\nexport default Fade;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalBody = function ModalBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalBody.propTypes = propTypes;\nModalBody.defaultProps = defaultProps;\nexport default ModalBody;","import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { canUseDOM } from './utils';\nvar propTypes = {\n  children: PropTypes.node.isRequired,\n  node: PropTypes.any\n};\n\nvar Portal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Portal, _React$Component);\n\n  function Portal() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Portal.prototype;\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.defaultNode) {\n      document.body.removeChild(this.defaultNode);\n    }\n\n    this.defaultNode = null;\n  };\n\n  _proto.render = function render() {\n    if (!canUseDOM) {\n      return null;\n    }\n\n    if (!this.props.node && !this.defaultNode) {\n      this.defaultNode = document.createElement('div');\n      document.body.appendChild(this.defaultNode);\n    }\n\n    return ReactDOM.createPortal(this.props.children, this.props.node || this.defaultNode);\n  };\n\n  return Portal;\n}(React.Component);\n\nPortal.propTypes = propTypes;\nexport default Portal;","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Portal from './Portal';\nimport Fade from './Fade';\nimport { getOriginalBodyPadding, conditionallyUpdateScrollbar, setScrollbarWidth, mapToCssModules, omit, focusableElements, TransitionTimeouts } from './utils';\n\nfunction noop() {}\n\nvar FadePropTypes = PropTypes.shape(Fade.propTypes);\nvar propTypes = {\n  isOpen: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  centered: PropTypes.bool,\n  size: PropTypes.string,\n  toggle: PropTypes.func,\n  keyboard: PropTypes.bool,\n  role: PropTypes.string,\n  labelledBy: PropTypes.string,\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n  onEnter: PropTypes.func,\n  onExit: PropTypes.func,\n  onOpened: PropTypes.func,\n  onClosed: PropTypes.func,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  wrapClassName: PropTypes.string,\n  modalClassName: PropTypes.string,\n  backdropClassName: PropTypes.string,\n  contentClassName: PropTypes.string,\n  external: PropTypes.node,\n  fade: PropTypes.bool,\n  cssModule: PropTypes.object,\n  zIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  backdropTransition: FadePropTypes,\n  modalTransition: FadePropTypes,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar propsToOmit = Object.keys(propTypes);\nvar defaultProps = {\n  isOpen: false,\n  autoFocus: true,\n  centered: false,\n  role: 'dialog',\n  backdrop: true,\n  keyboard: true,\n  zIndex: 1050,\n  fade: true,\n  onOpened: noop,\n  onClosed: noop,\n  modalTransition: {\n    timeout: TransitionTimeouts.Modal\n  },\n  backdropTransition: {\n    mountOnEnter: true,\n    timeout: TransitionTimeouts.Fade // uses standard fade transition\n\n  }\n};\n\nvar Modal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Modal, _React$Component);\n\n  function Modal(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this._element = null;\n    _this._originalBodyPadding = null;\n    _this.getFocusableChildren = _this.getFocusableChildren.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBackdropClick = _this.handleBackdropClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleBackdropMouseDown = _this.handleBackdropMouseDown.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleEscape = _this.handleEscape.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleTab = _this.handleTab.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onOpened = _this.onOpened.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClosed = _this.onClosed.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      isOpen: props.isOpen\n    };\n\n    if (props.isOpen) {\n      _this.init();\n    }\n\n    return _this;\n  }\n\n  var _proto = Modal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.onEnter) {\n      this.props.onEnter();\n    }\n\n    if (this.state.isOpen && this.props.autoFocus) {\n      this.setFocus();\n    }\n\n    this._isMounted = true;\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.isOpen && !this.props.isOpen) {\n      this.setState({\n        isOpen: nextProps.isOpen\n      });\n    }\n  };\n\n  _proto.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {\n    if (nextState.isOpen && !this.state.isOpen) {\n      this.init();\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (this.props.autoFocus && this.state.isOpen && !prevState.isOpen) {\n      this.setFocus();\n    }\n\n    if (this._element && prevProps.zIndex !== this.props.zIndex) {\n      this._element.style.zIndex = this.props.zIndex;\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.onExit) {\n      this.props.onExit();\n    }\n\n    if (this.state.isOpen) {\n      this.destroy();\n    }\n\n    this._isMounted = false;\n  };\n\n  _proto.onOpened = function onOpened(node, isAppearing) {\n    this.props.onOpened();\n    (this.props.modalTransition.onEntered || noop)(node, isAppearing);\n  };\n\n  _proto.onClosed = function onClosed(node) {\n    // so all methods get called before it is unmounted\n    this.props.onClosed();\n    (this.props.modalTransition.onExited || noop)(node);\n    this.destroy();\n\n    if (this._isMounted) {\n      this.setState({\n        isOpen: false\n      });\n    }\n  };\n\n  _proto.setFocus = function setFocus() {\n    if (this._dialog && this._dialog.parentNode && typeof this._dialog.parentNode.focus === 'function') {\n      this._dialog.parentNode.focus();\n    }\n  };\n\n  _proto.getFocusableChildren = function getFocusableChildren() {\n    return this._element.querySelectorAll(focusableElements.join(', '));\n  };\n\n  _proto.getFocusedChild = function getFocusedChild() {\n    var currentFocus;\n    var focusableChildren = this.getFocusableChildren();\n\n    try {\n      currentFocus = document.activeElement;\n    } catch (err) {\n      currentFocus = focusableChildren[0];\n    }\n\n    return currentFocus;\n  } // not mouseUp because scrollbar fires it, shouldn't close when user scrolls\n  ;\n\n  _proto.handleBackdropClick = function handleBackdropClick(e) {\n    if (e.target === this._mouseDownElement) {\n      e.stopPropagation();\n      if (!this.props.isOpen || this.props.backdrop !== true) return;\n      var backdrop = this._dialog ? this._dialog.parentNode : null;\n\n      if (backdrop && e.target === backdrop && this.props.toggle) {\n        this.props.toggle(e);\n      }\n    }\n  };\n\n  _proto.handleTab = function handleTab(e) {\n    if (e.which !== 9) return;\n    var focusableChildren = this.getFocusableChildren();\n    var totalFocusable = focusableChildren.length;\n    var currentFocus = this.getFocusedChild();\n    var focusedIndex = 0;\n\n    for (var i = 0; i < totalFocusable; i += 1) {\n      if (focusableChildren[i] === currentFocus) {\n        focusedIndex = i;\n        break;\n      }\n    }\n\n    if (e.shiftKey && focusedIndex === 0) {\n      e.preventDefault();\n      focusableChildren[totalFocusable - 1].focus();\n    } else if (!e.shiftKey && focusedIndex === totalFocusable - 1) {\n      e.preventDefault();\n      focusableChildren[0].focus();\n    }\n  };\n\n  _proto.handleBackdropMouseDown = function handleBackdropMouseDown(e) {\n    this._mouseDownElement = e.target;\n  };\n\n  _proto.handleEscape = function handleEscape(e) {\n    if (this.props.isOpen && this.props.keyboard && e.keyCode === 27 && this.props.toggle) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.props.toggle(e);\n    }\n  };\n\n  _proto.init = function init() {\n    try {\n      this._triggeringElement = document.activeElement;\n    } catch (err) {\n      this._triggeringElement = null;\n    }\n\n    this._element = document.createElement('div');\n\n    this._element.setAttribute('tabindex', '-1');\n\n    this._element.style.position = 'relative';\n    this._element.style.zIndex = this.props.zIndex;\n    this._originalBodyPadding = getOriginalBodyPadding();\n    conditionallyUpdateScrollbar();\n    document.body.appendChild(this._element);\n\n    if (Modal.openCount === 0) {\n      document.body.className = classNames(document.body.className, mapToCssModules('modal-open', this.props.cssModule));\n    }\n\n    Modal.openCount += 1;\n  };\n\n  _proto.destroy = function destroy() {\n    if (this._element) {\n      document.body.removeChild(this._element);\n      this._element = null;\n    }\n\n    if (this._triggeringElement) {\n      if (this._triggeringElement.focus) this._triggeringElement.focus();\n      this._triggeringElement = null;\n    }\n\n    if (Modal.openCount <= 1) {\n      var modalOpenClassName = mapToCssModules('modal-open', this.props.cssModule); // Use regex to prevent matching `modal-open` as part of a different class, e.g. `my-modal-opened`\n\n      var modalOpenClassNameRegex = new RegExp(\"(^| )\" + modalOpenClassName + \"( |$)\");\n      document.body.className = document.body.className.replace(modalOpenClassNameRegex, ' ').trim();\n    }\n\n    Modal.openCount -= 1;\n    setScrollbarWidth(this._originalBodyPadding);\n  };\n\n  _proto.renderModalDialog = function renderModalDialog() {\n    var _classNames,\n        _this2 = this;\n\n    var attributes = omit(this.props, propsToOmit);\n    var dialogBaseClass = 'modal-dialog';\n    return React.createElement(\"div\", _extends({}, attributes, {\n      className: mapToCssModules(classNames(dialogBaseClass, this.props.className, (_classNames = {}, _classNames[\"modal-\" + this.props.size] = this.props.size, _classNames[dialogBaseClass + \"-centered\"] = this.props.centered, _classNames)), this.props.cssModule),\n      role: \"document\",\n      ref: function ref(c) {\n        _this2._dialog = c;\n      }\n    }), React.createElement(\"div\", {\n      className: mapToCssModules(classNames('modal-content', this.props.contentClassName), this.props.cssModule)\n    }, this.props.children));\n  };\n\n  _proto.render = function render() {\n    if (this.state.isOpen) {\n      var _this$props = this.props,\n          wrapClassName = _this$props.wrapClassName,\n          modalClassName = _this$props.modalClassName,\n          backdropClassName = _this$props.backdropClassName,\n          cssModule = _this$props.cssModule,\n          isOpen = _this$props.isOpen,\n          backdrop = _this$props.backdrop,\n          role = _this$props.role,\n          labelledBy = _this$props.labelledBy,\n          external = _this$props.external,\n          innerRef = _this$props.innerRef;\n      var modalAttributes = {\n        onClick: this.handleBackdropClick,\n        onMouseDown: this.handleBackdropMouseDown,\n        onKeyUp: this.handleEscape,\n        onKeyDown: this.handleTab,\n        style: {\n          display: 'block'\n        },\n        'aria-labelledby': labelledBy,\n        role: role,\n        tabIndex: '-1'\n      };\n      var hasTransition = this.props.fade;\n\n      var modalTransition = _objectSpread({}, Fade.defaultProps, this.props.modalTransition, {\n        baseClass: hasTransition ? this.props.modalTransition.baseClass : '',\n        timeout: hasTransition ? this.props.modalTransition.timeout : 0\n      });\n\n      var backdropTransition = _objectSpread({}, Fade.defaultProps, this.props.backdropTransition, {\n        baseClass: hasTransition ? this.props.backdropTransition.baseClass : '',\n        timeout: hasTransition ? this.props.backdropTransition.timeout : 0\n      });\n\n      var Backdrop = backdrop && (hasTransition ? React.createElement(Fade, _extends({}, backdropTransition, {\n        in: isOpen && !!backdrop,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames('modal-backdrop', backdropClassName), cssModule)\n      })) : React.createElement(\"div\", {\n        className: mapToCssModules(classNames('modal-backdrop', 'show', backdropClassName), cssModule)\n      }));\n      return React.createElement(Portal, {\n        node: this._element\n      }, React.createElement(\"div\", {\n        className: mapToCssModules(wrapClassName)\n      }, React.createElement(Fade, _extends({}, modalAttributes, modalTransition, {\n        in: isOpen,\n        onEntered: this.onOpened,\n        onExited: this.onClosed,\n        cssModule: cssModule,\n        className: mapToCssModules(classNames('modal', modalClassName), cssModule),\n        innerRef: innerRef\n      }), external, this.renderModalDialog()), Backdrop));\n    }\n\n    return null;\n  };\n\n  return Modal;\n}(React.Component);\n\nModal.propTypes = propTypes;\nModal.defaultProps = defaultProps;\nModal.openCount = 0;\nexport default Modal;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  wrapTag: tagPropType,\n  toggle: PropTypes.func,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  closeAriaLabel: PropTypes.string,\n  charCode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  close: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'h5',\n  wrapTag: 'div',\n  closeAriaLabel: 'Close',\n  charCode: 215\n};\n\nvar ModalHeader = function ModalHeader(props) {\n  var closeButton;\n\n  var className = props.className,\n      cssModule = props.cssModule,\n      children = props.children,\n      toggle = props.toggle,\n      Tag = props.tag,\n      WrapTag = props.wrapTag,\n      closeAriaLabel = props.closeAriaLabel,\n      charCode = props.charCode,\n      close = props.close,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"children\", \"toggle\", \"tag\", \"wrapTag\", \"closeAriaLabel\", \"charCode\", \"close\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-header'), cssModule);\n\n  if (!close && toggle) {\n    var closeIcon = typeof charCode === 'number' ? String.fromCharCode(charCode) : charCode;\n    closeButton = React.createElement(\"button\", {\n      type: \"button\",\n      onClick: toggle,\n      className: mapToCssModules('close', cssModule),\n      \"aria-label\": closeAriaLabel\n    }, React.createElement(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, closeIcon));\n  }\n\n  return React.createElement(WrapTag, _extends({}, attributes, {\n    className: classes\n  }), React.createElement(Tag, {\n    className: mapToCssModules('modal-title', cssModule)\n  }, children), close || closeButton);\n};\n\nModalHeader.propTypes = propTypes;\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar ModalFooter = function ModalFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'modal-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nModalFooter.propTypes = propTypes;\nModalFooter.defaultProps = defaultProps;\nexport default ModalFooter;","import Page from 'components/Page';\nimport React from 'react';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n} from 'reactstrap';\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nvar APIBasePath= window.ENV.APIURL;\n\n\nfunction GetAllModule({ options }) {\n\n  return (\n    Object.keys(options).map((key)  => \n    <option >{options[key]}</option>)\n  );\n  \n}\nfunction CheckValueFromJson( options,checkvalue) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n    ));\n    for (let i = 0; i < allitem.length; i++) \n    {\n      if(allitem[i].trim().toLowerCase()===checkvalue.trim().toLowerCase())\n      {\n        return true;\n      }\n     \n    }\n    return false;\n  \n}\n\nclass TestAttribute extends React.Component{\n  \n  constructor(props){\n    super(props);\n    this.state={\n      ModuleModuleName:'',\n      NewModuleName:'',\n      allModuleName: [],\n      ModuleName:'',\n      TestID: [],\n      TestCaseID:'',\n      testCaseName:'',\n      NewTestID:'',\n      modal: false,\n      modalValidationText:'',\n      newmoduleNameCheck: false,\n      existingModuleName:false,\n      testAttributeModuleNameCheck:false,\n      testAttributeTestIDcheck:false,\n      testAttributeNewTestIDcheck:false,\n      testAttributeNewTestCaseName:false,\n      postResponceresult:[],\n      loader:true,\n\n    }\n    const Req1 = async () => \n    {\n      const Request1 = await fetch(APIBasePath+'testcase?moduleName=')\n      const Response1 = await Request1.json();\n      this.setState({allModuleName:Response1})\n      this.setState({loader:false})\n    }\n    Req1();\n\n\n    \n  }\n\n  SelectModule(event){\n    \n    this.setState({ModuleModuleName : event.target.value})\n    this.setState({existingModuleName:false})\n    \n\n    }\n    UpdateModuleName(event){\n      \n      this.setState({NewModuleName : event.target.value})\n      this.setState({newmoduleNameCheck:false})\n      \n      }\n\n      UpdateNewTestCaseID(event){\n        \n        this.setState({NewTestID : event.target.value})\n        this.setState({testAttributeNewTestIDcheck:false})\n        \n        }\n        UpdateNewTestCaseName(event){\n          \n          this.setState({testCaseName : event.target.value})\n          this.setState({testAttributeNewTestCaseName:false})\n          \n          }\n\n  updateModule(event){\n    \n    this.setState({TestID : ''})\n    this.setState({TestCaseID : ''})\n    this.setState({NewTestID : ''})\n    this.setState({testCaseName : ''})\n    this.setState({ModuleName : event.target.value})\n    this.setState({loader : true})\n\n    const Request1 = async () => \n      {\n        const Req1 = await fetch(APIBasePath+'testcase?moduleName='+event.target.value)\n        const Response1 = await Req1.json();\n        this.setState({TestID:Response1})\n        this.setState({testAttributeModuleNameCheck:false})\n        this.setState({loader:false})\n      }\n      Request1();\n    }\n    updateTestID(event){\n      \n      this.setState({TestCaseName : ''})\n      this.setState({NewTestID : event.target.value})\n      this.setState({TestCaseID : event.target.value})\n      this.setState({loader : true})\n\n      const Request1 = async () => \n      {\n        const Req1 = await fetch(APIBasePath+'testcase?moduleName='+this.state.ModuleName+'&testid='+event.target.value)\n        const Response1 = await Req1.json();\n        this.setState({testCaseName:Response1.TestCaseName})\n        this.setState({testAttributeTestIDcheck:false})\n        this.setState({testAttributeNewTestIDcheck:false})\n        this.setState({testAttributeNewTestCaseName:false})\n        this.setState({loader:false})\n      }\n      Request1();\n    }\n  SaveModuleName()\n  {\n    this.setState({existingModuleName:false})\n    this.setState({newmoduleNameCheck:false})\n    this.setState({postResponceresult:''})\n    var oldName = this.state.ModuleModuleName;\n    var NewName = this.state.NewModuleName;\n    var ExceptionMessage ='';\n    if(oldName.trim()===\"\")\n    {\n      this.setState({existingModuleName:true})\n      ExceptionMessage= ExceptionMessage+ 'Module name can not be left blank.'\n    }\n    if(NewName.trim()===\"\")\n    {\n      this.setState({newmoduleNameCheck:true})\n      ExceptionMessage= ExceptionMessage+ 'New Module name can not be left blank.'\n    }\n    if(ExceptionMessage.trim() !==\"\")\n    {\n      this.setState({modal:true})\n      return this.setState({modalValidationText:ExceptionMessage})\n    }\n    var duplicatecheck = CheckValueFromJson(this.state.allModuleName,NewName)\n    if(duplicatecheck)\n    {\n      this.setState({modal:true})\n      this.setState({newmoduleNameCheck:true})\n      return this.setState({modalValidationText:'New Module name is already exist.'})\n    }\n    else\n    {\n      this.setState({loader:true})\n      var  testdata=JSON.stringify({newModuleName:NewName});\n      var requestOptions = \n      {\n        method: 'POST',\n        headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n        body: testdata\n      };\n      const Req1 = async () => \n      {\n        const Request1 = await fetch(APIBasePath+'testcase?ExistingModuleName='+oldName,requestOptions)\n        const Response1 = await Request1.json();\n        this.setState({postResponceresult:Response1})\n        if(Response1.success)\n        {\n          const Req2 = async () => \n          {\n            const Request2 = await fetch(APIBasePath+'testcase?moduleName=')\n            const Response2 = await Request2.json();\n            this.setState({allModuleName:Response2})\n            this.setState({ModuleModuleName:''})\n            this.setState({NewModuleName:''})\n            this.setState({loader:false})\n            this.setState({modal:true})\n            return this.setState({modalValidationText:this.state.postResponceresult.servermessage})\n            \n          }\n          Req2();\n        }\n        else\n        {\n          this.setState({modal:true})\n          return this.setState({modalValidationText:'ISSUE:'+this.state.postResponceresult.servermessage})\n        }\n      }\n      Req1();\n\n\n  }\n   \n  }\n  SaveTestAttribute()\n  {\n    var ExceptionMessage ='';\n    var testAttributeModule= this.state.ModuleName\n    var testAttributeTestID= this.state.TestCaseID\n    var testAttributeNewTestID= this.state.NewTestID\n    var testAttributeName = this.state.testCaseName\n    if(testAttributeModule.trim()===\"\")\n    {\n      this.setState({testAttributeModuleNameCheck:true})\n      ExceptionMessage= ExceptionMessage+ 'Module* can not be left blank.'\n    }\n    if(testAttributeTestID.trim()===\"\")\n    {\n      this.setState({testAttributeTestIDcheck:true})\n      ExceptionMessage= ExceptionMessage+ 'TestID* can not be left blank.'\n    }\n    if(testAttributeNewTestID.trim()===\"\")\n    {\n      this.setState({testAttributeNewTestIDcheck:true})\n      ExceptionMessage= ExceptionMessage+ 'New TestID* can not be left blank.'\n    }\n    if(testAttributeName.trim()===\"\")\n    {\n      this.setState({testAttributeNewTestCaseName:true})\n      ExceptionMessage= ExceptionMessage+ 'New Test Case Name* can not be left blank.'\n    }\n    if(ExceptionMessage.trim() !==\"\")\n    {\n      this.setState({modal:true})\n      return this.setState({modalValidationText:ExceptionMessage})\n    }\n    if(testAttributeTestID !==testAttributeNewTestID)\n    {\n      var duplicatecheck = CheckValueFromJson(this.state.TestID,testAttributeNewTestID)\n      if(duplicatecheck)\n      {\n        this.setState({modal:true})\n        this.setState({testAttributeNewTestIDcheck:true})\n        return this.setState({modalValidationText:'New TestID* is already exist.'})\n      }\n    }\n    this.setState({loader:true})\n      var  testdata=JSON.stringify({newTestID:testAttributeNewTestID,newTestCaseName:testAttributeName});\n      var requestOptions = {\n        method: 'POST',\n       headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n        body: testdata\n    };\n\n    const Request1 = async () => \n    {\n      const Req1 = await fetch(APIBasePath+'testcase?ExistingModuleName='+testAttributeModule+'&existingTestID='+testAttributeTestID,requestOptions)\n      const Response1 = await Req1.json();\n      this.setState({loader:false})\n      if(Response1.success)\n      {\n          this.setState({ModuleName:''})\n          this.setState({TestCaseID:''})\n          this.setState({NewTestID:''})\n          this.setState({testCaseName:''})\n          this.setState({modal:true})\n          return this.setState({modalValidationText:Response1.servermessage})\n      }\n      else\n      {\n        this.setState({modal:true})\n        return this.setState({modalValidationText:'ISSUE: '+Response1.servermessage})\n      }\n    }\n    Request1();\n\n   \n  }\n  toggle = modalType => () => {\n    if (!modalType) {\n      return this.setState({\n        modal: !this.state.modal,\n      });\n    }\n\n    this.setState({\n      [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n    });\n  };\n\n\n \n  render() {\n\n  var {allModuleName,TestID} = this.state;\n\n  return (\n    <Page title=\"Test Attribute\" breadcrumbs={[{ name: 'Test Attribute', active: true }]}>\n      <Loader \n         type=\"ThreeDots\"\n         color=\"#00BFFF\"\n         height={50}\n         width={100}\n         timeout={120000} //3 secs\n         visible = {this.state.loader}\n        />\n      <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Update Module Name</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Module*\n                  </Label>\n                  <Col>\n                    <Input  invalid={this.state.existingModuleName} type=\"select\" name=\"module\"  value={this.state.ModuleModuleName} onChange={this.SelectModule.bind(this)}>\n                    <option selected=\"selected\">{this.state.ModuleModuleName}</option>\n                     <GetAllModule options={allModuleName} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t          <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    New Module Name*\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.newmoduleNameCheck} type=\"input\" name=\"newmoduleName\" placeholder=\"enter new module name\" value={this.state.NewModuleName} onChange={this.UpdateModuleName.bind(this)}>\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t         <FormGroup col>\n                  <Col >\n\t\t\t\t\t          <Button onClick={this.SaveModuleName.bind(this)} color=\"primary\">Update Module Name\n                    </Button>\n                    <Modal\n                      isOpen={this.state.modal}\n                      toggle={this.toggle()}\n                      className={this.props.className}>\n                      <ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n                      <ModalBody >\n                        {this.state.modalValidationText}\n                      </ModalBody>\n                      <ModalFooter>\n                        <Button color=\"secondary\" onClick={this.toggle()}>\n                          OK\n                        </Button>\n                      </ModalFooter>\n                    </Modal>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Update TestID/Test Case Name</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Module*\n                  </Label>\n                  <Col>\n                    <Input  invalid={this.state.testAttributeModuleNameCheck} type=\"select\" name=\"moduleforTestUpdate\" value={this.state.ModuleName} onChange={this.updateModule.bind(this)}>\n                    <option selected=\"selected\">{this.state.ModuleName}</option>\n                    <GetAllModule options={allModuleName} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    TestID*\n                  </Label>\n                  <Col>\n                    <Input invalid={this.state.testAttributeTestIDcheck} type=\"select\" name=\"testID\" value={this.state.TestCaseID} onChange={this.updateTestID.bind(this)}>\n\t\t\t\t            \t<option selected=\"selected\">{this.state.TestCaseID}</option>\n                      <GetAllModule options={TestID} />\n\t\t\t\t\t          </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    New TestID*\n                  </Label>\n                  <Col >\n                    <Input type=\"input\" invalid={this.state.testAttributeNewTestIDcheck} name=\"newtestcaseid\" placeholder=\"enter new test case ID\"  value={this.state.NewTestID} onChange={this.UpdateNewTestCaseID.bind(this)}>\n\t\t\t\t\t           </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t        <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    New Test Case Name*\n                  </Label>\n                  <Col >\n                    <Input type=\"input\" invalid={this.state.testAttributeNewTestCaseName} name=\"testcasename\" placeholder=\"enter new test case name\"  value={this.state.testCaseName} onChange={this.UpdateNewTestCaseName.bind(this)}>\n\t\t\t\t\t         </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t          \t<FormGroup col>\n                  <Col >\n\t\t\t\t\t         <Button onClick={this.SaveTestAttribute.bind(this)} color=\"primary\">Update Test Attribute</Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n  }\n};\n\nexport default TestAttribute;\n"],"sourceRoot":""}
{"version":3,"sources":["components/Typography.js","components/Page.js","assets/img/bg/deleterow.JPG","assets/img/bg/addnewrow.JPG","../node_modules/reactstrap/es/Alert.js","pages/UpdateTestScript.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","Tag","tag","className","type","restProps","classes","classNames","TypoComp","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","name","active","index","key","module","exports","propTypes","PropTypes","node","string","closeClassName","closeAriaLabel","cssModule","object","color","fade","bool","isOpen","toggle","func","tagPropType","transition","shape","Fade","innerRef","oneOfType","_objectSpread","unmountOnExit","Alert","props","attributes","_objectWithoutPropertiesLoose","mapToCssModules","closeClasses","alertTransition","baseClass","timeout","React","createElement","_extends","in","role","onClick","APIBasePath","window","ENV","APIURL","afterSaveCell","oldValue","newValue","GetListOfListItemforCommonItem","JsonItems","count","Object","keys","CommonDataItem","i","keyName","testdata","id","commonKeyName","commonKeyValue","push","GetListOfListforActionName","value","label","GetallKeyFromJsonResponce","options","allitem","Options","option","Environment","OptionsValue","SetJsonContent","ItemValue","valueaf","includes","split","join","error","UpdateTestScript","Component","constructor","super","addNewCommonData","ItemCount","this","state","trim","setState","modal","modalValidationText","loader","lastOneId","addNewColumnonTestData","headernameCheck","headerName","newHeaderName","toUpperCase","lastColumn","testDatacolumns","text","addcolumn","coldatafiledName","selectedLastHeaderColumn","dataField","headerEvents","selectedHeaderColumn","target","innerHTML","selectedHeaderColumnIndex","ItemList","testDataItemrowList","addNewTestSteps","TestScriptTestData","loaderTestSteps","selectedID","selectedTestStepNumber","UpdatedRow","NewItemContent","parseInt","StepNo","addNewTestDataRow","collist","testdatacolid","deleteTestDataRow","testData","filter","m","deleteCommonData","updatedBooks","toString","deleteTestSteps","teststepid","deleteTestDataColumn","HeaderCol","testDataContent","StepNumber","headerIndex","testcol","el","RowInfo","RowCount","j","OlderKey","handleDataChange","dataSize","rowCount","handleOnSelect","row","isSelect","selectedrow","GetItem","selectedCommonKey","handleOnTestStepSelect","handleOnUtilitySelect","selectedUtilityRowId","selectedUtilityRow","modalType","toggleUtilityFunction","utilityFunction","allModuleName","allTestID","ModuleName","TestScriptModuleName","NewTestID","Env","CommonDataallItem","CommonDataItemList","CommonDataTotalSize","GetCommonItem","allActionNameList","headerStyle","width","testscriptcheckENV","testscriptcheckModule","testscriptchecktestID","testscriptchecktestName","testCaseName","customFunctionName","customStepFrom","customStepTo","customFunctionNameCheck","customFunctionstepFromCheck","customFunctionstepToCheck","checkNewColName","NewColName","UtilityFunctionExpression","UtilityFunctionList","UtilityItem","UtilityFunction","selectedUtilityFunction","OriginalUtilityContent","showalert","alerttext","showModal","alertColor","CommonTestData","a","fetch","homepage","json","homepageResponse","request2","req2Response","request3","req3Response","request4","req4Response","customFunctionList","request5","req5Response","TotalFunction","TotalItem","utilityContent","req5","req4","req3","req2","GetLoaderData","selectionCommonData","Item","selectionTestData","selectUtilityFunctionfromList","rowId","functionName","utilityfunction","updatedFunctionName","EvaluateCustomFunction","API","ORResponse","ORJson","Status","status","toLowerCase","Message","message","APICheckRequest","UpdateHeaderNameonTestData","selectionUtilityData","TypeHeaderName","event","TypeNewColName","updateModule","runTimeModule","previousModule","request1","req1Response","req1","UpdatetestcaseName","SetCustomFunctionFromStep","SetCustomToStep","verifyCustomFunction","RenameColumn","OlderheaderCol","NewName","allColumn","IndexFound","existingCol","TestScriptContent","saveCustomFunction","newCustomfunction","newCustomFrom","newCustomTo","failMessage","isNaN","checkvalue","CheckValueFromJson","tesStepRowCount","jstestStepData","jstestStepDatacollection","ORTestStepData","ORItem","succesStep","locatorName","locator","locatorProperty","locatorproperty","stepdescription","action","exitIfFail","ORjson","JSON","stringify","ORAPI","requestOptions","method","headers","body","success","servermessage","SaveORRequest","postResponceresult","updateENV","onchangeenvvalue","PrevEnv","URL","UIModule","UITestID","testDataHeaderCol","testDataAPI","testDataResponse","testDataContentItem","colHeader","JsonTestDataItem","firstRowInfo","allColItem","TestScriptDataCheck","updateTestID","onChnageValue","UIEnv","testscriptAPI","testscriptcontentItem","JsonItem","TestScriptContentCheck","SaveTestScripts","ExceptionMessage","testscriptENV","testscriptModule","testscriptNewTestID","testscripttestCaseName","successTestStep","lastindex","commondataCount","jsObj","ItemName","testdataRowCount","jsTestda","jstestdataItemList","testdatacolumnCount","colName","colKeyName","colValue","request7","request8","req8Response","request9","req9Response","req9","req8","req7","render","selectRow","mode","onSelect","selectRowforUtilityFunction","selectTestScriptRow","rowEvents","rowIndex","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","columns","Cell","textFilter","validator","column","valid","totalCount","UtilityFunctioncolumns","testScriptcolumns","backgroundColor","editor","Type","SELECT","height","visible","lg","md","sm","xs","col","for","invalid","onChange","bind","selected","src","bg1Image","style","bg3Image","keyField","data","striped","hover","condensed","pagination","paginationFactory","onDataSizeChange","filterFactory","cellEdit","cellEditFactory","blurToSave","inline","placeholder","disabled","backdrop","size"],"mappings":"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","file":"static/js/20.569c85f2.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","module.exports = __webpack_public_path__ + \"static/media/deleterow.9eb1ed86.JPG\";","module.exports = __webpack_public_path__ + \"static/media/addnewrow.11af4dc5.JPG\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport Fade from './Fade';\nvar propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  closeClassName: PropTypes.string,\n  closeAriaLabel: PropTypes.string,\n  cssModule: PropTypes.object,\n  color: PropTypes.string,\n  fade: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  toggle: PropTypes.func,\n  tag: tagPropType,\n  transition: PropTypes.shape(Fade.propTypes),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  color: 'success',\n  isOpen: true,\n  tag: 'div',\n  closeAriaLabel: 'Close',\n  fade: true,\n  transition: _objectSpread({}, Fade.defaultProps, {\n    unmountOnExit: true\n  })\n};\n\nfunction Alert(props) {\n  var className = props.className,\n      closeClassName = props.closeClassName,\n      closeAriaLabel = props.closeAriaLabel,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      color = props.color,\n      isOpen = props.isOpen,\n      toggle = props.toggle,\n      children = props.children,\n      transition = props.transition,\n      fade = props.fade,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"closeClassName\", \"closeAriaLabel\", \"cssModule\", \"tag\", \"color\", \"isOpen\", \"toggle\", \"children\", \"transition\", \"fade\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'alert', \"alert-\" + color, {\n    'alert-dismissible': toggle\n  }), cssModule);\n  var closeClasses = mapToCssModules(classNames('close', closeClassName), cssModule);\n\n  var alertTransition = _objectSpread({}, Fade.defaultProps, transition, {\n    baseClass: fade ? transition.baseClass : '',\n    timeout: fade ? transition.timeout : 0\n  });\n\n  return React.createElement(Fade, _extends({}, attributes, alertTransition, {\n    tag: Tag,\n    className: classes,\n    in: isOpen,\n    role: \"alert\",\n    innerRef: innerRef\n  }), toggle ? React.createElement(\"button\", {\n    type: \"button\",\n    className: closeClasses,\n    \"aria-label\": closeAriaLabel,\n    onClick: toggle\n  }, React.createElement(\"span\", {\n    \"aria-hidden\": \"true\"\n  }, \"\\xD7\")) : null, children);\n}\n\nAlert.propTypes = propTypes;\nAlert.defaultProps = defaultProps;\nexport default Alert;","import Page from 'components/Page';\nimport React from 'react';\nimport bg3Image from 'assets/img/bg/deleterow.JPG';\nimport bg1Image from 'assets/img/bg/addnewrow.JPG';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  CardImg,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Alert,\n  \n} from 'reactstrap';\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory,{Type} from 'react-bootstrap-table2-editor';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\n\nvar APIBasePath= window.ENV.APIURL;\n\n\nfunction afterSaveCell(oldValue, newValue) {\n\t//console.log('--after save cell--');\n\t//console.log('New Value was apply as');\n\t//console.log(newValue);\n\t//console.log(`and the type is ${typeof newValue}`);\n\n  }\n\n\nfunction GetListOfListItemforCommonItem(JsonItems) \n{\n  let count = Object.keys(JsonItems).length;\n  //console.log(count);\n  let CommonDataItem=[];\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(JsonItems)[i-1];\n\tvar keyVal =JsonItems[keyName];\n\tvar  testdata={id:i,commonKeyName:keyName,commonKeyValue:keyVal};\n\tCommonDataItem.push(testdata);\n  }\n  return CommonDataItem;\n}\nfunction GetListOfListforActionName(JsonItems) \n{\n  let count = Object.keys(JsonItems).length;\n // console.log(count);\n  let CommonDataItem=[];\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(JsonItems)[i-1];\n\tvar  testdata={value:keyName,label:keyName};\n\tCommonDataItem.push(testdata);\n  }\n  return CommonDataItem;\n}\nfunction GetallKeyFromJsonResponce(options) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(key)\n\t));\n\treturn allitem;\n}\nfunction CheckValueFromJson( options,checkvalue) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n    ));\n    for (let i = 0; i < allitem.length; i++) \n    {\n      if(allitem[i].trim().toLowerCase()===checkvalue.trim().toLowerCase())\n      {\n        return true;\n      }\n     \n    }\n    return false;\n  \n}\nfunction Options({ options }) {\n    return (\n        options.map(option => \n                    <option >{option.Environment}</option>)\n                   );\n}\nfunction OptionsValue({ options }) {\n\n\treturn (\n\t\tObject.keys(options).map(key => \n\t\t<option >{options[key]}</option>)\n\t\t);\n}\nfunction SetJsonContent(ItemValue)\n{\n  try\n  {\n\tvar valueaf =[];\n  if(ItemValue.includes(\"+\"))\n  {\n\tvalueaf = ItemValue.split('+')\n\tItemValue= valueaf.join('auplussignau')\n  }\n  if(ItemValue.includes(\":\"))\n  {\n\tvalueaf = ItemValue.split(':')\n\tItemValue= valueaf.join('aucolumnsignau')\n  }\n  if(ItemValue.includes(\"{\"))\n  {\n\t valueaf = ItemValue.split('{')\n\tItemValue= valueaf.join('aucurlyopenbracketau')\n  }\n  if(ItemValue.includes(\"}\"))\n  {\n\t valueaf = ItemValue.split('}')\n\tItemValue= valueaf.join('aucurlyclosebracketau')\n  }\n  if(ItemValue.includes(\"[\"))\n  {\n\t valueaf = ItemValue.split('[')\n\tItemValue= valueaf.join('aubigopenbracketau')\n  }\n  if(ItemValue.includes(\"]\"))\n  {\n\t valueaf = ItemValue.split(']')\n\tItemValue= valueaf.join('aubigclosebracketau')\n  }\n  if(ItemValue.includes(\"\\\"\"))\n  {\n\t valueaf = ItemValue.split('\\\"')\n\tItemValue= valueaf.join('audoublequotesau')\n  }\n  if(ItemValue.includes(\"=\"))\n  {\n\t valueaf = ItemValue.split('=')\n\tItemValue= valueaf.join('auequalsignau')\n  }\n }\n catch(error)\n {}\n  return ItemValue;\n}\nclass UpdateTestScript extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t  allModuleName: [],\n\t\t  allTestID:[],\n\t\t  ModuleName:'',\n\t\t  TestScriptModuleName:'',\n\t\t  NewTestID:'',\n\t\t  Env:'',\n          CommonDataallItem:[],\n\t\t  CommonDataItemList:[],\n\t\t  CommonDataTotalSize:0,\n\t\t  CommonDataItem: [],\n\t\t  GetCommonItem:[],\n\t\t // TestScriptTestData:[{teststepid: 1, stepdescription: 'Add Test Step 1 description',action:'',locator:'',locatorproperty:'',value:'',exitIfFail:'Y'}],\n\t\t TestScriptTestData:[],\n\t\t  allActionNameList:[],\n\t\t  selectedCommonKey:'',\n\t\t  selectedTestStepNumber:0,\n\t\t  modal: false,\n\t\t  modalValidationText:'',\n\t\t  testDatacolumns :[{dataField: 'testdatacolid',text: '#',headerStyle: { width: '40px' }}],\n\t\t  testDataItemrowList:[],\n\t\t  selectedLastHeaderColumn:'',\n\t\t  selectedHeaderColumn:'',\n\t\t  headernameCheck:false,\n\t\t  newHeaderName:'',\n\t\t  testscriptcheckENV:false,\n\t\t  testscriptcheckModule:false,\n\t\t  testscriptchecktestID:false,\n\t\t  testscriptchecktestName:false,\n\t\t  testCaseName:'',\n\t\t  customFunctionName:'',\n\t\t  customStepFrom:'',\n\t\t  customStepTo:'',\n\t\t  customFunctionNameCheck:false,\n\t\t  customFunctionstepFromCheck:false,\n\t\t  customFunctionstepToCheck:false,\n\t\t  checkNewColName:false,\n\t\t  NewColName:'',\n\t\t  UtilityFunctionExpression:'',\n\t\t  selectedUtilityRow:0,\n\t\t  UtilityFunctionList:[],\n\t\t  UtilityItem:[],\n\t\t  UtilityFunction:[],\n\t\t  selectedUtilityFunction:'',\n\t\t  OriginalUtilityContent:[],\n\t\t  showalert:false,\n\t\t  alerttext:'',\n\t\t  showModal:false,\n\t\t  alertColor:'',\n\t\t  CommonTestData:[],\n\t\t  loader:true,\n\t\t  loaderTestSteps:false,\n\n\n\t\t}\n\t\tconst GetLoaderData = async () => \n\t\t{\n\t\t  const homepage = await fetch(APIBasePath+'dashboard');\n\t\t  const homepageResponse = await homepage.json();\n\t\t  this.setState({CommonTestData:homepageResponse.CommonTestData});\n\t\t  \tconst req2 = async () => \n\t\t\t{\n\t\t\t\tconst request2 = await fetch(APIBasePath+'testcase?moduleName=')\n\t\t\t\tconst req2Response = await request2.json();\n\t\t\t\tthis.setState({allModuleName:req2Response})\n\t\t\t\tconst req3 = async () => \n\t\t\t\t{\n\t\t\t\t\tconst request3 = await fetch(APIBasePath+'testscript?actionname')\n\t\t\t\t\tconst req3Response = await request3.json();\n\t\t\t\t\tthis.setState({allActionNameList:req3Response})\n\t\t\t\t\tconst req4 = async () => \n\t\t\t\t\t{\n\t\t\t\t\t\tconst request4 = await fetch(APIBasePath+'customfunction')\n\t\t\t\t\t\tconst req4Response = await request4.json();\n\t\t\t\t\t\tthis.setState({customFunctionList:req4Response})\n\t\t\t\t\t\tconst req5 = async () => \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst request5 = await fetch(APIBasePath+'customfunction?utilityid=1')\n\t\t\t\t\t\t\tconst req5Response = await request5.json();\n\t\t\t\t\t\t\tthis.setState({UtilityItem:req5Response})\n\t\t\t\t\t\t\tvar TotalFunction = Object.keys(this.state.UtilityItem).length;\n\t\t\t\t\t\t\tvar TotalItem =[];\n\t\t\t\t\t\t\tfor(let i=1;i<=TotalFunction;i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tvar utilityContent ={}\n\t\t\t\t\t\t\t\tutilityContent['id']=i;\n\t\t\t\t\t\t\t\tutilityContent['utilityfunction']=this.state.UtilityItem[i].toString();\n\t\t\t\t\t\t\t\tTotalItem.push(utilityContent);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({UtilityFunctionList:TotalItem})\n\t\t\t\t\t\t\tthis.setState({OriginalUtilityContent:TotalItem})\n\t\t\t\t\t\t\tthis.setState({loader:false})\n\t\t\t\t\t\t}\n\t\t\t\t\t\treq5();\n\t\t\t\t\t}\n\t\t\t\t\treq4();\n\t\t\t\t}\n\t\t\t\treq3();\n\t\t\t}\n\t\t\treq2();\n\t\t}\n\t\tGetLoaderData();\n\t\t\n\t  }\n\t  selectionCommonData()\n\t  {\n\t\tvar selectedItemRow = this.state.selectedTestStepNumber;\n\t\tif(selectedItemRow===\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select test step number.'})\n\t\t}\n\t\tvar Item = this.state.selectedCommonKey;\n\t\tif(Item.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select valid Key Name* from Common test data.'})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setState({loaderTestSteps:true})\n\t\t\tthis.state.TestScriptTestData[this.state.selectedTestStepNumber-1].value='c.'+Item;\n\t\t\tthis.setState({ TestScriptTestData: [...this.state.TestScriptTestData]});\n\t\t\tthis.setState({loaderTestSteps:false})\n\t\t}\n\t\n\t  }\n\n\t  selectionTestData()\n\t  {\n\t\tvar selectedItemRow = this.state.selectedTestStepNumber;\n\t\tif(selectedItemRow===\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select test step number.'})\n\t\t}\n\t\tvar testdataColLength = this.state.testDatacolumns.length;\n\t\tif(testdataColLength===1)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please add column header in test data.'})\n\t\t}\n\t\tvar Item = this.state.selectedHeaderColumn;\n\t\tif(Item.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please click on test data column header.'})\n\t\t}\n\t\tthis.setState({loaderTestSteps:true})\n\t\tthis.state.TestScriptTestData[this.state.selectedTestStepNumber-1].value='t.'+Item;\n\t\tthis.setState({ TestScriptTestData: [...this.state.TestScriptTestData]});\n\t\tthis.setState({loaderTestSteps:false})\n\t  }\n\n\t  selectUtilityFunctionfromList()\n\t  {\n\t\tvar rowId= this.state.selectedUtilityRow;\n\t\tif(rowId ===0)\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'please select utility function.'})\n\t\t\treturn;\n\t\t}\n\t\tvar functionName = this.state.OriginalUtilityContent[rowId-1].utilityfunction;\n\t\tvar updatedFunctionName = this.state.UtilityFunctionList[rowId-1].utilityfunction;\n\t\tif(updatedFunctionName.trim() ==='')\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'Utility function can not be blank.'})\n\t\t\treturn;\n\t\t}\n\t\tif(!updatedFunctionName.includes('(') || !updatedFunctionName.includes(')'))\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'syntax is incorrect for utility function'})\n\t\t\treturn;\n\t\t}\n\t\tif(!functionName.includes('()'))\n\t\t{\n\t\t\tif(functionName.trim()===updatedFunctionName.trim())\n\t\t\t{\n\t\t\t\tthis.setState({alertColor:'danger'})\n\t\t\t    this.setState({UtilityFunctionExpression:'Please pass the argument in Utility function.'})\n\t\t\t    return;\n\t\t\t}\n\t\t}\n\t\tthis.setState({loaderTestSteps:true})\n\t\tthis.setState({utilityFunction:false})\n\t\tthis.setState({UtilityFunctionExpression:''})\n\t\tthis.setState({alertColor:''})\n\t\tthis.state.TestScriptTestData[this.state.selectedTestStepNumber-1].value='utility.'+updatedFunctionName.trim();\n\t\tthis.setState({ TestScriptTestData: [...this.state.TestScriptTestData]});\n\t\tthis.setState({loaderTestSteps:false})\n\t\n\t  }\n\n\t  EvaluateCustomFunction()\n\t  {\n\t\t\n\t\tvar rowId= this.state.selectedUtilityRow;\n\t\tif(rowId ===0)\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'please select utility function.'})\n\t\t\treturn;\n\t\t}\n\t\tvar functionName = this.state.OriginalUtilityContent[rowId-1].utilityfunction;\n\t\tvar updatedFunctionName = this.state.UtilityFunctionList[rowId-1].utilityfunction;\n\t\tif(updatedFunctionName.trim() ==='')\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'Utility function can not be blank.'})\n\t\t\treturn;\n\t\t}\n\t\tif(!updatedFunctionName.includes('(') || !updatedFunctionName.includes(')'))\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'syntax is incorrect for utility function'})\n\t\t\treturn;\n\t\t}\n\t\tif(!functionName.includes('()'))\n\t\t{\n\t\t\tif(functionName.trim()===updatedFunctionName.trim())\n\t\t\t{\n\t\t\t\tthis.setState({alertColor:'danger'})\n\t\t\t    this.setState({UtilityFunctionExpression:'Please pass the argument in Utility function.'})\n\t\t\t    return;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//@ call API for evaluate\n\n\t\tvar API =APIBasePath+'evaluator?funcname=utility.'+updatedFunctionName;\n\t\tconst APICheckRequest = async () => \n\t\t{\n\t\t  const ORResponse = await fetch(API);\n\t\t  const ORJson = await ORResponse.json();\n\t\t  var Status =\"Fail\"\n\t\t  try\n\t\t  {\n\t\t  \t\tStatus = ORJson.status.toLowerCase();\n\t\t   }\n\t\t\t  catch(error)\n\t\t\t  {}\n\t\t  var Message = ORJson.message;\n\t\t  if(Status==='pass')\n\t\t  {\n\t\t\tthis.setState({alertColor:'success'})\n\t\t\tthis.setState({UtilityFunctionExpression:Message})\n\t\t\t\n\t\t  }\n\t\t  else\n\t\t  {\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:Message})\n\t\t  }\n\t\t  \n\t\t  \n\t\t}\n\t\tAPICheckRequest();\n\t\n\t  }\n\n\t  UpdateHeaderNameonTestData()\n\t  {\n\t\tthis.setState({headernameCheck:false})\n\t\tvar headerName = this.state.newHeaderName.toUpperCase();\n\t\tif(headerName.trim()===\"\")\n\t\t{\n\t\t  return this.setState({headernameCheck:true})\n\t\t}\n\t\tvar lastColumn = this.state.testDatacolumns.length;\n\t\tif(lastColumn===1)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please add header column first'})\n\t\t}\n\t\tthis.state.testDatacolumns[this.state.selectedLastHeaderColumn-1].text=headerName;\n\t\tthis.setState({ testDatacolumns: [...this.state.testDatacolumns] });\n\t\tthis.setState({newHeaderName:''});\n\t\t\n\t  }\n\t  selectionUtilityData()\n\t  {\n\t\tvar selectedItemRow = this.state.selectedTestStepNumber;\n\t\tif(selectedItemRow===0)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select test step number.'})\n\t\t}\n\t\tthis.setState({loaderTestSteps:true})\n\t\tthis.setState({selectedUtilityFunction:''});\n\t\tvar Item = this.state.UtilityItem;\n\t\tvar TotalFunction = Object.keys(Item).length;\n\t\tvar TotalItem =[];\n\t\tfor(let i=1;i<=TotalFunction;i++)\n\t\t{\n\t\t\t var utilityContent ={}\n\t\t\t utilityContent['id']=i;\n\t\t\t utilityContent['utilityfunction']=Item[i].toString();\n\t\t\t TotalItem.push(utilityContent);\n\t\t}\n\t\tthis.setState({UtilityFunctionList:TotalItem})\n\t\tthis.setState({utilityFunction:true})\n\t\tthis.setState({loaderTestSteps:false})\n\t\n\t  }\n\t  TypeHeaderName(event){\n\t\t\n\t\tthis.setState({newHeaderName : event.target.value})\n\t\tthis.setState({headernameCheck:false})\n\t\t}\n\t\tTypeNewColName(event){\n\t\t\t\n\t\t\tthis.setState({checkNewColName:false})\n\t\t\tthis.setState({NewColName : event.target.value})\n\t\t\t\n\t\t\t}\n\t\n\tupdateModule(event)\n\t{\n\tvar runTimeModule = event.target.value;\n\tvar previousModule = this.state.ModuleName;\n\tif(runTimeModule===previousModule)\n\t{\n\t\treturn;\n\t}\n\tthis.setState({loader:true})\n\tthis.setState({NewTestID : ''})\n\tvar testDataHeaderCol= [{dataField: 'testdatacolid',text: '#',headerStyle: { width: '40px' }}];\n\tthis.setState({ testDatacolumns:testDataHeaderCol});\n\tthis.setState({ testDataItemrowList:[]});\n\tthis.setState({testscriptcheckModule : false})\n\tthis.setState({ModuleName : runTimeModule})\n\tconst req1 = async () => \n\t{\n\t  const request1 = await fetch(APIBasePath+'testcase?moduleName='+runTimeModule)\n\t  const req1Response = await request1.json();\n\t  this.setState({allTestID:req1Response})\n\t  this.setState({loader:false})\n\t}\n\treq1();\n\n\t}\n\tUpdatetestcaseName(event)\n\t{\n\t\t\n\t\tthis.setState({testscriptchecktestName:false})\n\t\tthis.setState({testCaseName : event.target.value})\n\t}\n\tSetCustomFunctionFromStep(event)\n\t{\n\t\tthis.setState({customFunctionstepFromCheck:false})\n\t\tthis.setState({customStepFrom : event.target.value})\n\t}\n\tSetCustomToStep(event)\n\t{\n\t\tthis.setState({customFunctionstepToCheck:false})\n\t\tthis.setState({customStepTo : event.target.value})\n\t}\n\tverifyCustomFunction(event)\n\t{\n\t\tthis.setState({customFunctionNameCheck:false})\n\t\tthis.setState({customFunctionName : event.target.value})\n\t\t\n\t}\n\tRenameColumn(event)\n\t{\n\t\tvar OlderheaderCol = this.state.selectedHeaderColumn;\n\t\tvar NewName= this.state.NewColName;\n\t\tif(OlderheaderCol.trim()===\"\")\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tif(NewName.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({checkNewColName:true})\n\t\t\treturn;\n\t\t}\n\t\t//@ \n\t\tvar allColumn =this.state.testDatacolumns;\n\t\tvar IndexFound=0;\n\t\tfor(let i=1;i<allColumn.length;i++)\n\t\t{\n\t\t\tvar existingCol= allColumn[i].text;\n\t\t\tif(existingCol.trim().toUpperCase()===NewName.trim().toUpperCase())\n\t\t\t{\n\t\t\t\tthis.setState({checkNewColName:true})\n\t\t\t    return;\n\t\t\t}\n\t\t\tif(existingCol.trim().toUpperCase()===OlderheaderCol.trim().toUpperCase())\n\t\t\t{\n\t\t\t\t IndexFound=i;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Update Column Text\n\t\tthis.state.testDatacolumns[IndexFound].text=NewName.trim().toUpperCase();\n\t\tthis.setState({ testDatacolumns: [...this.state.testDatacolumns]});\n\t\tthis.setState({selectedHeaderColumn:''})\n\t\tthis.setState({NewColName:''})\n\n\t\t//@ Update Test Step Reference\n\t\t\n\t\tvar TestScriptContent = this.state.TestScriptTestData;\n\t\t\n\t\tfor(let i=0;i<TestScriptContent.length;i++)\n\t\t{\n\t\t\tvar checkReference = TestScriptContent[i].value.toString();\n\t\t\tvar OlderNameToUpdate = 't.'+OlderheaderCol.trim().toUpperCase();\n\t\t\tif(checkReference===OlderNameToUpdate)\n\t\t\t{\n\t\t\t\tthis.state.TestScriptTestData[i].value='t.'+NewName.trim().toUpperCase()\n\t\t\t}\n\t\t}\n\t\tthis.setState({ TestScriptTestData: [...this.state.TestScriptTestData]});\n\n\t}\n\tsaveCustomFunction(event)\n\t{\n\t\tvar newCustomfunction = this.state.customFunctionName;\n\t\tvar newCustomFrom = this.state.customStepFrom;\n\t\tvar newCustomTo = this.state.customStepTo;\n\t\tvar failMessage ='';\n\t\tif(newCustomfunction.trim()===\"\")\n\t\t{\n\t\t\tfailMessage= \"custom function name can not be blank.\"\n\t\t\t this.setState({customFunctionNameCheck:true});\n\t\t}\n\t\tif(newCustomFrom.trim()===\"\")\n\t\t{\n\t\t\tfailMessage= failMessage+'Step From can not be blank.';\n\t\t\tthis.setState({customFunctionstepFromCheck:true});\n\t\t}\n\t\tif(newCustomTo.trim()===\"\")\n\t\t{\n\t\t\tfailMessage= failMessage+'Step To can not be blank';\n\t\t\tthis.setState({customFunctionstepToCheck:true});\n\t\t}\n\t\tif(failMessage.trim() !==\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:failMessage})\n\t\t}\n\t\tif(isNaN(newCustomFrom))\n\t\t{\n\t\t\tfailMessage= failMessage+'Please provide integer value in Step From* field.';\n\t\t\tthis.setState({customFunctionstepFromCheck:true});\n\t\t}\n\t\tif(isNaN(newCustomTo))\n\t\t{\n\t\t\tfailMessage= failMessage+'Please provide integer value in Step To* field.';\n\t\t\tthis.setState({customFunctionstepToCheck:true});\n\t\t}\n\t\tif(failMessage.trim() !==\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:failMessage})\n\t\t}\n\t\tvar check = CheckValueFromJson(this.state.allActionNameList,newCustomfunction)\n\t\tif(check)\n\t\t{\n\t\t\t  this.setState({customFunctionNameCheck:true});\n\t\t\t  this.setState({modal:true})\n\t\t\t  return this.setState({modalValidationText:'Function '+newCustomfunction+' is already exist.'})\n\t\t}\n\t\tif(newCustomFrom>newCustomTo)\n\t\t{\n\t\t\tthis.setState({customFunctionstepToCheck:true});\n\t\t\t  this.setState({modal:true})\n\t\t\t  return this.setState({modalValidationText:'Step From* should be less than or equal to Step To*'})\n\t\t}\n\n\t\t//-- Save Test Steps\n\t\tfailMessage='';\n\t\tvar tesStepRowCount =this.state.TestScriptTestData.length;\n\t\t\n\t\tif(tesStepRowCount <newCustomFrom)\n\t\t{\n\t\t\tfailMessage= 'Test Script does not have '+newCustomFrom+' steps.'\n\t\t\tthis.setState({customFunctionstepFromCheck:true});\n\t\t}\n\t\tif(tesStepRowCount <newCustomTo)\n\t\t{\n\t\t\tfailMessage= 'Test Script does not have '+newCustomFrom+' steps.'\n\t\t\tthis.setState({customFunctionstepToCheck:true});\n\t\t}\n\t\tif(failMessage.trim()!==\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:failMessage})\n\t\t}\n        var validationMessageofPost='';\n\t\tvar jstestStepData={};\n\t\tvar jstestStepDatacollection={};\n\t\tvar ORTestStepData={};\n\t\tvar ORItem={};\n\t\tvar Item=0;\n\t\tthis.setState({loaderTestSteps:true})\n\t\tvar succesStep = true;\n\t\tif(tesStepRowCount>0)\n\t\t{\n\t\t\tvar StepNo=0;\n\t\t\tfor(let i=newCustomFrom-1;i<newCustomTo;i++)\n\t\t\t{\n\t\t\t\tStepNo= StepNo+1;\n\t\t\t\tjstestStepData={};\n\t\t\t\tORTestStepData={};\n\t\t\t\tvar locatorName= SetJsonContent(this.state.TestScriptTestData[i].locator);\n\t\t\t\tvar locatorProperty= SetJsonContent(this.state.TestScriptTestData[i].locatorproperty);\n\t\t\t\tjstestStepData[\"teststepid\"]=SetJsonContent(StepNo);\n\t\t\t\tjstestStepData[\"stepdescription\"]=SetJsonContent(this.state.TestScriptTestData[i].stepdescription);\n\t\t\t\tjstestStepData[\"action\"]=SetJsonContent(this.state.TestScriptTestData[i].action);\n\t\t\t\tjstestStepData[\"locator\"]=locatorName;\n\t\t\t\tjstestStepData[\"locatorproperty\"]=locatorProperty;\n\t\t\t\tjstestStepData[\"value\"]=SetJsonContent(this.state.TestScriptTestData[i].value);\n\t\t\t\tjstestStepData[\"exitIfFail\"]=SetJsonContent(this.state.TestScriptTestData[i].exitIfFail);\n\t\t\t\tjstestStepDatacollection[StepNo]=jstestStepData;\n\t\t\t\tif(locatorName.trim() !=='' && locatorProperty.trim() !=='' )\n\t\t\t\t{\n\t\t\t\t\tItem=Item+1;\n\t\t\t\t\tORTestStepData[\"locator\"]=locatorName;\n\t\t\t\t\tORTestStepData[\"locatorproperty\"]=locatorProperty;\n\t\t\t\t\tORItem[Item]=ORTestStepData;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tlet OrToTatalItem = Object.keys(ORItem).length;\n\t\t\tif(OrToTatalItem>0)\n\t\t\t{\n\t\t\t\tvar ORjson = JSON.stringify(ORItem)\n\t\t\t\tvar ORAPI =APIBasePath+'customfunction';\n\t\t\t\tvar requestOptions = {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\tbody: ORjson\n\t\t\t\t};\n\t\t\t\tconst SaveORRequest = async () => \n\t\t\t\t{\n\t\t\t\t\tconst ORResponse = await fetch(ORAPI,requestOptions);\n\t\t\t\t\tconst ORJson = await ORResponse.json();\n\t\t\t\t\tif(!ORJson.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tsuccesStep= false;\n\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\treturn this.setState({modalValidationText:ORJson.servermessage})\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tSaveORRequest();\n\t\t\t}\n\t\t\tif(!succesStep)\n\t\t\t{\n\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar json = JSON.stringify(jstestStepDatacollection);\n\t\t\t requestOptions = \n\t\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\tbody: json\n\t\t\t};\n\t\t\tconst req3 = async () => \n\t\t\t{\n\t\t\t  const request3 = await fetch(APIBasePath+'testscript?customfunctionName='+newCustomfunction+'&test=',requestOptions)\n\t\t\t  const req3Response = await request3.json();\n\t\t\t  if(!req3Response.success)\n\t\t\t  {\n\t\t\t\t  this.setState({loaderTestSteps:false})\n\t\t\t\tthis.setState({modal:true})\n\t\t\t\treturn this.setState({modalValidationText:'ISSUE: '+this.state.postResponceresult.servermessage})\n\t\t\t  }\n\t\t\t  \tthis.setState({customFunctionName:''})\n\t\t\t\tthis.setState({customStepFrom:''})\n\t\t\t\tthis.setState({customStepTo:''})\n\t\t\t\tthis.setState({modal:true})\n\t\t\t\tthis.setState({loaderTestSteps:false});\n\t\t\t\treturn this.setState({modalValidationText:this.state.postResponceresult.servermessage})\n\t\t\t}\n\t\t\treq3();\n\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Test Steps is missing in test scripts.'})\n\t\t}\n\n\t}\n\tupdateENV(event){\n\t\tvar onchangeenvvalue = event.target.value;\n\t\tvar PrevEnv = this.state.Env;\n\t\tif(onchangeenvvalue===PrevEnv)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({testscriptcheckENV : ''})\n\t\tthis.setState({CommonDataTotalSize : 0})\n\t\tthis.setState({CommonDataItem : []})\n\t\tthis.setState({Env : ''})\n\t\tthis.setState({Env : event.target.value})\n\t\tthis.setState({loader : true})\n\t\tvar URL =  APIBasePath+'testscript?commonitem='+onchangeenvvalue;\n\t\tconst req1 = async () => \n\t\t{\n\t\t  const request1 = await fetch(URL)\n\t\t  const req1Response = await request1.json();\n\t\t  this.setState({CommonDataItem:GetListOfListItemforCommonItem(req1Response)})\n\t\t  this.setState({CommonDataTotalSize:this.state.CommonDataItem.length})\n\t\t  //@ add common Test Data\n\t\t  var UIModule = this.state.ModuleName;\n\t\t  var UITestID = this.state.NewTestID;\n\t\t  if(UIModule.trim()===\"\")\n\t\t  {\n\t\t\t  this.setState({loader : false})\n\t\t\t  return;\n\t\t  }\n\t\t  if(UITestID.trim()===\"\")\n\t\t  {\n\t\t\t  this.setState({loader : false})\n\t\t\t  return;\n\t\t  }\n\t\t  var testDataHeaderCol= [{dataField: 'testdatacolid',text: '#',headerStyle: { width: '40px' }}];\n\t\t  this.setState({ testDatacolumns:testDataHeaderCol});\n\t\t  this.setState({ testDataItemrowList:[]});\n\t\t  var testDataAPI =APIBasePath+'updatetestscript?env='+onchangeenvvalue+'&module='+UIModule+'&testid='+UITestID;\n\t\t  const TestScriptDataCheck = async () => \n\t\t  {\n\t\t\t  const testDataResponse = await fetch(testDataAPI);\n\t\t\t  const testDataContentItem = await testDataResponse.json();\n\t\t\t  var colHeader=[];\n\t\t\t  if(testDataContentItem.length>0 )\n\t\t\t  {\n\t\t\t\t  var JsonTestDataItem = testDataContentItem[0];\n\t\t\t\t  var count = Object.keys(JsonTestDataItem).length;\n\t\t\t\t  if(count>0)\n\t\t\t\t  {\n\t\t\t\t\t  //@ Set HeaderName\n\t\t\t\t\t  var firstRowInfo= JsonTestDataItem[1];\n\t\t\t\t\t  colHeader = GetallKeyFromJsonResponce(firstRowInfo);\n\t\t\t\t\t  if(colHeader.length>0)\n\t\t\t\t\t  {\n\t\t\t\t\t\t for(let i=0;i<colHeader.length;i++)\n\t\t\t\t\t\t {\n\t\t\t\t\t\t  //var addcolumn = i;\n\t\t\t\t\t\t  var coldatafiledName='testdataColumn'+i\n\t\t\t\t\t\t  this.setState({ testDatacolumns: [...this.state.testDatacolumns, {\n\t\t\t\t\t\t\t  dataField: coldatafiledName,\n\t\t\t\t\t\t\t  text: colHeader[i],\n\t\t\t\t\t\t\t  headerEvents: {\n\t\t\t\t\t\t\t\t  onClick: (e) => \n\t\t\t\t\t\t\t\t  {\n\t\t\t\t\t\t\t\t\t  this.setState({selectedHeaderColumn:e.target.innerHTML});\n\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t  }] });\n\t\t\t\t\t\t }\n\t\t\t\t\t  }\n\t\t\t\t\t  //@ Add Row Information\n\t\t\t\t  }\n\t\t\t\t  var allColItem=[];\n\t\t\t\t  var collist={}\n\t\t\t\t  for(let i=1;i<=count;i++)\n\t\t\t\t  {\n\t\t\t\t\t  collist={}\n\t\t\t\t\t  collist['testdatacolid']=i;\n\t\t\t\t\t  for(let j=0;j<colHeader.length;j++)\n\t\t\t\t\t  {\n\t\t\t\t\t\t  var keyName= colHeader[j];\n\t\t\t\t\t\t  collist['testdataColumn'+j] = JsonTestDataItem[i][keyName];\n\t\t\t\t\t  }\n\t\t\t\t\t  allColItem.push(collist);\n\t\t\t\t\t  \n\t\t\t\t  }\n\t\t\t\t  this.setState({ testDataItemrowList: allColItem});\n\t\t\t\t  this.setState({loader : false})\n\t\t\t  }\n\t\t\t  else\n\t\t\t  {\n\t\t\t\tthis.setState({loader : false})\n\t\t\t  }\n\t\t  }\n\t\t  TestScriptDataCheck();\n\t\t}\n\t\treq1();\n\n\n\t  }\n\t  updateTestID(event){\n\n\t\tvar onChnageValue = event.target.value;\n\t\tvar PrevTestID= this.state.NewTestID;\n\t\tif(onChnageValue===PrevTestID)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({testscriptchecktestID : false})\n\t\t\n\t\tthis.setState({NewTestID : ''})\n\t\tthis.setState({NewTestID : onChnageValue})\n\n\t\t//@ Call API for Test scripts Content\n\n\t\t   //@ get module and ID\n\t\t   var UIEnv = this.state.Env;\n\t\t   var UIModule = this.state.ModuleName;\n\t\t   var UITestID = event.target.value;\n\t\t\tvar testscriptAPI =APIBasePath+'updatetestscript?module='+UIModule+'&testid='+UITestID;\n\t\t\tconst TestScriptContentCheck = async () => \n\t\t\t{\n\t\t\t\tthis.setState({loader:true})\n\t\t\t\tconst ORResponse = await fetch(testscriptAPI);\n\t\t\t\tconst testscriptcontentItem = await ORResponse.json();\n\t\t\t\tvar JsonItem = testscriptcontentItem[0];\n\t\t\t\tvar count = Object.keys(JsonItem).length;\n\t\t\t\tvar jstestStepData={};\n\t\t        var jstestStepDatacollection=[];\n\t\t\t\tfor(let i=1;i<=count;i++)\n\t\t\t\t{\n\t\t\t\t\tjstestStepData={};\n\t\t\t\t\tjstestStepData[\"teststepid\"]=JsonItem[i].teststepid;\n\t\t\t\t\tjstestStepData[\"stepdescription\"]=JsonItem[i].stepdescription;\n\t\t\t\t\tjstestStepData[\"action\"]=JsonItem[i].action;\n\t\t\t\t\tjstestStepData[\"locator\"]=JsonItem[i].locator;\n\t\t\t\t\tjstestStepData[\"locatorproperty\"]=JsonItem[i].locatorproperty;\n\t\t\t\t\tjstestStepData[\"value\"]=JsonItem[i].value;;\n\t\t\t\t\tjstestStepData[\"exitIfFail\"]=JsonItem[i].exitIfFail;\n\t\t\t\t\t//jstestStepDatacollection[i]=jstestStepData;\n\t\t\t\t\tjstestStepDatacollection.push(jstestStepData);\n\t\t\t\t}\n\t\t\t\tthis.setState({TestScriptTestData:jstestStepDatacollection})\n\n\t\t\t\t//@ set Test Data Column\n\t\t\t\tif(UIEnv.trim()!==\"\")\n\t\t\t\t{\n\t\t\t\t\tvar testDataHeaderCol= [{dataField: 'testdatacolid',text: '#',headerStyle: { width: '40px' }}];\n\t\t\t\t\tthis.setState({ testDatacolumns:testDataHeaderCol});\n\t\t\t\t\tthis.setState({ testDataItemrowList:[]});\n\t\t\t\t\t\n\t\t\t\t\tvar testDataAPI =APIBasePath+'updatetestscript?env='+UIEnv+'&module='+UIModule+'&testid='+UITestID;\n\t\t\t\t\tconst TestScriptDataCheck = async () => \n\t\t\t\t\t{\n\t\t\t\t\t\tconst testDataResponse = await fetch(testDataAPI);\n\t\t\t\t\t\tconst testDataContentItem = await testDataResponse.json();\n\t\t\t\t\t\tvar colHeader=[];\n\t\t\t\t\t\tif(testDataContentItem===null)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.setState({loader:false})\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(testDataContentItem.length>0 )\n\t\t\t\t\t\t{\n\t\t\t\t\t\t    var JsonTestDataItem = testDataContentItem[0];\n\t\t\t\t\t\t\tvar count = Object.keys(JsonTestDataItem).length;\n\t\t\t\t\t\t\tif(count>0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t//@ Set HeaderName\n\t\t\t\t\t\t\t\tvar firstRowInfo= JsonTestDataItem[1];\n\t\t\t\t\t\t\t\tcolHeader = GetallKeyFromJsonResponce(firstRowInfo);\n\t\t\t\t\t\t\t\tif(colHeader.length>0)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t   for(let i=0;i<colHeader.length;i++)\n\t\t\t\t\t\t\t\t   {\n\t\t\t\t\t\t\t\t\t//var addcolumn = i;\n\t\t\t\t\t\t\t\t\tvar coldatafiledName='testdataColumn'+i\n\t\t\t\t\t\t\t\t\tthis.setState({ testDatacolumns: [...this.state.testDatacolumns, {\n\t\t\t\t\t\t\t\t\t\tdataField: coldatafiledName,\n\t\t\t\t\t\t\t\t\t\ttext: colHeader[i],\n\t\t\t\t\t\t\t\t\t\theaderEvents: {\n\t\t\t\t\t\t\t\t\t\t\tonClick: (e) => \n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({selectedHeaderColumn:e.target.innerHTML});\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t\t}] });\n\t\t\t\t\t\t\t\t   }\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t//@ Add Row Information\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar allColItem=[];\n\t\t\t\t\t\t\tvar collist={}\n\t\t\t\t\t\t\tfor(let i=1;i<=count;i++)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcollist={}\n\t\t\t\t\t\t\t\tcollist['testdatacolid']=i;\n\t\t\t\t\t\t\t\tfor(let j=0;j<colHeader.length;j++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tvar keyName= colHeader[j];\n\t\t\t\t\t\t\t\t\tcollist['testdataColumn'+j] = JsonTestDataItem[i][keyName];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tallColItem.push(collist);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setState({ testDataItemrowList: allColItem});\n\t\t\t\t\t\t\tthis.setState({loader:false})\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tthis.setState({loader:false})\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tTestScriptDataCheck();\n\t\t\t\t}\n\t\t\t}\n\t\t\tTestScriptContentCheck();\n\n\t\t}\n\n\t\tSaveTestScripts()\n\t\t{\n\t\t\t\n\t\t  var validationMessageofPost =''\n\t\t  var ExceptionMessage ='';\n\t\t  var testscriptENV= this.state.Env;\n\t\t  var testscriptModule= this.state.ModuleName;\n\t\t  var testscriptNewTestID= this.state.NewTestID\n\t\t  var testscripttestCaseName = this.state.testCaseName\n\t\t  if(testscriptENV.trim()===\"\")\n\t\t  {\n\t\t\tthis.setState({testscriptcheckENV:true})\n\t\t\tExceptionMessage= ExceptionMessage+ 'Environment** can not be left blank.'\n\t\t  }\n\t\t  if(testscriptModule.trim()===\"\")\n\t\t  {\n\t\t\tthis.setState({testscriptcheckModule:true})\n\t\t\tExceptionMessage= ExceptionMessage+ 'Module* can not be left blank.'\n\t\t  }\n\t\t  if(testscriptNewTestID.trim()===\"\")\n\t\t  {\n\t\t\tthis.setState({testscriptchecktestID:true})\n\t\t\tExceptionMessage= ExceptionMessage+ 'TestID* can not be left blank.'\n\t\t  }\n\t\t  if(ExceptionMessage.trim() !==\"\")\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:ExceptionMessage})\n\t\t  }\n\n\t\t  //@ check action Name is not blank on step\n\t\t  var blankCheck= this.state.TestScriptTestData[0].action;\n\t\t  if(blankCheck.trim()===\"\")\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Action name can not be blank on test step.'})\n\t\t  }\n\t\t  var successTestStep = true;\n\t\t  this.setState({loaderTestSteps:true})\n\t\t  const req1 = async () => \n\t\t  {\n\t\t\t\t//-- Saving Common test data\n\t\t\t\tvar lastindex = this.state.CommonDataTotalSize;\n\t\t\t\tvar commondataCount = this.state.CommonDataItem.length\n\t\t\t\tvar jsObj={};\n\t\t\t\tfor(let i=lastindex;i<commondataCount;i++)\n\t\t\t\t{\n\t\t\t\t\tvar ItemName = this.state.CommonDataItem[i].commonKeyName;\n\t\t\t\t\tif(ItemName.trim()!=='')\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ItemValue = this.state.CommonDataItem[i].commonKeyValue;\n\t\t\t\t\t\tjsObj[ItemName]=ItemValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar json = JSON.stringify(jsObj);\n\t\t\t\tlet count = Object.keys(jsObj).length;\n\t\t\t\tif(count>0)\n\t\t\t\t{\n\t\t\t\t\tvar requestOptions = \n\t\t\t\t\t{\n\t\t\t\t\t  method: 'POST',\n\t\t\t\t\t  headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\t  body: json\n\t\t\t\t\t};\n\t\t\t\t\tconst req2 = async () => \n\t\t\t\t\t{\n\t\t\t\t\t  const request2 = await fetch(APIBasePath+'testscript?environment='+testscriptENV,requestOptions)\n\t\t\t\t\t  const req2Response = await request2.json();\n\t\t\t\t\t  if(!req2Response.success)\n\t\t\t\t\t  {\n\t\t\t\t\t\tsuccessTestStep= false;\n\t\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\treturn this.setState({modalValidationText:'ISSUE: '+this.state.postResponceresult.servermessage})\n\t\t\t\t\t  }\n\t\t\t\t\t  \n\t\t\t\t\t}\n\t\t\t\t\treq2();\n\t\t\t\t}\n\t\t\t\tif(!successTestStep)\n\t\t\t\t{\n\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//-- Saving  test data\n\t\t\t\tvar testdataRowCount =this.state.testDataItemrowList.length;\n\t\t\t\tvar jsTestda={};\n\t\t\t\tvar jstestdataItemList={};\n\t\t\t\t//var runtimeText=[];\n\t\t\t\tif(testdataRowCount>0)\n\t\t\t\t{\n\t\t\t\t\tvar testdatacolumnCount=this.state.testDatacolumns.length;\n\t\t\t\t\tfor(let i=0;i<testdataRowCount;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tjsTestda={};\n\t\t\t\t\t\tfor(let j=1;j<testdatacolumnCount;j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar colName = this.state.testDatacolumns[j].text;\n\t\t\t\t\t\t\tvar colKeyName = this.state.testDatacolumns[j].dataField.toString();\n\t\t\t\t\t\t\tvar colValue = this.state.testDataItemrowList[i][colKeyName];\n\t\t\t\t\t\t\tjsTestda[colName]=colValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjstestdataItemList[i+1]=jsTestda;\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tjson = JSON.stringify(jstestdataItemList);\n\t\t\t\t\trequestOptions = \n\t\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\tbody: json\n\t\t\t\t\t};\n\t\t\t\t\tconst req3 = async () => \n\t\t\t\t\t{\n\t\t\t\t\t  const request3 = await fetch(APIBasePath+'testscript?environment='+testscriptENV+'&module='+testscriptModule+'&testId='+testscriptNewTestID,requestOptions)\n\t\t\t\t\t  const req3Response = await request3.json();\n\t\t\t\t\t  if(!req3Response.success)\n\t\t\t\t\t  {\n\t\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\t\tsuccessTestStep= false;\n\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\treturn this.setState({modalValidationText:'ISSUE: '+req3Response.servermessage})\n\t\t\t\t\t  }\n\t\t\t\t\t}\n\t\t\t\t\treq3();\n\t\t\n\t\t\t\t}\n\t\t\t\tif(!successTestStep)\n\t\t\t\t{\n\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//-- Save Test Steps\n\t\t\t\tvar tesStepRowCount =this.state.TestScriptTestData.length;\n\t\t\t\tvar jstestStepData={};\n\t\t\t\tvar jstestStepDatacollection={};\n\t\t\t\tvar ORTestStepData={};\n\t\t\t\tvar ORItem={};\n\t\t\t\tvar Item=0;\n\t\t\t\tif(tesStepRowCount>0)\n\t\t\t\t{\n\t\t\t\t\tfor(let i=0;i<tesStepRowCount;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tjstestStepData={};\n\t\t\t\t\t\tORTestStepData={};\n\t\t\t\t\t\tvar locatorName= SetJsonContent(this.state.TestScriptTestData[i].locator);\n\t\t\t\t\t\tvar locatorProperty= SetJsonContent(this.state.TestScriptTestData[i].locatorproperty);\n\t\t\t\t\t\tjstestStepData[\"teststepid\"]=SetJsonContent(this.state.TestScriptTestData[i].teststepid);\n\t\t\t\t\t\tjstestStepData[\"stepdescription\"]=SetJsonContent(this.state.TestScriptTestData[i].stepdescription);\n\t\t\t\t\t\tjstestStepData[\"action\"]=SetJsonContent(this.state.TestScriptTestData[i].action);\n\t\t\t\t\t\tjstestStepData[\"locator\"]=locatorName;\n\t\t\t\t\t\tjstestStepData[\"locatorproperty\"]=locatorProperty;\n\t\t\t\t\t\tjstestStepData[\"value\"]=SetJsonContent(this.state.TestScriptTestData[i].value);\n\t\t\t\t\t\tjstestStepData[\"exitIfFail\"]=SetJsonContent(this.state.TestScriptTestData[i].exitIfFail);\n\t\t\t\t\t\tjstestStepDatacollection[i+1]=jstestStepData;\n\t\t\t\t\t\tif(locatorName.trim() !=='' && locatorProperty.trim() !=='' )\n\t\t\t\t\t\t{\n\t\t\t\t\t\tItem=Item+1;\n\t\t\t\t\t\tORTestStepData[\"locator\"]=locatorName;\n\t\t\t\t\t\tORTestStepData[\"locatorproperty\"]=locatorProperty;\n\t\t\t\t\t\tORItem[Item]=ORTestStepData;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\tlet OrToTatalItem = Object.keys(ORItem).length;\n\t\t\t\t\tif(OrToTatalItem>0)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar ORjson = JSON.stringify(ORItem)\n\t\t\t\t\t\tvar ORAPI =APIBasePath+'customfunction';\n\t\t\t\t\t\t\trequestOptions = {\n\t\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\t\t\tbody: ORjson\n\t\t\t\t\t\t};\n\t\t\t\t\t\tconst SaveORRequest = async () => \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst ORResponse = await fetch(ORAPI,requestOptions);\n\t\t\t\t\t\t\tconst ORJson = await ORResponse.json();\n\t\t\t\t\t\t\tif(!ORJson.success)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsuccessTestStep= false;\n\t\t\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\t\t\treturn this.setState({modalValidationText:ORJson.servermessage})\n\t\t\t\t\t\t\t}\n\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSaveORRequest();\n\t\t\t\t\t}\n\t\t\t\t\tif(!successTestStep)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tjson = JSON.stringify(jstestStepDatacollection);\n\t\t\t\t\trequestOptions = \n\t\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\tbody: json\n\t\t\t\t\t};\n\t\t\t\t\tvar API=APIBasePath+'updatetestscript?module='+testscriptModule+'&testId='+testscriptNewTestID+'&testcasename='+testscripttestCaseName+'&test=';\n\t\t\t\t\tconst req7 = async () => \n\t\t\t\t\t{\n\t\t\t\t\t  const request7 = await fetch(API,requestOptions)\n\t\t\t\t\t  const req7Response = await request7.json();\n\t\t\t\t\t  if(!req7Response.success)\n\t\t\t\t\t  {\n\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\treturn this.setState({modalValidationText:'ISSUE: '+this.state.postResponceresult.servermessage})\n\t\t\t\t\t  }\n\t\t\t\t\t  if(!successTestStep)\n\t\t\t\t\t  {\n\t\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\t\treturn;\n\t\t\t\t\t  }\n\t\t\t\t\t  \t//@ Reset Base State\n\t\t\t\t\t\tthis.setState({NewColName:''})\n\t\t\t\t\t\tthis.setState({selectedHeaderColumn:''})\n\t\t\t\t\t\tthis.setState({TestScriptTestData:[]})\n\t\t\t\t\t\tthis.setState({Env:''})\n\t\t\t\t\t\tthis.setState({ModuleName:''})\n\t\t\t\t\t\tthis.setState({NewTestID:''})\n\t\t\t\t\t\tthis.setState({testCaseName:''})\n\t\t\t\t\t\tthis.setState({CommonDataItem:[]})\n\t\t\t\t\t\tthis.setState({testDatacolumns:[{dataField: 'testdatacolid',text: '#',headerStyle: { width: '40px' }}]})\n\t\t\t\t\t\t// this.setState({TestScriptTestData:[{teststepid: 1, stepdescription: 'Add Test Step 1 description',action:'',locator:'',locatorproperty:'',value:'',exitIfFail:'Y'}]})\n\t\t\t\t\t\tthis.setState({TestScriptTestData:[]})\n\t\t\t\t\t\tthis.setState({testDataItemrowList:[]})\n\t\t\t\t\t\tthis.setState({customFunctionName:''})\n\t\t\t\t\t\tthis.setState({customStepFrom:''})\n\t\t\t\t\t\tthis.setState({customStepTo:''})\n\t\t\t\t\t\tthis.setState({customFunctionNameCheck:false})\n\t\t\t\t\t\tthis.setState({customFunctionstepFromCheck:false})\n\t\t\t\t\t\tthis.setState({customFunctionstepToCheck:false})\n\t\t\t\t\t\tconst req8 = async () => \n\t\t\t\t\t\t{\n\t\t\t\t\t\t  const request8 = await fetch(APIBasePath+'testcase?moduleName=')\n\t\t\t\t\t\t  const req8Response = await request8.json();\n\t\t\t\t\t\t  this.setState({allModuleName:req8Response})\n\t\t\t\t\t\t  \tconst req9 = async () => \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tconst request9 = await fetch(APIBasePath+'testscript?actionname')\n\t\t\t\t\t\t\t\tconst req9Response = await request9.json();\n\t\t\t\t\t\t\t\tthis.setState({allActionNameList:req9Response})\n\t\t\t\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\t\t\treturn this.setState({modalValidationText:'Test scripts is successfully updated.'})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treq9();\n\t\t\t\t\t\t}\n\t\t\t\t\t\treq8();\n\t\t\t\t\t}\n\t\t\t\t\treq7();\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\treturn this.setState({modalValidationText:'Test Steps is missing in test scripts.'})\n\t\t\t\t}\n\t\t  }\n\t\t  req1();\n\t\t \n\t}\n\n\taddNewCommonData = () => \n\t{\n\t\tvar ItemCount =this.state.CommonDataItem.length\n\t\t//console.log(ItemCount);\n\t\tif(ItemCount>0)\n\t\t{\n\t\t\tvar valuecheck = this.state.CommonDataItem[ItemCount-1].commonKeyName\n\t\t\t//console.log(valuecheck);\n\t\t\tif(valuecheck.trim()===\"\")\n\t\t\t{\n\t\t\t\tthis.setState({modal:true})\n\t\t\t    return this.setState({modalValidationText:'Before adding new Common key, add previous Common key.'})\n\t\t\t}\n\t\t}\n\t\tthis.setState({loader:true})\n\t\tvar lastOneId = this.state.CommonDataItem.length + 1;\n\t\tthis.setState({ CommonDataItem: [...this.state.CommonDataItem, {\n\t\t\tid: `${lastOneId}`, commonKeyName: ``,commonKeyValue:``\n\t\t}] });\n\t\tthis.setState({loader:false})\n\t}\n\taddNewColumnonTestData = () => \n\t{\n\t\tthis.setState({headernameCheck:false})\n\t\tvar headerName = this.state.newHeaderName.toUpperCase();\n\t\tif(headerName.trim()===\"\")\n\t\t{\n\t\t  return this.setState({headernameCheck:true})\n\t\t}\n\t\tvar lastColumn = this.state.testDatacolumns.length;\n\t\tfor(let i=0;i<=lastColumn-1;i++)\n\t\t{\n\t\t  if(this.state.testDatacolumns[i].text===headerName.trim())\n\t\t  {\n\t\t\treturn this.setState({headernameCheck:true})\n\t\t  }\n\t\t  \n\t\t}\n\t\tvar addcolumn = lastColumn;\n\t\tvar coldatafiledName='testdataColumn'+(lastColumn-1)\n\t\tthis.setState({selectedLastHeaderColumn:addcolumn});\n\t\tthis.setState({ testDatacolumns: [...this.state.testDatacolumns, {\n\t\t\tdataField: coldatafiledName,\n\t\t\ttext: headerName,\n\t\t\theaderEvents: {\n\t\t\t\tonClick: (e) => \n\t\t\t\t{\n\t\t\t\t\tthis.setState({selectedHeaderColumn:e.target.innerHTML});\n\t\t\t\t\tthis.setState({selectedHeaderColumnIndex:lastColumn});\n\t\t\t\t}\n\t\t\t  }\n\t\t\t  \n\t\t}] });\n\t\t//@ add Row Information\n\t\tvar ItemList = this.state.testDataItemrowList.length;\n\t\tfor(let i=0;i<ItemList;i++)\n\t\t{\n\t\t\tthis.state.testDataItemrowList[i][coldatafiledName]='';\n\t\t}\n\t    this.setState({newHeaderName:''});\n\t\t\n\t}\n\taddNewTestSteps = () => \n\t{\n\t\t//# New Implementation\n\t\tvar ItemList = this.state.TestScriptTestData;\n\n\t\tif(ItemList.length>0)\n\t\t{\n\t\t\tfor(let i=0;i<ItemList.length;i++)\n\t\t\t{\n\t\t\t\tvar actionName= ItemList[i]['action'];\n\t\t\t\tif(actionName.trim() ===\"\")\n\t\t\t\t{\n\t\t\t\t\tthis.setState({modal:true})\n\t\t\t        return this.setState({modalValidationText:'Please add the test step information for record number '+(i+1)+', before adding new record.'});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        this.setState({loaderTestSteps:true})\n\t\tlet selectedID = this.state.selectedTestStepNumber;\n\t\tif(selectedID>ItemList.length)\n\t\t{\n\t\t\tselectedID=0;\n\t\t}\n\t\tif(selectedID ===0)\n\t\t{\n\t\t\tselectedID= ItemList.length;\n\t\t}\n\t\tvar UpdatedRow=[]\n\t\tfor(let i=0;i<selectedID;i++)\n\t\t{\n\t\t\tUpdatedRow[i]= this.state.TestScriptTestData[i];\n\t\t}\n\t\t//@ add New Row\n\t\t\n\t\tvar NewItemContent ={};\n\t\ttry\n\t\t{\n\t\tselectedID= parseInt(selectedID.trim())\n\t\t}\n\t\tcatch(error)\n\t\t{}\n\t\tvar StepNo= selectedID+1;\n\t\tNewItemContent['teststepid']=StepNo;\n\t\tNewItemContent['stepdescription']='Add Test Step '+StepNo+' description'\n\t\tNewItemContent['action']='';\n\t\tNewItemContent['locator']='';\n\t\tNewItemContent['locatorproperty']='';\n\t\tNewItemContent['value']='';\n\t\tNewItemContent['exitIfFail']='Y';\n\t\tUpdatedRow.push(NewItemContent)\n\n\t\tfor(let i=selectedID;i<ItemList.length;i++)\n\t\t{\n\t\t\tItemList[i]['teststepid']=i+2;\n\t\t\tUpdatedRow.push(ItemList[i]);\n\t\t}\n\t\tthis.setState({ TestScriptTestData: UpdatedRow});\n\t\tthis.setState({loaderTestSteps:false})\n\t\t//# End of Implementation\n\t}\n\taddNewTestDataRow = () => \n\t{\n\t\tthis.setState({headernameCheck:false})\n\t\t//var itemlist ='';\n\t\tvar lastColumn = this.state.testDatacolumns.length;\n\t\tif(lastColumn>1)\n\t\t{\n\t\t\tvar lastOneId = this.state.testDataItemrowList.length + 1;\n\t\t\t//var valuetoadd = '';\n\t\t\tvar collist ={testdatacolid:lastOneId}\n\t\t\tfor(let i=1;i<lastColumn;i++)\n\t\t\t{\n\t\t\t\tvar keyVal='';\n\t\t\t\tvar colDatafield= 'testdataColumn'+(i-1);\n\t\t\t\tcollist[colDatafield] = keyVal;\n\t\t\t\t\n\t\t\t}\n\t\t\tthis.setState({ testDataItemrowList: [...this.state.testDataItemrowList, collist] });\n\t\t\t//this.setState({ testDataItemrowList: [...this.state.testDataItemrowList, {testdatacolid:`${lastOneId}`,testdataColumn1:'qa'+lastOneId}] });\n\t    }\n\n\t}\n\tdeleteTestDataRow = () => {\n\t\tvar lastOneId = this.state.testDataItemrowList.length;\n\t\tvar testData = this.state.testDataItemrowList.filter(m => m.testdatacolid !== lastOneId);\n\t\tthis.setState({ testDataItemrowList: testData });\n\t  };\n\tdeleteCommonData = () => {\n\t\tthis.setState({loader:true})\n\t\tvar lastOneId = this.state.CommonDataItem.length;\n\t\tvar updatedBooks = this.state.CommonDataItem.filter(m => m.id !== lastOneId.toString());\n\t\tthis.setState({ CommonDataItem: updatedBooks });\n\t\tthis.setState({loader:false})\n\t  };\n\t  deleteTestSteps = () => \n\t  {\n\t\tvar ItemList = this.state.TestScriptTestData;\n\t\tif(ItemList.length===0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar selectedID = this.state.selectedTestStepNumber;\n\t\tif(selectedID===0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({loaderTestSteps:true})\n\t\tvar testData = this.state.TestScriptTestData.filter(m => m.teststepid !== selectedID);\n\t\tfor(let i=selectedID;i<=testData.length;i++)\n\t\t{\n\t\t\ttestData[i-1]['teststepid']=i;\n\t\t}\n\t\tthis.setState({ TestScriptTestData: testData });\n\t\tthis.setState({selectedTestStepNumber:0})\n\t\tthis.setState({selectedTestStepNumber:selectedID})\n\t\tthis.setState({loaderTestSteps:false})\n\t  };\n\t  deleteTestDataColumn = () => {\n\t\tvar HeaderCol= this.state.selectedHeaderColumn;\n\t\tif(HeaderCol.trim()===\"\" || HeaderCol.trim()===\"#\")\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar testDataContent = this.state.TestScriptTestData;\n\t\tvar StepNumber= '';\n\t\tfor(let i=0;i<testDataContent.length;i++)\n\t\t{\n\t\t\tvar StepNo= testDataContent[i].value;\n\t\t\t\n\t\t\tif(StepNo.trim()==='t.'+HeaderCol)\n\t\t\t{\n\t\t\t\tStepNumber= StepNumber+','+(i+1);\n\t\t\t}\n\t\t}\n\t\tif(testDataContent.length>0)\n\t\t{\n\t\t\tif(StepNumber.trim()!=='')\n\t\t\t{\n\t\t\t\tthis.setState({modal:true})\n\t\t\t\treturn this.setState({modalValidationText:'Before Deleting column '+HeaderCol+' please remove test column reference from test step number '+StepNumber})\n\t\t\t}\n\t    }\n\t\t//@ get Index\n\t\tvar headerIndex=-1;\n\t\tfor(let i=0;i<this.state.testDatacolumns.length;i++)\n\t\t{\n\t\t\tif(this.state.testDatacolumns[i].text===HeaderCol)\n\t\t\t{\n\t\t\t\theaderIndex=i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(headerIndex>0)\n\t\t{\n\t\t\tvar testcol = this.state.testDatacolumns.filter(el => el.text !== HeaderCol);\n\t\t\tfor(let i=headerIndex;i<testcol.length;i++)\n\t\t\t{\n\t\t\t\tvar index = i-1;\n\t\t\t\tvar keyName='testdataColumn'+index;\n\t\t\t\ttestcol[i].dataField=keyName;\n\t\t\t}\n\t\t\tthis.setState({testDatacolumns:testcol});\n\t\t\tvar RowInfo= this.state.testDataItemrowList;\n\t\t\tvar RowCount = this.state.testDataItemrowList.length;\n\t\t\tfor(let i=0;i<RowCount;i++)\n\t\t\t{\n\t\t\t\tfor(let j=headerIndex;j<testcol.length;j++)\n\t\t\t\t{\n\t\t\t\t\t index = j-1;\n\t\t\t\t\t keyName='testdataColumn'+index;\n\t\t\t\t\tvar OlderKey='testdataColumn'+(index+1);\n\t\t\t\t\tRowInfo[i][keyName]=this.state.testDataItemrowList[i][OlderKey];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({testDataItemrowList:RowInfo});\n\t\t\tthis.setState({selectedHeaderColumn:''});\n\t\t\t\n\t\t}\n\t\t\n\n\t  };\n\t  handleDataChange = ({ dataSize }) => {\n\t\tthis.setState({ rowCount: dataSize });\n\t  }\n\t  handleOnSelect = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\tvar selectedrow= row.id;\n\t\t\tvar GetItem = this.state.CommonDataItem[selectedrow-1].commonKeyName;\n\t\t\tthis.setState({ selectedCommonKey: GetItem });\n\n\t\t}\n\n\t}\n\thandleOnTestStepSelect = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\tvar selectedrow= row.teststepid;\n\t\t\tthis.setState({ selectedTestStepNumber: selectedrow });\n\t\t}\n\n\t}\n\thandleOnUtilitySelect = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\t//var selectedrow= row.utilityfunction;\n\t\t\tvar selectedUtilityRowId= row.id;\n\t\t\tthis.setState({selectedUtilityRow:selectedUtilityRowId});\n\t\t}\n\n\t}\n\ttoggle = modalType => () => {\n\t\tif (!modalType) {\n\t\t  return this.setState({\n\t\t\tmodal: !this.state.modal,\n\t\t  });\n\t\t}\n\t\n\t\tthis.setState({\n\t\t  [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n\t\t});\n\t  };\n\n\t  toggleUtilityFunction = modalType => () => {\n\t\tif (!modalType) {\n\t\t  return this.setState({\n\t\t\tutilityFunction: !this.state.utilityFunction,\n\t\t  });\n\t\t}\n\t\n\t\tthis.setState({\n\t\t  [`utilityFunction_${modalType}`]: !this.state[`utilityFunction_${modalType}`],\n\t\t});\n\t  };\n\n    render() {\n\n\t  const selectRow = {\n\t\tmode: 'radio',\n\t\tonSelect: this.handleOnSelect\n\t\t};\n\t\tconst selectRowforUtilityFunction = {\n\t\tmode: 'radio',\n\t\tonSelect: this.handleOnUtilitySelect\n\t\t};\n\t\tconst selectTestScriptRow = {\n\t\tmode: 'radio',\n\t\tonSelect: this.handleOnTestStepSelect\n\t\t};\n\t\tconst rowEvents = {\n\t\t\tonClick: (e, row, rowIndex) => {\n\t\t\t\t//console.log(`clicked on row with index: ${rowIndex}`);\n\t\t}};\n\t  const options = {\n\t\tsizePerPage: 5,\n\t\thideSizePerPage: true,\n\t\thidePageListOnlyOnePage: true\n\t  };\n\t  const testScriptoptions = {\n\t\tsizePerPage: 10,\n\t\thideSizePerPage: true,\n\t\thidePageListOnlyOnePage: true\n\t  };\n\t  const Utilityoptions = {\n\t\tsizePerPage: 5,\n\t\thideSizePerPage: true,\n\t\thidePageListOnlyOnePage: true\n\t  };\n\t  var columns = [\n\t\t{\n\t\t  dataField: 'id',\n\t\t  text: '#',\n\t\t  headerStyle: { width: '40px' },\n\t\t  Cell: row => (\n\t\t\t<div>\n\t\t\t  <span title={ row.value }>{ row.value }</span>\n\t\t\t</div>\n\t\t  )\n\t\t},\n\t\t{\n\t\t  dataField: 'commonKeyName',\n\t\t  text: 'Key Name*',\n\t\t  filter: textFilter(),\n\t\t  validator: (newValue, row, column) => {\n\t\t\tif (newValue.trim()==='') {\n\t\t\t  return {\n\t\t\t\tvalid: false,\n\t\t\t\tmessage: 'Key Name* can not be blank.'\n\t\t\t  };\n\t\t\t}\n\t\t\tvar totalCount = this.state.CommonDataItem.length;\n\t\t\tfor(let i=0;i<totalCount;i++)\n\t\t\t{\n\t\t\t\tvar ItemName = this.state.CommonDataItem[i].commonKeyName;\n\t\t\t\tif(ItemName.trim().toLowerCase()===newValue.trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalid: false,\n\t\t\t\t\t\tmessage: 'Key Name* can not be duplicate.'\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'commonKeyValue',\n\t\t\ttext: 'Key Value',\n\t\t\tfilter: textFilter()\n\t\t  }\n\t  ];\n\t  var UtilityFunctioncolumns = [\n\t\t{\n\t\t  dataField: 'id',\n\t\t  text: '#',\n\t\t  headerStyle: { width: '40px' },\n\t\t  Cell: row => (\n\t\t\t<div>\n\t\t\t  <span title={ row.value }>{ row.value }</span>\n\t\t\t</div>\n\t\t  )\n\t\t},\n\t\t{\n\t\t  dataField: 'utilityfunction',\n\t\t  text: 'Utility Function*',\n\t\t  filter: textFilter()\n\t\t}\n\t  ];\n\t  var testScriptcolumns = [\n\t\t{\n\t\t  dataField: 'teststepid',\n\t\t  text: '#',\n\t\t  headerStyle: { width: '40px' }\n\t\t},\n\t\t{\n\t\t  dataField: 'stepdescription',\n\t\t  text: 'Step description*',\n\t\t  headerStyle: {\n\t\t  backgroundColor: '#c8e6c9'\n\t\t  },\n\t\t  validator: (newValue, row, column) => {\n\t\t  if (newValue.trim()==='') {\n\t\t\treturn {\n\t\t\t  valid: false,\n\t\t\t  message: 'Step description* can not be blank.'\n\t\t\t};\n\t\t  }\n\t\t  return true;\n\t\t}\n\t\t},\n\t\t{\n\t\t\tdataField: 'action',\n\t\t\ttext: 'Action*',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9',\n\t\t\t\twidth: '110px'\n\t\t\t  },\n\t\t\t  editor: {\n\t\t\t\ttype: Type.SELECT,\n\t\t\t\toptions: GetListOfListforActionName(this.state.allActionNameList)\n\t\t\t  },\n\t\t\t  validator: (newValue, row, column) => {\n\t\t\t  if (newValue.trim()==='') {\n\t\t\t\treturn {\n\t\t\t\t  valid: false,\n\t\t\t\t  message: 'Action* can not be blank.'\n\t\t\t\t};\n\t\t\t  }\n\t\t\t  return true;\n\t\t\t}\n\t\t\t  \n\t\t\t  \n\t\t},\n\t\t{\n\t\t\tdataField: 'locator',\n\t\t\ttext: 'Locator',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9',\n\t\t\t\twidth: '100px'\n\t\t\t\t\n\t\t\t  },\n\t\t\t  editor: {\n\t\t\t\ttype: Type.SELECT,\n\t\t\t\toptions: [{\n\t\t\t\t  value: 'id',\n\t\t\t\t  label: 'Id'\n\t\t\t\t}, {\n\t\t\t\t  value: 'name',\n\t\t\t\t  label: 'Name'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'classname',\n\t\t\t\t\tlabel: 'ClassName'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'xpath',\n\t\t\t\t\tlabel: 'XPath'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'linktext',\n\t\t\t\t\tlabel: 'LinkText'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'partiallinktext',\n\t\t\t\t\tlabel: 'PartialLinkText'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'tagname',\n\t\t\t\t\tlabel: 'TagName'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'cssselector',\n\t\t\t\t\tlabel: 'CssSelector'\n\t\t\t\t  }\n\t\t\t   ]\n\t\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'locatorproperty',\n\t\t\ttext: 'Locator Property',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9'\n\t\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'value',\n\t\t\ttext: 'Value',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9'\n\t\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'exitIfFail',\n\t\t\ttext: 'Exit',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9',\n\t\t\t\twidth: '60px'\n\t\t\t  },\n\t\t\t  editor: {\n\t\t\t\ttype: Type.SELECT,\n\t\t\t\toptions: [{\n\t\t\t\t  value: 'Y',\n\t\t\t\t  label: 'Y'\n\t\t\t\t}, {\n\t\t\t\t  value: 'N',\n\t\t\t\t  label: 'N'\n\t\t\t\t}]\n\t\t\t  }\n\t\t}\n\t\t\n\t  ];\n\n  return (\n    <Page title=\"Update Test Scripts\" breadcrumbs={[{ name: 'Update Test Scripts', active: true }]}>\n\t\t <Loader \n         type=\"ThreeDots\"\n         color=\"#00BFFF\"\n         height={50}\n         width={100}\n         timeout={120000} //3 secs\n         visible = {this.state.loader}\n        />\n      <Row>\n        <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Test Script Setup</CardHeader>\n            <CardBody>\n              <Form>\n\t\t\t  <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Environment*\n                  </Label>\n                  <Col>\n\t\t\t\t\t<Input invalid={this.state.testscriptcheckENV} type=\"select\" name=\"env\"  value={this.state.Env} onChange={this.updateENV.bind(this)}>\n\t\t\t\t\t<option selected=\"selected\">{this.state.Env}</option>\n\t\t\t\t\t<Options options={this.state.CommonTestData} />\n\t\t\t\t\t</Input>\n                  </Col>\n                </FormGroup>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Module*\n                  </Label>\n                  <Col >\n\t\t\t\t  <Input type=\"select\" value={this.state.ModuleName} invalid={this.state.testscriptcheckModule} name =\"testscriptModule\" onChange={this.updateModule.bind(this)}>\n\t\t\t\t  \t<option selected=\"selected\">{this.state.ModuleName}</option>\n\t\t\t\t\t  <OptionsValue options= {this.state.allModuleName}/>\n\t\t\t\t  </Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n                  <Label for=\"exampleSelect\" sm={5}>\n                    TestID*\n                  </Label>\n                  <Col >\n\t\t\t\t  <Input value={this.state.NewTestID} type=\"select\" invalid={this.state.testscriptchecktestID} name =\"testscriptTestID\" onChange={this.updateTestID.bind(this)}>\n\t\t\t\t\t <option selected=\"selected\">{this.state.NewTestID}</option>\n\t\t\t\t\t  <OptionsValue options= {this.state.allTestID}/>\n\t\t\t\t\t</Input>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Common Test Data \n\t\t\t<CardImg\n\t\t\t\t\t className=\"card-img-right\"\n\t\t\t\t\t  src={bg1Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.addNewCommonData() }\n\t\t\t\t    />\n\t\t\t\t\t<CardImg\n\t\t\t\t\t  className=\"card-img-right\"\n\t\t\t\t\t  src={bg3Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.deleteCommonData() }\n\t\t\t/>\n\t\t\t</CardHeader>\n            <CardBody>\n\t\t\t<BootstrapTable\n\t\t\t\tkeyField=\"id\"\n\t\t\t\tdata={ this.state.CommonDataItem }\n\t\t\t\tcolumns={ columns }\n\t\t\t\tstriped\n\t\t\t\thover\n\t\t\t\tcondensed\n\t\t\t\tpagination={ paginationFactory(options) }\n\t\t\t\trowEvents={ rowEvents }\n\t\t\t\tonDataSizeChange={ this.handleDataChange }\n\t\t\t\tfilter={ filterFactory() }\n\t\t\t\tselectRow={ selectRow }\n\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\tmode: 'click',\n\t\t\t\t\tblurToSave: true,\n\t\t\t\t\tafterSaveCell\n\t\t\t\t\t})}\n\t\t\t/>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\t  <Row>\n\t\t <Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Test Specific Data \n\t\t\t<Form inline>\n\t\t\t\t<Col >\n\t\t\t\t<Input invalid={this.state.headernameCheck} type=\"input\" name=\"headername\" placeholder=\"add header name\" value={this.state.newHeaderName} onChange={this.TypeHeaderName.bind(this)}/>\n\t\t\t\t<CardImg\n\t\t\t\t\tclassName=\"card-img-right\"\n\t\t\t\t\tsrc={bg1Image}\n\t\t\t\t\tstyle={{ width: 'auto', height: 30 }}\n\t\t\t\t\tonClick={ () => this.addNewColumnonTestData()}\n\t\t\t\t/>\n\t\t\t\t<CardImg\n\t\t\t\t\tclassName=\"card-img-right\"\n\t\t\t\t\tsrc={bg3Image}\n\t\t\t\t\tstyle={{ width: 'auto', height: 30 }}\n\t\t\t\t\tonClick={ () => this.deleteTestDataColumn() }\n\t\t\t\t/>\n\t\t\t\t<Input type=\"input\" disabled=\"true\" name=\"oldercolName\"  value={this.state.selectedHeaderColumn} />\n\t\t\t\t<Input invalid={this.state.checkNewColName} type=\"input\" name=\"newColName\" placeholder=\"Rename Colum name\" value={this.state.NewColName} onChange={this.TypeNewColName.bind(this)}/>\n\t\t\t\t<Button onClick={this.RenameColumn.bind(this)} color=\"primary\" name =\"RenameCol\">Rename Column</Button>\n\t\t\t\t</Col>\n\t\t\t\t<CardImg\n\t\t\t\t\t\n\t\t\t\t\tclassName=\"card-img-right\"\n\t\t\t\t\tsrc={bg1Image}\n\t\t\t\t\tstyle={{ width: 'auto', height: 30 }}\n\t\t\t\t\tonClick={ () => this.addNewTestDataRow() }\n\t\t\t\t/>\n\t\t\t\t<CardImg\n\t\t\t\t\t\tclassName=\"card-img-right\"\n\t\t\t\t\t\tsrc={bg3Image}\n\t\t\t\t\t\tstyle={{ width: 'auto', height: 30 }}\n\t\t\t\t\t\tonClick={ () => this.deleteTestDataRow() }\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t</Form>\n\t\t\t</CardHeader>\n            <CardBody>\n\t\t\t<BootstrapTable\n\t\t\t\tkeyField=\"testdatacolid\"\n\t\t\t\tdata={ this.state.testDataItemrowList }\n\t\t\t\tcolumns={ this.state.testDatacolumns}\n\t\t\t\tstriped\n\t\t\t\thover\n\t\t\t\tcondensed\n\t\t\t\tpagination={ paginationFactory(options) }\n\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\tmode: 'click',\n\t\t\t\t\tblurToSave: true,\n\t\t\t\t\t})}\n\t\t\t/>\n            </CardBody>\n\n          </Card>\n        </Col>\n      </Row>\n\t  <Row>\n\t\t<Col lg={12} md={12} sm={12} xs={12}>\n          <Card>\n            <CardHeader>Test Steps \n\t\t\t<CardImg\n\t\t\t\t\t className=\"card-img-right\"\n\t\t\t\t\t  src={bg1Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.addNewTestSteps() }\n\t\t\t\t    />\n\t\t\t<CardImg\n\t\t\t\t\t  className=\"card-img-right\"\n\t\t\t\t\t  src={bg3Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.deleteTestSteps() }\n\t\t\t/>\n\t\t\t<Button color=\"primary\"  onClick={this.selectionTestData.bind(this)} name =\"selectTestData\">Select Test Data</Button>\n\t\t\t<Button color=\"primary\" onClick={this.selectionCommonData.bind(this)} name =\"selectCommonData\">Select Common Data</Button>\n\t\t\t<Button color=\"primary\" onClick={this.selectionUtilityData.bind(this)} name =\"selectUtilityFunction\">Select Utility Data</Button>\n\t\t\t<Button color=\"primary\" onClick={this.SaveTestScripts.bind(this)} name =\"saveTestScript\">Save Test Script</Button>\n\t\t\t<Loader \n\t\t\ttype=\"ThreeDots\"\n\t\t\tcolor=\"#00BFFF\"\n\t\t\theight={50}\n\t\t\twidth={100}\n\t\t\ttimeout={120000} //3 secs\n\t\t\tvisible = {this.state.loaderTestSteps}\n\t\t\t/>\n\t\t\t<Modal\n                      isOpen={this.state.modal}\n                      toggle={this.toggle()}\n                      className={this.props.className}>\n                      <ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n                      <ModalBody >\n                        {this.state.modalValidationText}\n                      </ModalBody>\n                      <ModalFooter>\n                        <Button color=\"secondary\" onClick={this.toggle()}>\n                          OK\n                        </Button>\n                      </ModalFooter>\n            </Modal>\n\t\t\t<Modal\n\t\t\t\tisOpen={this.state.utilityFunction}\n\t\t\t\ttoggle={this.toggleUtilityFunction()}\n\t\t\t\tbackdrop=\"static\"\n\t\t\t\t\tclassName={this.props.className}>\n\t\t\t\t\t<ModalHeader  toggle={this.toggleUtilityFunction()} >Utility Function</ModalHeader>\n\t\t\t\t\t\t<CardHeader  >\n\t\t\t\t\t\t\t<Alert color= { this.state.alertColor }>\n\t\t\t\t\t\t\t\t{this.state.UtilityFunctionExpression}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t<ModalBody >\n\t\t\t\t\t\t<BootstrapTable \n\t\t\t\t\t\t\t\tkeyField=\"id\"\n\t\t\t\t\t\t\t\tdata={ this.state.UtilityFunctionList }\n\t\t\t\t\t\t\t\tcolumns={ UtilityFunctioncolumns }\n\t\t\t\t\t\t\t\tstriped\n\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\tcondensed\n\t\t\t\t\t\t\t\tpagination={ paginationFactory(Utilityoptions) }\n\t\t\t\t\t\t\t\tselectRow={ selectRowforUtilityFunction }\n\t\t\t\t\t\t\t\tfilter={ filterFactory() }\n\t\t\t\t\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\t\t\t\t\tmode: 'click',\n\t\t\t\t\t\t\t\t\tblurToSave: true,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t    <Button onClick={this.EvaluateCustomFunction.bind(this)} color=\"secondary\">\n\t\t\t\t\t\t  Evaluate\n\t\t\t\t\t   </Button>\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.selectUtilityFunctionfromList.bind(this)}>\n\t\t\t\t\t\t Select Utility Data\n\t\t\t\t\t   </Button>\n\t\t\t\t\t</ModalFooter>\n            </Modal>\n\t\t\t</CardHeader>\n            <CardBody>\n\t\t\t<BootstrapTable\n\t\t\t\tkeyField=\"teststepid\"\n\t\t\t\tdata={ this.state.TestScriptTestData }\n\t\t\t\tcolumns={ testScriptcolumns }\n\t\t\t\tstriped\n\t\t\t\thover\n\t\t\t\tcondensed\n\t\t\t\tpagination={ paginationFactory(testScriptoptions) }\n\t\t\t\trowEvents={ rowEvents }\n\t\t\t\tonDataSizeChange={ this.handleDataChange }\n\t\t\t\tselectRow={ selectTestScriptRow }\n\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\tmode: 'click',\n\t\t\t\t\tblurToSave: true,\n\t\t\t\t\t//onStartEdit: (row, column, rowIndex, columnIndex) => { console.log('start to edit!!!'); },\n\t\t\t\t\t//beforeSaveCell: (oldValue, newValue, row, column) => { console.log('Before Saving Cell!!'); },\n\t\t\t\t\t// afterSaveCell: (oldValue, newValue, row, column) => { console.log('After Saving Cell!!'); console.log(row); console.log(column); }\n\t\t\t\t\t})}\n\t       />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\t\t<Row>\n\t\t <Col lg={12} md={12} sm={12} xs={12}>\n          <Card>\n            <CardHeader>Create New Custom Function</CardHeader>\n            <CardBody>\n              <Form inline>\n                <FormGroup col>\n\t\t\t\t<Label for=\"exampleSelect\">\n                    Custom Function Name*\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.customFunctionNameCheck} value={this.state.customFunctionName} onChange={this.verifyCustomFunction.bind(this)} type=\"input\" name=\"custtomfunction\" placeholder=\"new custom function\"/>\n                  </Col>\n\t\t\t\t  <Label for=\"exampleSelect\">\n                    Step From*\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.customFunctionstepFromCheck} value={this.state.customStepFrom} onChange={this.SetCustomFunctionFromStep.bind(this)} size =\"2\" type=\"input\" name=\"fromstep\"/>\n                  </Col>\n\t\t\t\t   <Label for=\"exampleSelect\">\n                    Step To*\n                  </Label>\n                  <Col >\n                    <Input invalid={this.state.customFunctionstepToCheck} value={this.state.customStepTo} onChange={this.SetCustomToStep.bind(this)} size =\"2\" type=\"input\" name=\"tostep\"/>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button onClick={this.saveCustomFunction.bind(this)} color=\"primary\" name =\"customfunc\">Save</Button>\n                  </Col>\n\t\t\t\t  </FormGroup>{' '}\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n};\n\nexport default UpdateTestScript;\n"],"sourceRoot":""}
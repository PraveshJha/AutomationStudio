{"version":3,"sources":["components/Typography.js","components/Page.js","../node_modules/reactstrap/es/Breadcrumb.js","../node_modules/reactstrap/es/BreadcrumbItem.js","pages/BadgePage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","Tag","tag","className","type","restProps","classes","classNames","TypoComp","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","name","active","index","key","propTypes","tagPropType","listTag","PropTypes","string","listClassName","cssModule","object","node","Breadcrumb","props","ListTag","label","attributes","_objectWithoutPropertiesLoose","mapToCssModules","listClasses","React","createElement","_extends","bool","BreadcrumbItem","undefined","BadgePage","md","color","outline","pill","href"],"mappings":"0LAIA,MAAMA,EAAS,CACbC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJ,YAAa,KACb,YAAa,KACb,YAAa,KACb,YAAa,KACbC,EAAG,IACHC,KAAM,IACNC,WAAY,cAKRC,EAAc,IAAiD,IAA1CC,EAAyC,EAA9CC,IAAUC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,KAASC,EAAgB,0CAClE,MAAMC,EAAUC,IAAW,CAAE,CAACH,KAASA,GAAQD,GAC/C,IAAIK,EAUJ,OAPEA,EADEP,KAEQA,GAAOX,EAAOc,GACbd,EAAOc,GAEP,KAGN,kBAACI,EAAD,iBAAcH,EAAd,CAAyBF,UAAWG,MAS7CN,EAAWS,aAAe,CACxBL,KAAM,KAGOJ,O,uGCtCf,MAAMU,EAAMC,IAAGC,OAAO,QAEhBC,EAAQ,IAOP,IANLC,EAMI,EANJA,MACAC,EAKI,EALJA,YACKd,EAID,EAJJC,IACAC,EAGI,EAHJA,UACAa,EAEI,EAFJA,SACGX,EACC,oEACJ,MAAMC,EAAUI,EAAIO,EAAE,OAAQd,GAE9B,OACE,kBAACF,EAAD,eAAKE,UAAWG,GAAaD,GAC3B,yBAAKF,UAAWO,EAAIQ,EAAE,WACnBJ,GAA0B,kBAAVA,EACf,kBAAC,IAAD,CAAYV,KAAK,KAAKD,UAAWO,EAAIQ,EAAE,UACpCJ,GAGDA,EAEHC,GACC,kBAAC,IAAD,CAAYZ,UAAWO,EAAIQ,EAAE,eAC3B,kBAAC,IAAD,aACCH,EAAYI,QACXJ,EAAYK,IAAI,EAAGC,OAAMC,UAAUC,IACjC,kBAAC,IAAD,CAAgBC,IAAKD,EAAOD,OAAQA,GACjCD,MAMZL,IAkBPH,EAAKJ,aAAe,CAClBP,IAAK,MACLY,MAAO,IAGMD,O,iCClEf,yEAMIY,EAAY,CACdvB,IAAKwB,IACLC,QAASD,IACTvB,UAAWyB,IAAUC,OACrBC,cAAeF,IAAUC,OACzBE,UAAWH,IAAUI,OACrBhB,SAAUY,IAAUK,KACpB,aAAcL,IAAUC,QAQtBK,EAAa,SAAoBC,GACnC,IAAIhC,EAAYgC,EAAMhC,UAClB2B,EAAgBK,EAAML,cACtBC,EAAYI,EAAMJ,UAClBf,EAAWmB,EAAMnB,SACjBf,EAAMkC,EAAMjC,IACZkC,EAAUD,EAAMR,QAChBU,EAAQF,EAAM,cACdG,EAAaC,YAA8BJ,EAAO,CAAC,YAAa,gBAAiB,YAAa,WAAY,MAAO,UAAW,eAE5H7B,EAAUkC,YAAgBjC,IAAWJ,GAAY4B,GACjDU,EAAcD,YAAgBjC,IAAW,aAAcuB,GAAgBC,GAC3E,OAAOW,IAAMC,cAAc1C,EAAK2C,YAAS,GAAIN,EAAY,CACvDnC,UAAWG,EACX,aAAc+B,IACZK,IAAMC,cAAcP,EAAS,CAC/BjC,UAAWsC,GACVzB,KAGLkB,EAAWT,UAAYA,EACvBS,EAAWzB,aA3BQ,CACjBP,IAAK,MACLyB,QAAS,KACT,aAAc,cAyBDO,O,iCC3Cf,yEAMIT,EAAY,CACdvB,IAAKwB,IACLJ,OAAQM,IAAUiB,KAClB1C,UAAWyB,IAAUC,OACrBE,UAAWH,IAAUI,QAMnBc,EAAiB,SAAwBX,GAC3C,IAAIhC,EAAYgC,EAAMhC,UAClB4B,EAAYI,EAAMJ,UAClBT,EAASa,EAAMb,OACfrB,EAAMkC,EAAMjC,IACZoC,EAAaC,YAA8BJ,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvF7B,EAAUkC,YAAgBjC,IAAWJ,IAAWmB,GAAS,SAAkB,mBAAoBS,GACnG,OAAOW,IAAMC,cAAc1C,EAAK2C,YAAS,GAAIN,EAAY,CACvDnC,UAAWG,EACX,eAAgBgB,EAAS,YAASyB,MAItCD,EAAerB,UAAYA,EAC3BqB,EAAerC,aAnBI,CACjBP,IAAK,MAmBQ4C,O,iCChCf,gGA+KeE,UAjKG,IAEd,kBAAC,IAAD,CAAMlC,MAAM,SAASC,YAAa,CAAC,CAAEM,KAAM,SAAUC,QAAQ,KAC3D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK2B,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,wBACA,kBAAC,IAAD,KACE,uCACU,kBAAC,IAAD,CAAOC,MAAM,aAAb,QAEV,uCACU,kBAAC,IAAD,CAAOA,MAAM,aAAb,QAEV,uCACU,kBAAC,IAAD,CAAOA,MAAM,aAAb,QAEV,uCACU,kBAAC,IAAD,CAAOA,MAAM,aAAb,QAEV,uCACU,kBAAC,IAAD,CAAOA,MAAM,aAAb,QAEV,uCACU,kBAAC,IAAD,CAAOA,MAAM,aAAb,WAMhB,kBAAC,IAAD,CAAKD,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,qBACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAM,UAAU/C,UAAU,QAAlC,iBACgB,kBAAC,IAAD,CAAO+C,MAAM,aAAb,MAEhB,kBAAC,IAAD,CAAQA,MAAM,OAAO/C,UAAU,QAA/B,iBACgB,kBAAC,IAAD,CAAO+C,MAAM,UAAb,MAEhB,kBAAC,IAAD,CAAQA,MAAM,YAAY/C,UAAU,QAApC,iBACgB,kBAAC,IAAD,CAAO+C,MAAM,aAAb,OAIlB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQA,MAAM,UAAUC,SAAO,EAAChD,UAAU,QAA1C,iBACgB,kBAAC,IAAD,CAAO+C,MAAM,WAAb,MAEhB,kBAAC,IAAD,CAAQA,MAAM,OAAOC,SAAO,EAAChD,UAAU,QAAvC,iBACgB,kBAAC,IAAD,CAAO+C,MAAM,QAAb,MAEhB,kBAAC,IAAD,CAAQA,MAAM,YAAYC,SAAO,EAAChD,UAAU,QAA5C,iBACgB,kBAAC,IAAD,CAAO+C,MAAM,aAAb,UAOxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKD,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,8BACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,MAAM,UAAU/C,UAAU,QAAjC,WAGA,kBAAC,IAAD,CAAO+C,MAAM,YAAY/C,UAAU,QAAnC,aAGA,kBAAC,IAAD,CAAO+C,MAAM,UAAU/C,UAAU,QAAjC,WAGA,kBAAC,IAAD,CAAO+C,MAAM,SAAS/C,UAAU,QAAhC,UAGA,kBAAC,IAAD,CAAO+C,MAAM,UAAU/C,UAAU,QAAjC,WAGA,kBAAC,IAAD,CAAO+C,MAAM,OAAO/C,UAAU,QAA9B,QAGA,kBAAC,IAAD,CAAO+C,MAAM,QAAQ/C,UAAU,QAA/B,SAGA,kBAAC,IAAD,CAAO+C,MAAM,OAAO/C,UAAU,QAA9B,WAON,kBAAC,IAAD,CAAK8C,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,cACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,MAAM,UAAUE,MAAI,EAACjD,UAAU,QAAtC,WAGA,kBAAC,IAAD,CAAO+C,MAAM,YAAYE,MAAI,EAACjD,UAAU,QAAxC,aAGA,kBAAC,IAAD,CAAO+C,MAAM,UAAUE,MAAI,EAACjD,UAAU,QAAtC,WAGA,kBAAC,IAAD,CAAO+C,MAAM,SAASE,MAAI,EAACjD,UAAU,QAArC,UAGA,kBAAC,IAAD,CAAO+C,MAAM,UAAUE,MAAI,EAACjD,UAAU,QAAtC,WAGA,kBAAC,IAAD,CAAO+C,MAAM,OAAOE,MAAI,EAACjD,UAAU,QAAnC,QAGA,kBAAC,IAAD,CAAO+C,MAAM,QAAQE,MAAI,EAACjD,UAAU,QAApC,SAGA,kBAAC,IAAD,CAAO+C,MAAM,OAAOE,MAAI,EAACjD,UAAU,QAAnC,WAON,kBAAC,IAAD,CAAK8C,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,cACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOI,KAAK,IAAIH,MAAM,UAAU/C,UAAU,QAA1C,WAGA,kBAAC,IAAD,CAAOkD,KAAK,IAAIH,MAAM,YAAY/C,UAAU,QAA5C,aAGA,kBAAC,IAAD,CAAOkD,KAAK,IAAIH,MAAM,UAAU/C,UAAU,QAA1C,WAGA,kBAAC,IAAD,CAAOkD,KAAK,IAAIH,MAAM,SAAS/C,UAAU,QAAzC,UAGA,kBAAC,IAAD,CAAOkD,KAAK,IAAIH,MAAM,UAAU/C,UAAU,QAA1C,WAGA,kBAAC,IAAD,CAAOkD,KAAK,IAAIH,MAAM,OAAO/C,UAAU,QAAvC,QAGA,kBAAC,IAAD,CAAOkD,KAAK,IAAIH,MAAM,QAAQ/C,UAAU,QAAxC,SAGA,kBAAC,IAAD,CAAOkD,KAAK,IAAIH,MAAM,OAAO/C,UAAU,QAAvC","file":"static/js/28.f72cb81b.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  listTag: tagPropType,\n  className: PropTypes.string,\n  listClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string\n};\nvar defaultProps = {\n  tag: 'nav',\n  listTag: 'ol',\n  'aria-label': 'breadcrumb'\n};\n\nvar Breadcrumb = function Breadcrumb(props) {\n  var className = props.className,\n      listClassName = props.listClassName,\n      cssModule = props.cssModule,\n      children = props.children,\n      Tag = props.tag,\n      ListTag = props.listTag,\n      label = props['aria-label'],\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"listClassName\", \"cssModule\", \"children\", \"tag\", \"listTag\", \"aria-label\"]);\n\n  var classes = mapToCssModules(classNames(className), cssModule);\n  var listClasses = mapToCssModules(classNames('breadcrumb', listClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-label\": label\n  }), React.createElement(ListTag, {\n    className: listClasses\n  }, children));\n};\n\nBreadcrumb.propTypes = propTypes;\nBreadcrumb.defaultProps = defaultProps;\nexport default Breadcrumb;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'li'\n};\n\nvar BreadcrumbItem = function BreadcrumbItem(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      active = props.active,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"active\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, active ? 'active' : false, 'breadcrumb-item'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    \"aria-current\": active ? 'page' : undefined\n  }));\n};\n\nBreadcrumbItem.propTypes = propTypes;\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import React from 'react';\n\nimport {\n  Row,\n  Col,\n  Card,\n  CardHeader,\n  CardBody,\n  Badge,\n  Button,\n} from 'reactstrap';\n\nimport Page from 'components/Page';\n\nconst BadgePage = () => {\n  return (\n    <Page title=\"Badges\" breadcrumbs={[{ name: 'badges', active: true }]}>\n      <Row>\n        <Col md={6}>\n          <Card>\n            <CardHeader>Scale to parent</CardHeader>\n            <CardBody>\n              <h1>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h1>\n              <h2>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h2>\n              <h3>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h3>\n              <h4>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h4>\n              <h5>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h5>\n              <h6>\n                Heading <Badge color=\"secondary\">New</Badge>\n              </h6>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={6}>\n          <Card>\n            <CardHeader>with buttons</CardHeader>\n            <CardBody>\n              <Button color=\"primary\" className=\"mr-1\">\n                Notifications <Badge color=\"secondary\">4</Badge>\n              </Button>\n              <Button color=\"info\" className=\"mr-1\">\n                Notifications <Badge color=\"danger\">4</Badge>\n              </Button>\n              <Button color=\"secondary\" className=\"mr-1\">\n                Notifications <Badge color=\"secondary\">4</Badge>\n              </Button>\n            </CardBody>\n\n            <CardBody>\n              <Button color=\"primary\" outline className=\"mr-1\">\n                Notifications <Badge color=\"primary\">4</Badge>\n              </Button>\n              <Button color=\"info\" outline className=\"mr-1\">\n                Notifications <Badge color=\"info\">4</Badge>\n              </Button>\n              <Button color=\"secondary\" outline className=\"mr-1\">\n                Notifications <Badge color=\"secondary\">4</Badge>\n              </Button>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md={4}>\n          <Card>\n            <CardHeader>Contextual variations</CardHeader>\n            <CardBody>\n              <Badge color=\"primary\" className=\"mr-1\">\n                Primary\n              </Badge>\n              <Badge color=\"secondary\" className=\"mr-1\">\n                Secondary\n              </Badge>\n              <Badge color=\"success\" className=\"mr-1\">\n                Success\n              </Badge>\n              <Badge color=\"danger\" className=\"mr-1\">\n                Danger\n              </Badge>\n              <Badge color=\"warning\" className=\"mr-1\">\n                Warning\n              </Badge>\n              <Badge color=\"info\" className=\"mr-1\">\n                Info\n              </Badge>\n              <Badge color=\"light\" className=\"mr-1\">\n                Light\n              </Badge>\n              <Badge color=\"dark\" className=\"mr-1\">\n                Dark\n              </Badge>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <CardHeader>Pills</CardHeader>\n            <CardBody>\n              <Badge color=\"primary\" pill className=\"mr-1\">\n                Primary\n              </Badge>\n              <Badge color=\"secondary\" pill className=\"mr-1\">\n                Secondary\n              </Badge>\n              <Badge color=\"success\" pill className=\"mr-1\">\n                Success\n              </Badge>\n              <Badge color=\"danger\" pill className=\"mr-1\">\n                Danger\n              </Badge>\n              <Badge color=\"warning\" pill className=\"mr-1\">\n                Warning\n              </Badge>\n              <Badge color=\"info\" pill className=\"mr-1\">\n                Info\n              </Badge>\n              <Badge color=\"light\" pill className=\"mr-1\">\n                Light\n              </Badge>\n              <Badge color=\"dark\" pill className=\"mr-1\">\n                Dark\n              </Badge>\n            </CardBody>\n          </Card>\n        </Col>\n\n        <Col md={4}>\n          <Card>\n            <CardHeader>Links</CardHeader>\n            <CardBody>\n              <Badge href=\"#\" color=\"primary\" className=\"mr-1\">\n                Primary\n              </Badge>\n              <Badge href=\"#\" color=\"secondary\" className=\"mr-1\">\n                Secondary\n              </Badge>\n              <Badge href=\"#\" color=\"success\" className=\"mr-1\">\n                Success\n              </Badge>\n              <Badge href=\"#\" color=\"danger\" className=\"mr-1\">\n                Danger\n              </Badge>\n              <Badge href=\"#\" color=\"warning\" className=\"mr-1\">\n                Warning\n              </Badge>\n              <Badge href=\"#\" color=\"info\" className=\"mr-1\">\n                Info\n              </Badge>\n              <Badge href=\"#\" color=\"light\" className=\"mr-1\">\n                Light\n              </Badge>\n              <Badge href=\"#\" color=\"dark\" className=\"mr-1\">\n                Dark\n              </Badge>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n};\n\nexport default BadgePage;\n"],"sourceRoot":""}
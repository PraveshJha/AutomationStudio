{"version":3,"sources":["components/Typography.js","components/Page.js","assets/img/bg/deleterow.JPG","assets/img/bg/addnewrow.JPG","pages/CustomFunction.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","Tag","tag","className","type","restProps","classes","classNames","TypoComp","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","name","active","index","key","module","exports","APIBasePath","window","ENV","APIURL","afterSaveCell","oldValue","newValue","SetJsonContent","ItemValue","valueaf","includes","split","join","error","GetListOfListItemforCommonItem","JsonItems","count","Object","keys","CommonDataItem","i","keyName","testdata","id","commonKeyName","commonKeyValue","push","GetListOfListforActionName","value","label","GetListvalueFromJsonResponce","options","allitem","CheckValueFromJson","checkvalue","trim","toLowerCase","Options","option","Environment","CustomFunction","React","Component","constructor","props","super","addNewCommonData","ItemCount","this","state","setState","modal","modalValidationText","loader","lastOneId","addNewTestSteps","ItemList","TestScriptTestData","loaderTestSteps","selectedID","selectedTestStepNumber","UpdatedRow","NewItemContent","parseInt","StepNo","deleteCommonData","updatedBooks","filter","m","toString","deleteTestSteps","testData","teststepid","handleDataChange","dataSize","rowCount","handleOnSelect","row","isSelect","selectedrow","GetItem","selectedCommonKey","handleOnTestStepSelect","handleOnUtilitySelect","selectedUtilityRowId","selectedUtilityRow","toggle","modalType","toggleUtilityFunction","utilityFunction","toggleModal","show","showModal","allModuleName","allTestID","ModuleName","TestScriptModuleName","NewTestID","Env","CommonDataallItem","CommonDataItemList","CommonDataTotalSize","GetCommonItem","stepdescription","action","locator","locatorproperty","exitIfFail","allActionNameList","testDatacolumns","dataField","text","headerStyle","width","testDataItemrowList","selectedLastHeaderColumn","selectedHeaderColumn","headernameCheck","newHeaderName","testscriptcheckENV","testscriptcheckModule","testscriptchecktestID","testscriptchecktestName","testCaseName","customFunctionName","customStepFrom","customStepTo","customFunctionNameCheck","customFunctionstepFromCheck","customFunctionstepToCheck","checkNewColName","NewColName","checkmodEnv","checkCustomFunction","customFunction","customFunctionList","modEnv","UtilityFunctionExpression","UtilityFunctionList","UtilityItem","UtilityFunction","selectedUtilityFunction","OriginalUtilityContent","showalert","alerttext","alertColor","CommonTestData","a","fetch","homepage","json","homepageResponse","request2","req2Response","request3","re3Response","request4","re4Response","TotalFunction","TotalItem","utilityContent","req4","req3","req2","GetLoaderData","SelectmodEnv","event","onchangeenvvalue","target","URL","request1","Response1","req1","SaveCommonTestData","ExceptionMessage","envName","CommonTestDataChange","commonTestDataItem","CommonJObject","ORjson","JSON","stringify","ORAPI","requestOptions","method","headers","body","ORResponse","ORJson","success","servermessage","commonDataRequest","selectionCommonData","Item","selectUtilityFunctionfromList","rowId","functionName","utilityfunction","updatedFunctionName","EvaluateCustomFunction","API","Status","status","Message","message","APICheckRequest","updateCustomFunction","runTimeModule","testscriptAPI","testscriptcontentItem","JsonItem","jstestStepData","jstestStepDatacollection","TestScriptContentCheck","updateCustomFunctionType","selectionTestData","selectionUtilityData","SaveTestScripts","testscriptENV","cusFun","successSteps","lastindex","commondataCount","jsObj","ItemName","req1Response","tesStepRowCount","ORTestStepData","ORItem","locatorName","locatorProperty","SaveORRequest","req3Response","render","selectRow","mode","onSelect","selectRowforUtilityFunction","selectTestScriptRow","rowEvents","onClick","rowIndex","columns","Cell","textFilter","validator","column","valid","totalCount","UtilityFunctioncolumns","testScriptcolumns","backgroundColor","editor","Type","SELECT","color","height","timeout","visible","lg","md","sm","xs","isOpen","invalid","onChange","bind","selected","src","bg1Image","style","bg3Image","keyField","data","striped","hover","condensed","pagination","paginationFactory","sizePerPage","hideSizePerPage","hidePageListOnlyOnePage","onDataSizeChange","filterFactory","cellEdit","cellEditFactory","blurToSave","col","for","caseSensitive","minLength","backdrop"],"mappings":"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","file":"static/js/30.9a2de189.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","module.exports = __webpack_public_path__ + \"static/media/deleterow.9eb1ed86.JPG\";","module.exports = __webpack_public_path__ + \"static/media/addnewrow.11af4dc5.JPG\";","import Page from 'components/Page';\nimport React from 'react';\nimport bg3Image from 'assets/img/bg/deleterow.JPG';\nimport bg1Image from 'assets/img/bg/addnewrow.JPG';\nimport 'react-widgets/dist/css/react-widgets.css';\nimport { Combobox } from 'react-widgets'\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  CardImg,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Alert,\n} from 'reactstrap';\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport cellEditFactory,{Type} from 'react-bootstrap-table2-editor';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\nvar APIBasePath= window.ENV.APIURL;\n\n\n\nfunction afterSaveCell(oldValue, newValue) {\n\t//console.log('--after save cell--');\n\t//console.log('New Value was apply as');\n\t//console.log(newValue);\n\t//console.log(`and the type is ${typeof newValue}`);\n\n  }\n  function SetJsonContent(ItemValue)\n  {\n\ttry\n\t{\n\tvar valueaf =[];\n\tif(ItemValue.includes(\"+\"))\n\t{\n\t\tvalueaf = ItemValue.split('+')\n\t  ItemValue= valueaf.join('auplussignau')\n\t}\n\tif(ItemValue.includes(\":\"))\n\t{\n\t   valueaf = ItemValue.split(':')\n\t  ItemValue= valueaf.join('aucolumnsignau')\n\t}\n\tif(ItemValue.includes(\"{\"))\n\t{\n\t   valueaf = ItemValue.split('{')\n\t  ItemValue= valueaf.join('aucurlyopenbracketau')\n\t}\n\tif(ItemValue.includes(\"}\"))\n\t{\n\t   valueaf = ItemValue.split('}')\n\t  ItemValue= valueaf.join('aucurlyclosebracketau')\n\t}\n\tif(ItemValue.includes(\"[\"))\n\t{\n\t   valueaf = ItemValue.split('[')\n\t  ItemValue= valueaf.join('aubigopenbracketau')\n\t}\n\tif(ItemValue.includes(\"]\"))\n\t{\n\t   valueaf = ItemValue.split(']')\n\t  ItemValue= valueaf.join('aubigclosebracketau')\n\t}\n\tif(ItemValue.includes(\"\\\"\"))\n\t{\n\t   valueaf = ItemValue.split('\\\"')\n\t  ItemValue= valueaf.join('audoublequotesau')\n\t}\n\tif(ItemValue.includes(\"=\"))\n\t{\n\t   valueaf = ItemValue.split('=')\n\t  ItemValue= valueaf.join('auequalsignau')\n\t}\n   }\n   catch(error)\n   {}\n\treturn ItemValue;\n  }\n\nfunction GetListOfListItemforCommonItem(JsonItems) \n{\n  let count = Object.keys(JsonItems).length;\n  //console.log(count);\n  let CommonDataItem=[];\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(JsonItems)[i-1];\n\tvar keyVal =JsonItems[keyName];\n\tvar  testdata={id:i,commonKeyName:keyName,commonKeyValue:keyVal};\n\tCommonDataItem.push(testdata);\n  }\n  return CommonDataItem;\n}\nfunction GetListOfListforActionName(JsonItems) \n{\n  let count = Object.keys(JsonItems).length;\n // console.log(count);\n  let CommonDataItem=[];\n  for(let i=1;i<=count;i++)\n  {\n\tvar keyName =Object.keys(JsonItems)[i-1];\n\tvar  testdata={value:keyName,label:keyName};\n\tCommonDataItem.push(testdata);\n  }\n  return CommonDataItem;\n}\nfunction GetListvalueFromJsonResponce(options) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n\t));\n\treturn allitem;\n}\n\nfunction CheckValueFromJson( options,checkvalue) \n{\n  let allitem = []\n     Object.keys(options).map((key) => (\n      allitem.push(options[key])\n    ));\n    for (let i = 0; i < allitem.length; i++) \n    {\n      if(allitem[i].trim().toLowerCase()===checkvalue.trim().toLowerCase())\n      {\n        return true;\n      }\n     \n    }\n    return false;\n  \n}\nfunction Options({ options }) {\n    return (\n        options.map(option => \n                    <option >{option.Environment}</option>)\n                   );\n}\n\nclass CustomFunction extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t  allModuleName: [],\n\t\t  allTestID:[],\n\t\t  ModuleName:'',\n\t\t  TestScriptModuleName:'',\n\t\t  NewTestID:'',\n\t\t  Env:'',\n          CommonDataallItem:[],\n\t\t  CommonDataItemList:[],\n\t\t  CommonDataTotalSize:0,\n\t\t  CommonDataItem: [],\n\t\t  GetCommonItem:[],\n\t\t  TestScriptTestData:[{teststepid: 1, stepdescription: 'Add Test Step 1 description',action:'',locator:'',locatorproperty:'',value:'',exitIfFail:'Y'}],\n\t\t// TestScriptTestData:[],\n\t\t  allActionNameList:[],\n\t\t  selectedCommonKey:'',\n\t\t  selectedTestStepNumber:0,\n\t\t  modal: false,\n\t\t  utilityFunction:false,\n\t\t  modalValidationText:'',\n\t\t  testDatacolumns :[{dataField: 'testdatacolid',text: '#',headerStyle: { width: '40px' }}],\n\t\t  testDataItemrowList:[],\n\t\t  selectedLastHeaderColumn:'',\n\t\t  selectedHeaderColumn:'',\n\t\t  headernameCheck:false,\n\t\t  newHeaderName:'',\n\t\t  testscriptcheckENV:false,\n\t\t  testscriptcheckModule:false,\n\t\t  testscriptchecktestID:false,\n\t\t  testscriptchecktestName:false,\n\t\t  testCaseName:'',\n\t\t  customFunctionName:'',\n\t\t  customStepFrom:'',\n\t\t  customStepTo:'',\n\t\t  customFunctionNameCheck:false,\n\t\t  customFunctionstepFromCheck:false,\n\t\t  customFunctionstepToCheck:false,\n\t\t  checkNewColName:false,\n\t\t  NewColName:'',\n\t\t  checkmodEnv:false,\n\t\t  checkCustomFunction:false,\n\t\t  customFunction:'',\n\t\t  customFunctionList:[],\n\t\t  modEnv:'',\n\t\t  UtilityFunctionExpression:'',\n\t\t  selectedUtilityRow:0,\n\t\t  UtilityFunctionList:[],\n\t\t  UtilityItem:[],\n\t\t  UtilityFunction:[],\n\t\t  selectedUtilityFunction:'',\n\t\t  OriginalUtilityContent:[],\n\t\t  showalert:false,\n\t\t  alerttext:'',\n\t\t  showModal:false,\n\t\t  alertColor:'',\n\t\t  CommonTestData:[],\n\t\t  loader:true,\n\t\t  loaderTestSteps:false,\n\t\t}\n\n\t\tconst GetLoaderData = async () => \n\t\t{\n\t\t  const homepage = await fetch(APIBasePath+'dashboard');\n\t\t  const homepageResponse = await homepage.json();\n\t\t  this.setState({CommonTestData:homepageResponse.CommonTestData});\n\t\t  \tconst req2 = async () => \n\t\t\t{\n\t\t\t\tconst request2 = await fetch(APIBasePath+'customfunction?actionname')\n\t\t\t\tconst req2Response = await request2.json();\n\t\t\t\tthis.setState({allActionNameList:req2Response})\n\t\t\t\tconst req3 = async () => \n\t\t\t\t{\n\t\t\t\t\tconst request3 = await fetch(APIBasePath+'customfunction')\n\t\t\t\t\tconst re3Response = await request3.json();\n\t\t\t\t\tthis.setState({customFunctionList:re3Response})\n\t\t\t\t\tconst req4 = async () => \n\t\t\t\t\t{\n\t\t\t\t\t\tconst request4 = await fetch(APIBasePath+'customfunction?utilityid=1')\n\t\t\t\t\t\tconst re4Response = await request4.json();\n\t\t\t\t\t\tthis.setState({UtilityItem:re4Response})\n\t\t\t\t\t\tvar TotalFunction = Object.keys(this.state.UtilityItem).length;\n\t\t\t\t\t\tvar TotalItem =[];\n\t\t\t\t\t\tfor(let i=1;i<=TotalFunction;i++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t var utilityContent ={}\n\t\t\t\t\t\t\t utilityContent['id']=i;\n\t\t\t\t\t\t\t utilityContent['utilityfunction']=this.state.UtilityItem[i].toString();\n\t\t\t\t\t\t\t TotalItem.push(utilityContent);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setState({UtilityFunctionList:TotalItem})\n\t\t\t\t\t\tthis.setState({OriginalUtilityContent:TotalItem})\n\t\t\t\t\t\tthis.setState({loader:false})\n\t\t\t\t\t}\n\t\t\t\t\treq4();\n\t\t\t\t}\n\t\t\t\treq3();\n\t\t\t}\n\t\t\treq2();\n\t\t}\n\t\tGetLoaderData();\n\n\t\t\n\t  }\n\n\t  SelectmodEnv(event){\n\t\tthis.setState({CommonDataItem : []})\n\t\tthis.setState({modEnv : ''})\n\t\tthis.setState({CommonDataTotalSize : 0})\n\t\tthis.setState({checkmodEnv:false})\n\t\tvar onchangeenvvalue = event.target.value;\n\t\tthis.setState({modEnv : event.target.value})\n\t\tthis.setState({loader:true})\n\t\tvar URL =  APIBasePath+'testscript?commonitem='+onchangeenvvalue;\n\t\tconst req1 = async () => \n\t\t{\n\t\t\tconst request1 = await fetch(URL)\n\t\t\tconst Response1 = await request1.json();\n\t\t\tthis.setState({CommonDataItem:GetListOfListItemforCommonItem(Response1)})\n\t\t\tthis.setState({CommonDataTotalSize:this.state.CommonDataItem.length})\n\t\t\tthis.setState({loader:false})\n\t\t}\n\t\treq1();\n\n\t  }\n\t  SaveCommonTestData()\n\t  {\n\t\t var ExceptionMessage ='';\n\t\t var envName= this.state.modEnv\n\t\t if(envName.trim()===\"\")\n\t\t {\n\t\t   this.setState({checkmodEnv:true})\n\t\t   ExceptionMessage= ExceptionMessage+ 'Environment* can not be left blank.'\n\t\t }\n\t\t if(ExceptionMessage.trim() !==\"\")\n\t\t {\n\t\t  // this.setState({modal:true})\n\t\t   return this.setState({modalValidationText:ExceptionMessage})\n\t\t }\n\t\t if(!this.state.CommonTestDataChange)\n\t\t {\n\t\t\t this.setState({modal:true})\n\t\t\t return this.setState({modalValidationText:'No Changes to Save'})\n\t\t }\n \n\t\t //@ Get all value from Common test data\n\t\t var commonTestDataItem = this.state.CommonDataItem;\n\t\t var CommonJObject ={};\n\t\t for(let i=0;i<commonTestDataItem.length;i++)\n\t\t {\n\t\t\t CommonJObject[commonTestDataItem[i].commonKeyName.toString()]=commonTestDataItem[i].commonKeyValue.toString();\n\t\t }\n\t\t \n\t\t var ORjson = JSON.stringify(CommonJObject)\n\t\t var ORAPI =APIBasePath+'testdata?env='+envName;\n\t\t var requestOptions = {\n\t\t   method: 'POST',\n\t\t  headers: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t   body: ORjson\n\t\t };\n\t\t const commonDataRequest = async () => \n\t\t {\n\t\t   const ORResponse = await fetch(ORAPI,requestOptions);\n\t\t   const ORJson = await ORResponse.json();\n\t\t   if(ORJson.success.toLowerCase()==='true')\n\t\t   {\n\t\t\t this.setState({modal:true})\n\t\t\t this.setState({modalValidationText:ORJson.servermessage})\n\t\t   }\n\t\t   else\n\t\t   {\n\t\t\t this.setState({modal:true})\n\t\t\t this.setState({modalValidationText:ORJson.servermessage})\n\t\t   }\n\t\t   \n\t\t   \n\t\t }\n\t\t commonDataRequest();\n \n\t  }\n\t  selectionCommonData()\n\t  {\n\t\tvar selectedItemRow = this.state.selectedTestStepNumber;\n\t\tif(selectedItemRow===0)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select test step number.'})\n\t\t}\n\t\tvar Item = this.state.selectedCommonKey;\n\t\tif(Item.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select valid Key Name* from Common test data.'})\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.setState({loaderTestSteps:true})\n\t\t\tthis.state.TestScriptTestData[this.state.selectedTestStepNumber-1].value='c.'+Item;\n\t\t\tthis.setState({ TestScriptTestData: [...this.state.TestScriptTestData]});\n\t\t\tthis.setState({loaderTestSteps:false})\n\t\t}\n\t\n\t  }\n\t  selectUtilityFunctionfromList()\n\t  {\n\t\tvar rowId= this.state.selectedUtilityRow;\n\t\tif(rowId ===0)\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'please select utility function.'})\n\t\t\treturn;\n\t\t}\n\t\tvar functionName = this.state.OriginalUtilityContent[rowId-1].utilityfunction;\n\t\tvar updatedFunctionName = this.state.UtilityFunctionList[rowId-1].utilityfunction;\n\t\tif(updatedFunctionName.trim() ==='')\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'Utility function can not be blank.'})\n\t\t\treturn;\n\t\t}\n\t\tif(!updatedFunctionName.includes('(') || !updatedFunctionName.includes(')'))\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'syntax is incorrect for utility function'})\n\t\t\treturn;\n\t\t}\n\t\tif(!functionName.includes('()'))\n\t\t{\n\t\t\tif(functionName.trim()===updatedFunctionName.trim())\n\t\t\t{\n\t\t\t\tthis.setState({alertColor:'danger'})\n\t\t\t    this.setState({UtilityFunctionExpression:'Please pass the argument in Utility function.'})\n\t\t\t    return;\n\t\t\t}\n\t\t}\n\t\tthis.setState({loaderTestSteps:true})\n\t\tthis.setState({utilityFunction:false})\n\t\tthis.setState({UtilityFunctionExpression:''})\n\t\tthis.setState({alertColor:''})\n\t\tthis.state.TestScriptTestData[this.state.selectedTestStepNumber-1].value='utility.'+updatedFunctionName.trim();\n\t\tthis.setState({ TestScriptTestData: [...this.state.TestScriptTestData]});\n\t\tthis.setState({loaderTestSteps:false})\n\t\n\t  }\n\n\t  EvaluateCustomFunction()\n\t  {\n\t\t\n\t\tvar rowId= this.state.selectedUtilityRow;\n\t\tif(rowId ===0)\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'please select utility function.'})\n\t\t\treturn;\n\t\t}\n\t\tvar functionName = this.state.OriginalUtilityContent[rowId-1].utilityfunction;\n\t\tvar updatedFunctionName = this.state.UtilityFunctionList[rowId-1].utilityfunction;\n\t\tif(updatedFunctionName.trim() ==='')\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'Utility function can not be blank.'})\n\t\t\treturn;\n\t\t}\n\t\tif(!updatedFunctionName.includes('(') || !updatedFunctionName.includes(')'))\n\t\t{\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:'syntax is incorrect for utility function'})\n\t\t\treturn;\n\t\t}\n\t\tif(!functionName.includes('()'))\n\t\t{\n\t\t\tif(functionName.trim()===updatedFunctionName.trim())\n\t\t\t{\n\t\t\t\tthis.setState({alertColor:'danger'})\n\t\t\t    this.setState({UtilityFunctionExpression:'Please pass the argument in Utility function.'})\n\t\t\t    return;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//@ call API for evaluate\n\n\t\tvar API =APIBasePath+'evaluator?funcname=utility.'+updatedFunctionName;\n\t\tconst APICheckRequest = async () => \n\t\t{\n\t\t  const ORResponse = await fetch(API);\n\t\t  const ORJson = await ORResponse.json();\n\t\t  var Status =\"Fail\"\n\t\t  try\n\t\t  {\n\t\t  \t\tStatus = ORJson.status.toLowerCase();\n\t\t   }\n\t\t\t  catch(error)\n\t\t\t  {}\n\t\t  var Message = ORJson.message;\n\t\t  if(Status==='pass')\n\t\t  {\n\t\t\tthis.setState({alertColor:'success'})\n\t\t\tthis.setState({UtilityFunctionExpression:Message})\n\t\t\t\n\t\t  }\n\t\t  else\n\t\t  {\n\t\t\tthis.setState({alertColor:'danger'})\n\t\t\tthis.setState({UtilityFunctionExpression:Message})\n\t\t  }\n\t\t  \n\t\t  \n\t\t}\n\t\tAPICheckRequest();\n\t\n\t  }\n\t  updateCustomFunction(event)\n\t  {\n\t\t  var runTimeModule = event;\n\t\t  if(runTimeModule.trim().includes(' '))\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\tthis.setState({modalValidationText:'Custom function name should not have any space'})\n\t\t\treturn;\n\t\t  }\n\t\t  if(runTimeModule.trim()===\"\")\n\t\t  {\n\t\t\t  return;\n\t\t  }\n\t\t  var isCheck= CheckValueFromJson(this.state.allActionNameList,runTimeModule);\n\t\t  if(isCheck)\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\tthis.setState({modalValidationText:'Function name '+runTimeModule+' is reserved, Please choose different name.'})\n\t\t\treturn;\n\t\t  }\n\t\t  this.setState({customFunction:runTimeModule})\n\t\t  try {\n\t\t\t  this.setState({loader:true})\n\t\t  var testscriptAPI =APIBasePath+'customfunction?customfunctionName='+runTimeModule.trim()+'&id=1';\n\t\t  const TestScriptContentCheck = async () => \n\t\t  {\n\t\t\t  const ORResponse = await fetch(testscriptAPI);\n\t\t\t  const testscriptcontentItem = await ORResponse.json();\n\t\t\t  if(testscriptcontentItem.length>0)\n\t\t\t  {\n\t\t\t\tvar JsonItem = testscriptcontentItem[0];\n\t\t\t\tvar count = Object.keys(JsonItem).length;\n\t\t\t\tvar jstestStepData={};\n\t\t\t\tvar jstestStepDatacollection=[];\n\t\t\t\tfor(let i=1;i<=count;i++)\n\t\t\t\t{\n\t\t\t\t\tjstestStepData={};\n\t\t\t\t\tjstestStepData[\"teststepid\"]=JsonItem[i].teststepid;\n\t\t\t\t\tjstestStepData[\"stepdescription\"]=JsonItem[i].stepdescription;\n\t\t\t\t\tjstestStepData[\"action\"]=JsonItem[i].action;\n\t\t\t\t\tjstestStepData[\"locator\"]=JsonItem[i].locator;\n\t\t\t\t\tjstestStepData[\"locatorproperty\"]=JsonItem[i].locatorproperty;\n\t\t\t\t\tjstestStepData[\"value\"]=JsonItem[i].value;;\n\t\t\t\t\tjstestStepData[\"exitIfFail\"]=JsonItem[i].exitIfFail;\n\t\t\t\t\t//jstestStepDatacollection[i]=jstestStepData;\n\t\t\t\t\tjstestStepDatacollection.push(jstestStepData);\n\t\t\t\t}\n\t\t\t  this.setState({TestScriptTestData:jstestStepDatacollection})\n\t\t\t  this.setState({loader:false})\n\t\t\t}\n\t\t\tthis.setState({loader:false})\n\t\t}\n\t\t\t \n\t\tTestScriptContentCheck();\n\t\t}\n\t\tcatch (e) \n\t\t{\n\t\t\tthis.setState({loader:false})\n\t\t}\n\t\t  \n\t  }\n\t  updateCustomFunctionType(event)\n\t  {\n\t\t  var runTimeModule = event;\n\t\t  \n\t\t  if(runTimeModule.trim().includes(' '))\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\tthis.setState({modalValidationText:'Custom function name should not have any space'})\n\t\t\treturn;\n\t\t  }\n\t\t  if(runTimeModule.trim()===\"\")\n\t\t  {\n\t\t\t  return;\n\t\t  }\n\t\t  var isCheck= CheckValueFromJson(this.state.allActionNameList,runTimeModule);\n\t\t  if(isCheck)\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\tthis.setState({modalValidationText:'Function name '+runTimeModule+' is reserved, Please choose different name.'})\n\t\t\treturn;\n\t\t  }\n\t\t  this.setState({customFunction:runTimeModule})\n\t\t  var testscriptAPI =APIBasePath+'customfunction?customfunctionName='+runTimeModule.trim()+'&id=1';\n\t\t  const TestScriptContentCheck = async () => \n\t\t  {\n\t\t\t  const ORResponse = await fetch(testscriptAPI);\n\t\t\t  const testscriptcontentItem = await ORResponse.json();\n\t\t\t  var JsonItem = testscriptcontentItem[0];\n\t\t\t  var count = Object.keys(JsonItem).length;\n\t\t\t  var jstestStepData={};\n\t\t\t  var jstestStepDatacollection=[];\n\t\t\t  for(let i=1;i<=count;i++)\n\t\t\t  {\n\t\t\t\t  jstestStepData={};\n\t\t\t\t  jstestStepData[\"teststepid\"]=JsonItem[i].teststepid;\n\t\t\t\t  jstestStepData[\"stepdescription\"]=JsonItem[i].stepdescription;\n\t\t\t\t  jstestStepData[\"action\"]=JsonItem[i].action;\n\t\t\t\t  jstestStepData[\"locator\"]=JsonItem[i].locator;\n\t\t\t\t  jstestStepData[\"locatorproperty\"]=JsonItem[i].locatorproperty;\n\t\t\t\t  jstestStepData[\"value\"]=JsonItem[i].value;;\n\t\t\t\t  jstestStepData[\"exitIfFail\"]=JsonItem[i].exitIfFail;\n\t\t\t\t  jstestStepDatacollection.push(jstestStepData);\n\t\t\t  }\n\t\t\t  this.setState({TestScriptTestData:jstestStepDatacollection})\n\t\t\t}\n\t\t\t \n\t\tTestScriptContentCheck();\n\t\t  \n\t  }\n\t  selectionTestData()\n\t  {\n\t\tvar selectedItemRow = this.state.selectedTestStepNumber;\n\t\tif(selectedItemRow===\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select test step number.'})\n\t\t}\n\t\tvar testdataColLength = this.state.testDatacolumns.length;\n\t\tif(testdataColLength===1)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please add column header in test data.'})\n\t\t}\n\t\tvar Item = this.state.selectedHeaderColumn;\n\t\tif(Item.trim()===\"\")\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please click on test data column header.'})\n\t\t}\n\t\tthis.state.TestScriptTestData[this.state.selectedTestStepNumber].value='t.'+Item;\n\t\tthis.setState({ TestScriptTestData: [...this.state.TestScriptTestData]});\n\t  }\n\t  selectionUtilityData()\n\t  {\n\t\tvar selectedItemRow = this.state.selectedTestStepNumber;\n\t\tif(selectedItemRow===0)\n\t\t{\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Please select test step number.'})\n\t\t}\n\t\tthis.setState({loaderTestSteps:true});\n\t\tthis.setState({selectedUtilityFunction:''});\n\t\tvar Item = this.state.UtilityItem;\n\t\tvar TotalFunction = Object.keys(Item).length;\n\t\tvar TotalItem =[];\n\t\tfor(let i=1;i<=TotalFunction;i++)\n\t\t{\n\t\t\t var utilityContent ={}\n\t\t\t utilityContent['id']=i;\n\t\t\t utilityContent['utilityfunction']=Item[i].toString();\n\t\t\t TotalItem.push(utilityContent);\n\t\t}\n\t\tthis.setState({loaderTestSteps:false});\n\t\tthis.setState({UtilityFunctionList:TotalItem})\n\t\tthis.setState({utilityFunction:true})\n\n\t  }\n\t\tSaveTestScripts()\n\t\t{\n\t\t\t\n\t\t  var testscriptENV= this.state.modEnv;\n\t\t  var cusFun = this.state.customFunction;\n\t\t  if(cusFun.trim()===\"\")\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Custom Function name can not be blank.'})\n\t\t  }\n\t\t  \n\t\t  //@ check action Name is not blank on step\n\t\t  var blankCheck= this.state.TestScriptTestData[0].action;\n\t\t  if(blankCheck.trim()===\"\")\n\t\t  {\n\t\t\tthis.setState({modal:true})\n\t\t\treturn this.setState({modalValidationText:'Action name can not be blank on test step.'})\n\t\t  }\n\t\t  //-- Saving Common test data\n\t\t  this.setState({loaderTestSteps:true})\n\t\t  var successSteps = true;\n\t\t  if(testscriptENV.trim() !==\"\")\n\t\t  {\n\t\t\tvar lastindex = this.state.CommonDataTotalSize;\n\t\t\tvar commondataCount = this.state.CommonDataItem.length\n\t\t\tvar jsObj={};\n\t\t\tfor(let i=lastindex;i<commondataCount;i++)\n\t\t\t{\n\t\t\t\tvar ItemName = this.state.CommonDataItem[i].commonKeyName;\n\t\t\t\tif(ItemName.trim()!=='')\n\t\t\t\t{\n\t\t\t\t\tvar ItemValue = this.state.CommonDataItem[i].commonKeyValue;\n\t\t\t\t\tjsObj[ItemName]=ItemValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar json = JSON.stringify(jsObj);\n\t\t\tlet count = Object.keys(jsObj).length;\n\t\t\tif(count>0)\n\t\t\t{\n\t\t\t\tvar requestOptions = \n\t\t\t\t{\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\tbody: json\n\t\t\t\t};\n\t\t\t\tconst req1 = async () => \n                {\n                    const request1 = await fetch(APIBasePath+'testscript?environment='+testscriptENV,requestOptions)\n                    const req1Response = await request1.json();\n\t\t\t\t\tif(!req1Response.success)\n\t\t\t\t\t{\n\t\t\t\t\t\tsuccessSteps= false;\n\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\treturn this.setState({modalValidationText:'ISSUE: '+req1Response.servermessage})\n\t\t\t\t\t}\n                }\n                  req1();\n\t\t\t}\n\t\t}\n\t\tif(!successSteps)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t  //-- Save Test Steps\n\t\t  var tesStepRowCount =this.state.TestScriptTestData.length;\n\t\t  var jstestStepData={};\n\t\t  var jstestStepDatacollection={};\n\t\t  var ORTestStepData={};\n\t\t  var ORItem={};\n\t\t  var Item=0;\n\t\t  if(tesStepRowCount>0)\n\t\t  {\n\t\t\t  for(let i=0;i<tesStepRowCount;i++)\n\t\t\t  {\n\t\t\t\t  jstestStepData={};\n\t\t\t\t  ORTestStepData={};\n\t\t\t\t  var locatorName= SetJsonContent(this.state.TestScriptTestData[i].locator);\n\t\t\t\t  var locatorProperty= SetJsonContent(this.state.TestScriptTestData[i].locatorproperty);\n\t\t\t\t  jstestStepData[\"teststepid\"]=SetJsonContent(this.state.TestScriptTestData[i].teststepid);\n\t\t\t\t  jstestStepData[\"stepdescription\"]=SetJsonContent(this.state.TestScriptTestData[i].stepdescription);\n\t\t\t\t  jstestStepData[\"action\"]=SetJsonContent(this.state.TestScriptTestData[i].action);\n\t\t\t\t  jstestStepData[\"locator\"]=SetJsonContent(locatorName);\n\t\t\t\t  jstestStepData[\"locatorproperty\"]=SetJsonContent(locatorProperty);\n\t\t\t\t  jstestStepData[\"value\"]=SetJsonContent(this.state.TestScriptTestData[i].value);\n\t\t\t\t  jstestStepData[\"exitIfFail\"]=SetJsonContent(this.state.TestScriptTestData[i].exitIfFail);\n\t\t\t\t  jstestStepDatacollection[i+1]=jstestStepData;\n\t\t\t\t  if(locatorName.trim() !=='' && locatorProperty.trim() !=='' )\n\t\t\t\t  {\n\t\t\t\t\tItem=Item+1;\n\t\t\t\t\tORTestStepData[\"locator\"]=locatorName;\n\t\t\t\t\tORTestStepData[\"locatorproperty\"]=locatorProperty;\n\t\t\t\t\tORItem[Item]=ORTestStepData;\n\t\t\t\t  }\n\t\t\t  }\n\t\t\t\t//var ORjson = '['+JSON.stringify(ORItem)+']'\n\t\t\t\tlet OrToTatalItem = Object.keys(ORItem).length;\n\t\t\t\tif(OrToTatalItem>0)\n\t\t\t\t{\n\t\t\t\t\tvar ORjson = JSON.stringify(ORItem)\n\t\t\t\t\tvar ORAPI =APIBasePath+'customfunction';\n\t\t\t\t\t requestOptions = {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\t\t\tbody: ORjson\n\t\t\t\t\t};\n\t\t\t\t\tconst SaveORRequest = async () => \n\t\t\t\t\t{\n\t\t\t\t\t\tconst ORResponse = await fetch(ORAPI,requestOptions);\n\t\t\t\t\t\tconst ORJson = await ORResponse.json();\n\t\t\t\t\t\tif(!ORJson.success)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsuccessSteps= false;\n\t\t\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\t\t\treturn this.setState({modalValidationText:ORJson.servermessage})\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tSaveORRequest();\n\t\t\t\t}\n\t\t\t  if(!successSteps)\n\t\t\t  {\n\t\t\t\t  return;\n\t\t\t  }\n\t\t\t   json = JSON.stringify(jstestStepDatacollection);\n\t\t\t   requestOptions = \n\t\t\t  {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\"Accept\": \"application/json; odata=verbose\",'Content-type': 'application/x-www-form-urlencoded'},\n\t\t\t\tbody: json\n\t\t\t  };\n\t\t\tvar API= APIBasePath+'customfunction?customfunction='+cusFun\n\t\t\tconst req2 = async () => \n\t\t\t{\n\t\t\t\tconst request2 = await fetch(API,requestOptions)\n\t\t\t\tconst req2Response = await request2.json();\n\t\t\t\tif(!req2Response.success)\n\t\t\t\t{\n\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\treturn this.setState({modalValidationText:'ISSUE: '+req2Response.servermessage})\n\t\t\t\t}\n\t\t\t\t //@ Reset Base State\n\t\t\t\t this.setState({NewColName:''})\n\t\t\t\t this.setState({selectedHeaderColumn:''})\n\t\t\t\t this.setState({TestScriptTestData:[]})\n\t\t\t\t this.setState({Env:''})\n\t\t\t\t this.setState({ModuleName:''})\n\t\t\t\t this.setState({NewTestID:''})\n\t\t\t\t this.setState({testCaseName:''})\n\t\t\t\t this.setState({CommonDataItem:[]})\n\t\t\t\t this.setState({testDatacolumns:[{dataField: 'testdatacolid',text: '#',headerStyle: { width: '40px' }}]})\n\t\t\t\t this.setState({TestScriptTestData:[{teststepid: 1, stepdescription: 'Add Test Step 1 description',action:'',locator:'',locatorproperty:'',value:'',exitIfFail:'Y'}]})\n\t\t\t\t this.setState({customFunctionName:''})\n\t\t\t\t this.setState({customStepFrom:''})\n\t\t\t\t this.setState({customStepTo:''})\n\t\t\t\t this.setState({customFunctionNameCheck:false})\n\t\t\t\t this.setState({customFunctionstepFromCheck:false})\n\t\t\t\t this.setState({customFunctionstepToCheck:false})\n\t\t\t\t this.setState({customFunction:''})\n\t\t\t\t const req3 = async () => \n                  {\n                    const request3 = await fetch(APIBasePath+'customfunction')\n                    const req3Response = await request3.json();\n\t\t\t\t\tthis.setState({customFunctionList:req3Response})\n\t\t\t\t\tthis.setState({loaderTestSteps:false})\n\t\t\t\t\tthis.setState({modal:true})\n\t\t\t\t\treturn this.setState({modalValidationText:'Custom function is successfully saved.'})\n                  }\n                req3();\n\t\t\t}\n\t\t\treq2();\n  \n\t\t  }\n\t\t  else\n\t\t  {\n\t\t\t  this.setState({loaderTestSteps:false})\n\t\t\t  this.setState({modal:true})\n\t\t\t  return this.setState({modalValidationText:'Test Steps is missing in test scripts.'})\n\t\t  }\n\t\t \n\t}\n\n\taddNewCommonData = () => \n\t{\n\t\tvar ItemCount =this.state.CommonDataItem.length\n\t\tif(ItemCount>0)\n\t\t{\n\t\t\tvar valuecheck = this.state.CommonDataItem[ItemCount-1].commonKeyName\n\t\t\tif(valuecheck.trim()===\"\")\n\t\t\t{\n\t\t\t\tthis.setState({modal:true})\n\t\t\t    return this.setState({modalValidationText:'Before adding new Common key, add previous Common key.'})\n\t\t\t}\n\t\t}\n\t\tthis.setState({loader:true})\n\t\tvar lastOneId = this.state.CommonDataItem.length + 1;\n\t\tthis.setState({ CommonDataItem: [...this.state.CommonDataItem, {\n\t\t\tid: `${lastOneId}`, commonKeyName: ``,commonKeyValue:``\n\t\t}] });\n\t\tthis.setState({loader:false})\n\t}\n\n\taddNewTestSteps = () => \n\t{\n\t\t//# New Implementation\n\t\tvar ItemList = this.state.TestScriptTestData;\n\n\t\tif(ItemList.length>0)\n\t\t{\n\t\t\tfor(let i=0;i<ItemList.length;i++)\n\t\t\t{\n\t\t\t\tvar actionName= ItemList[i]['action'];\n\t\t\t\tif(actionName.trim() ===\"\")\n\t\t\t\t{\n\t\t\t\t\tthis.setState({modal:true})\n\t\t\t        return this.setState({modalValidationText:'Please add the test step information for record number '+(i+1)+', before adding new record.'});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n        this.setState({loaderTestSteps:true})\n\t\tvar selectedID = this.state.selectedTestStepNumber;\n\t\tif(selectedID>ItemList.length)\n\t\t{\n\t\t\tselectedID=0;\n\t\t}\n\t\tif(selectedID ===0)\n\t\t{\n\t\t\tselectedID= ItemList.length;\n\t\t}\n\t\tvar UpdatedRow=[]\n\t\tfor(let i=0;i<selectedID;i++)\n\t\t{\n\t\t\tUpdatedRow[i]= this.state.TestScriptTestData[i];\n\t\t}\n\t\t//@ add New Row\n\t\tvar NewItemContent ={};\n\t\ttry\n\t\t{\n\t\tselectedID= parseInt(selectedID.trim())\n\t\t}\n\t\tcatch(error)\n\t\t{}\n\t\tvar StepNo= selectedID+1;\n\t\tNewItemContent['teststepid']=StepNo;\n\t\tNewItemContent['stepdescription']='Add Test Step '+StepNo+' description'\n\t\tNewItemContent['action']='';\n\t\tNewItemContent['locator']='';\n\t\tNewItemContent['locatorproperty']='';\n\t\tNewItemContent['value']='';\n\t\tNewItemContent['exitIfFail']='Y';\n\t\tUpdatedRow.push(NewItemContent)\n\n\t\tfor(let i=selectedID;i<ItemList.length;i++)\n\t\t{\n\t\t\tItemList[i]['teststepid']=i+2;\n\t\t\tUpdatedRow.push(ItemList[i]);\n\t\t}\n\t\tthis.setState({ TestScriptTestData: UpdatedRow});\n\t\tthis.setState({loaderTestSteps:false})\n\t\t//# End of Implementation\n\n\t}\n\tdeleteCommonData = () => {\n\t\tthis.setState({loader:true})\n\t\tvar lastOneId = this.state.CommonDataItem.length;\n\t\tvar updatedBooks = this.state.CommonDataItem.filter(m => m.id !== lastOneId.toString());\n\t\tthis.setState({ CommonDataItem: updatedBooks });\n\t\tthis.setState({loader:false})\n\t  };\n\t  deleteTestSteps = () => \n\t  {\n\t\tvar ItemList = this.state.TestScriptTestData;\n\t\tif(ItemList.length===0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tvar selectedID = this.state.selectedTestStepNumber;\n\t\tif(selectedID===0)\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({loaderTestSteps:true})\n\t\tvar testData = this.state.TestScriptTestData.filter(m => m.teststepid !== selectedID);\n\t\tfor(let i=selectedID;i<=testData.length;i++)\n\t\t{\n\t\t\ttestData[i-1]['teststepid']=i;\n\t\t}\n\t\tthis.setState({ TestScriptTestData: testData });\n\t\tthis.setState({selectedTestStepNumber:selectedID})\n\t\tthis.setState({loaderTestSteps:false})\n\t  };\n\t  handleDataChange = ({ dataSize }) => {\n\t\tthis.setState({ rowCount: dataSize });\n\t  }\n\t  handleOnSelect = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\tvar selectedrow= row.id;\n\t\t\tvar GetItem = this.state.CommonDataItem[selectedrow-1].commonKeyName;\n\t\t\tthis.setState({ selectedCommonKey: GetItem });\n\n\t\t}\n\n\t}\n\thandleOnTestStepSelect = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\tvar selectedrow= row.teststepid;\n\t\t\tthis.setState({ selectedTestStepNumber: selectedrow });\n\t\t}\n\n\t}\n\thandleOnUtilitySelect = (row, isSelect) => {\n\t\tif (isSelect) \n\t\t{\n\t\t\t//var selectedrow= row.utilityfunction;\n\t\t\tvar selectedUtilityRowId= row.id;\n\t\t\tthis.setState({selectedUtilityRow:selectedUtilityRowId});\n\t\t}\n\n\t}\n\ttoggle = modalType => () => {\n\t\tif (!modalType) {\n\t\t  return this.setState({\n\t\t\tmodal: !this.state.modal,\n\t\t  });\n\t\t}\n\t\n\t\tthis.setState({\n\t\t  [`modal_${modalType}`]: !this.state[`modal_${modalType}`],\n\t\t});\n\t  };\n\n\t  toggleUtilityFunction = modalType => () => {\n\t\tif (!modalType) {\n\t\t  return this.setState({\n\t\t\tutilityFunction: !this.state.utilityFunction,\n\t\t  });\n\t\t}\n\t\n\t\tthis.setState({\n\t\t  [`utilityFunction_${modalType}`]: !this.state[`utilityFunction_${modalType}`],\n\t\t});\n\t  };\n\n\t  toggleModal = () => {\n\t\tthis.setState({\n\t\t  show: !this.state.showModal,\n\t\t});\n\t  };\n\n    render() {\n\n\t  const selectRow = {\n\t\tmode: 'radio',\n\t\tonSelect: this.handleOnSelect\n\t\t};\n\t\tconst selectRowforUtilityFunction = {\n\t\t\tmode: 'radio',\n\t\t\tonSelect: this.handleOnUtilitySelect\n\t\t\t};\n\t\tconst selectTestScriptRow = {\n\t\tmode: 'radio',\n\t\tonSelect: this.handleOnTestStepSelect\n\t\t};\n\t\tconst rowEvents = {\n\t\t\tonClick: (e, row, rowIndex) => {\n\t\t\t\t//console.log(`clicked on row with index: ${rowIndex}`);\n\t\t}};\n\t  const options = {\n\t\tsizePerPage: 5,\n\t\thideSizePerPage: true,\n\t\thidePageListOnlyOnePage: true\n\t  };\n\t  const Utilityoptions = {\n\t\tsizePerPage: 5,\n\t\thideSizePerPage: true,\n\t\thidePageListOnlyOnePage: true\n\t  };\n\t  const testScriptoptions = {\n\t\tsizePerPage: 10,\n\t\thideSizePerPage: true,\n\t\thidePageListOnlyOnePage: true\n\t  };\n\t  var columns = [\n\t\t{\n\t\t  dataField: 'id',\n\t\t  text: '#',\n\t\t  headerStyle: { width: '40px' },\n\t\t  Cell: row => (\n\t\t\t<div>\n\t\t\t  <span title={ row.value }>{ row.value }</span>\n\t\t\t</div>\n\t\t  )\n\t\t},\n\t\t{\n\t\t  dataField: 'commonKeyName',\n\t\t  text: 'Key Name*',\n\t\t  filter: textFilter(),\n\t\t  validator: (newValue, row, column) => {\n\t\t\tif (newValue.trim()==='') {\n\t\t\t  return {\n\t\t\t\tvalid: false,\n\t\t\t\tmessage: 'Key Name* can not be blank.'\n\t\t\t  };\n\t\t\t}\n\t\t\tvar totalCount = this.state.CommonDataItem.length;\n\t\t\tfor(let i=0;i<totalCount;i++)\n\t\t\t{\n\t\t\t\tvar ItemName = this.state.CommonDataItem[i].commonKeyName;\n\t\t\t\tif(ItemName.trim().toLowerCase()===newValue.trim().toLowerCase())\n\t\t\t\t{\n\t\t\t\t\treturn {\n\t\t\t\t\t\tvalid: false,\n\t\t\t\t\t\tmessage: 'Key Name* can not be duplicate.'\n\t\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'commonKeyValue',\n\t\t\ttext: 'Key Value',\n\t\t\tfilter: textFilter()\n\t\t  }\n\t  ];\n\t  var UtilityFunctioncolumns = [\n\t\t{\n\t\t  dataField: 'id',\n\t\t  text: '#',\n\t\t  headerStyle: { width: '40px' },\n\t\t  Cell: row => (\n\t\t\t<div>\n\t\t\t  <span title={ row.value }>{ row.value }</span>\n\t\t\t</div>\n\t\t  )\n\t\t},\n\t\t{\n\t\t  dataField: 'utilityfunction',\n\t\t  text: 'Utility Function*',\n\t\t  filter: textFilter()\n\t\t}\n\t  ];\n\t  var testScriptcolumns = [\n\t\t{\n\t\t  dataField: 'teststepid',\n\t\t  text: '#',\n\t\t  headerStyle: { width: '40px' }\n\t\t},\n\t\t{\n\t\t  dataField: 'stepdescription',\n\t\t  text: 'Step description*',\n\t\t  headerStyle: {\n\t\t  backgroundColor: '#c8e6c9'\n\t\t  },\n\t\t  validator: (newValue, row, column) => {\n\t\t  if (newValue.trim()==='') {\n\t\t\treturn {\n\t\t\t  valid: false,\n\t\t\t  message: 'Step description* can not be blank.'\n\t\t\t};\n\t\t  }\n\t\t  return true;\n\t\t}\n\t\t},\n\t\t{\n\t\t\tdataField: 'action',\n\t\t\ttext: 'Action*',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9',\n\t\t\t\twidth: '110px'\n\t\t\t  },\n\t\t\t  editor: {\n\t\t\t\ttype: Type.SELECT,\n\t\t\t\toptions: GetListOfListforActionName(this.state.allActionNameList)\n\t\t\t  },\n\t\t\t  validator: (newValue, row, column) => {\n\t\t\t  if (newValue.trim()==='') {\n\t\t\t\treturn {\n\t\t\t\t  valid: false,\n\t\t\t\t  message: 'Action* can not be blank.'\n\t\t\t\t};\n\t\t\t  }\n\t\t\t  return true;\n\t\t\t}\n\t\t\t  \n\t\t\t  \n\t\t},\n\t\t{\n\t\t\tdataField: 'locator',\n\t\t\ttext: 'Locator',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9',\n\t\t\t\twidth: '100px'\n\t\t\t\t\n\t\t\t  },\n\t\t\t  editor: {\n\t\t\t\ttype: Type.SELECT,\n\t\t\t\toptions: [{\n\t\t\t\t  value: 'id',\n\t\t\t\t  label: 'Id'\n\t\t\t\t}, {\n\t\t\t\t  value: 'name',\n\t\t\t\t  label: 'Name'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: 'classname',\n\t\t\t\t\tlabel: 'ClassName'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'xpath',\n\t\t\t\t\tlabel: 'XPath'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'linktext',\n\t\t\t\t\tlabel: 'LinkText'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'partiallinktext',\n\t\t\t\t\tlabel: 'PartialLinkText'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'tagname',\n\t\t\t\t\tlabel: 'TagName'\n\t\t\t\t  },\n\t\t\t\t  {\n\t\t\t\t\tvalue: 'cssselector',\n\t\t\t\t\tlabel: 'CssSelector'\n\t\t\t\t  }\n\t\t\t   ]\n\t\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'locatorproperty',\n\t\t\ttext: 'Locator Property',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9'\n\t\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'value',\n\t\t\ttext: 'Value',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9'\n\t\t\t  }\n\t\t},\n\t\t{\n\t\t\tdataField: 'exitIfFail',\n\t\t\ttext: 'Exit',\n\t\t\theaderStyle: {\n\t\t\t\tbackgroundColor: '#c8e6c9',\n\t\t\t\twidth: '60px'\n\t\t\t  },\n\t\t\t  editor: {\n\t\t\t\ttype: Type.SELECT,\n\t\t\t\toptions: [{\n\t\t\t\t  value: 'Y',\n\t\t\t\t  label: 'Y'\n\t\t\t\t}, {\n\t\t\t\t  value: 'N',\n\t\t\t\t  label: 'N'\n\t\t\t\t}]\n\t\t\t  }\n\t\t}\n\t\t\n\t  ];\n\t\t  \n  return (\n    <Page title=\"Custom Function\" breadcrumbs={[{ name: 'Custom Function', active: true }]}>\n\t\t<Loader \n        type=\"ThreeDots\"\n        color=\"#00BFFF\"\n        height={50}\n        width={100}\n        timeout={120000} //3 secs\n        visible = {this.state.loader}\n      />\n      <Row>\n\t  <Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Common Test Data \n\t\t\t\t<Row>\n\t\t\t\t\t<Modal\n\t\t\t\t\tisOpen={this.state.modal}\n\t\t\t\t\ttoggle={this.toggle()}\n\t\t\t\t\tclassName={this.props.className}>\n\t\t\t\t\t<ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n\t\t\t\t\t<ModalBody >\n\t\t\t\t\t{this.state.modalValidationText}\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t<Button color=\"secondary\" onClick={this.toggle()}>\n\t\t\t\t\t\tOK\n\t\t\t\t\t</Button>\n\t\t\t\t\t</ModalFooter>\n              \t</Modal>\n\t\t\t\t</Row>\n\t\t\t</CardHeader>\n\t\t\t<CardHeader>Environment*\n\t\t\t\t<FormGroup row>\n                \t<Col >\n                    \t<Input invalid={this.state.checkmodEnv} type=\"select\" name=\"modEnv\" value={this.state.modEnv} onChange={this.SelectmodEnv.bind(this)}>\n\t\t\t\t\t\t<option selected=\"selected\">{this.state.modEnv}</option>\n\t\t\t\t\t\t<Options options={this.state.CommonTestData} />\n\t\t\t\t\t\t</Input>\n                  \t</Col>\n\t\t\t\t  \t<CardImg\n\t\t\t\t\t className=\"card-img-right\"\n\t\t\t\t\t  src={bg1Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.addNewCommonData() }\n\t\t\t\t\t/>\n\t\t\t\t\t<CardImg\n\t\t\t\t\t  className=\"card-img-right\"\n\t\t\t\t\t  src={bg3Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.deleteCommonData() } \n\t\t\t\t\t/>\n             \t</FormGroup>\n\t\t\t</CardHeader>\n            <CardBody>\n\t\t\t<BootstrapTable\n\t\t\t\tkeyField=\"id\"\n\t\t\t\tdata={ this.state.CommonDataItem }\n\t\t\t\tcolumns={ columns }\n\t\t\t\tstriped\n\t\t\t\thover\n\t\t\t\tcondensed\n\t\t\t\tpagination={ paginationFactory(options) }\n\t\t\t\trowEvents={ rowEvents }\n\t\t\t\tonDataSizeChange={ this.handleDataChange }\n\t\t\t\tfilter={ filterFactory() }\n\t\t\t\tselectRow={ selectRow }\n\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\tmode: 'click',\n\t\t\t\t\tblurToSave: true,\n\t\t\t\t\tafterSaveCell\n\t\t\t\t\t})}\n\t\t\t/>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={6} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Create/Update Custom Function</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Custom Function Name*\n                  </Label>\n                  <Col>\n\t\t\t\t  \t<Combobox invalid={this.state.checkCustomFunction} name =\"customFunction\" \n\t\t\t\t    value={this.state.customFunction}\n\t\t\t\t\tdata={GetListvalueFromJsonResponce(this.state.customFunctionList)}\n\t\t\t\t\tcaseSensitive={false}\n\t\t\t\t\tminLength={3}\n\t\t\t\t\tfilter='contains'\n\t\t\t\t\tonSelect={this.updateCustomFunction.bind(this)}\n\t\t\t\t\tonChange={this.updateCustomFunction.bind(this)}\n\t\t\t\t\t/>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\t  <Row>\n\t\t<Col lg={12} md={12} sm={12} xs={12}>\n          <Card>\n\t\t\t\t<Loader \n\t\t\t\ttype=\"ThreeDots\"\n\t\t\t\tcolor=\"#00BFFF\"\n\t\t\t\theight={50}\n\t\t\t\twidth={100}\n\t\t\t\ttimeout={120000} //3 secs\n\t\t\t\tvisible = {this.state.loaderTestSteps}\n\t\t\t/>\n            <CardHeader>Test Steps \n\t\t\t<CardImg\n\t\t\t\t\t className=\"card-img-right\"\n\t\t\t\t\t  src={bg1Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.addNewTestSteps() }\n\t\t\t\t    />\n\t\t\t<CardImg\n\t\t\t\t\t  className=\"card-img-right\"\n\t\t\t\t\t  src={bg3Image}\n\t\t\t\t\t  style={{ width: 'auto', height: 30 }}\n\t\t\t\t\t  onClick={ () => this.deleteTestSteps() }\n\t\t\t/>\n\t\t\t<Button color=\"primary\" onClick={this.selectionCommonData.bind(this)} name =\"selectCommonData\">Select Common Data</Button>\n\t\t\t<Button color=\"primary\"  onClick={this.selectionUtilityData.bind(this)} name =\"selectUtilityFunction\">Select Utility Data</Button>\n\t\t\t<Button color=\"primary\" onClick={this.SaveTestScripts.bind(this)} name =\"saveTestScript\">Save Custom Function</Button>\n\t\t\t<Modal\n\t\t\t\tisOpen={this.state.modal}\n\t\t\t\ttoggle={this.toggle()}\n\t\t\t\tclassName={this.props.className}>\n\t\t\t\t<ModalHeader  toggle={this.toggle()}> Information</ModalHeader>\n\t\t\t\t<ModalBody >\n\t\t\t\t{this.state.modalValidationText}\n\t\t\t\t</ModalBody>\n\t\t\t\t<ModalFooter>\n\t\t\t\t<Button color=\"secondary\" onClick={this.toggle()}>\n\t\t\t\t\tOK\n\t\t\t\t</Button>\n\t\t\t\t</ModalFooter>\n            </Modal>\n\t\t\t<Modal\n\t\t\t\tisOpen={this.state.utilityFunction}\n\t\t\t\ttoggle={this.toggleUtilityFunction()}\n\t\t\t\tbackdrop=\"static\"\n\t\t\t\t\tclassName={this.props.className}>\n\t\t\t\t\t<ModalHeader  toggle={this.toggleUtilityFunction()} >Utility Function</ModalHeader>\n\t\t\t\t\t\t<CardHeader  >\n\t\t\t\t\t\t\t<Alert color= { this.state.alertColor }>\n\t\t\t\t\t\t\t\t{this.state.UtilityFunctionExpression}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t</CardHeader>\n\t\t\t\t\t<ModalBody >\n\t\t\t\t\t\t<BootstrapTable \n\t\t\t\t\t\t\t\tkeyField=\"id\"\n\t\t\t\t\t\t\t\tdata={ this.state.UtilityFunctionList }\n\t\t\t\t\t\t\t\tcolumns={ UtilityFunctioncolumns }\n\t\t\t\t\t\t\t\tstriped\n\t\t\t\t\t\t\t\thover\n\t\t\t\t\t\t\t\tcondensed\n\t\t\t\t\t\t\t\tpagination={ paginationFactory(Utilityoptions) }\n\t\t\t\t\t\t\t\tselectRow={ selectRowforUtilityFunction }\n\t\t\t\t\t\t\t\tfilter={ filterFactory() }\n\t\t\t\t\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\t\t\t\t\tmode: 'click',\n\t\t\t\t\t\t\t\t\tblurToSave: true,\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</ModalBody>\n\t\t\t\t\t<ModalFooter>\n\t\t\t\t\t    <Button onClick={this.EvaluateCustomFunction.bind(this)} color=\"secondary\">\n\t\t\t\t\t\t  Evaluate\n\t\t\t\t\t   </Button>\n\t\t\t\t\t\t<Button color=\"secondary\" onClick={this.selectUtilityFunctionfromList.bind(this)}>\n\t\t\t\t\t\t Select Utility Data\n\t\t\t\t\t   </Button>\n\t\t\t\t\t</ModalFooter>\n            </Modal>\n\t\t\t</CardHeader>\n            <CardBody>\n\t\t\t<BootstrapTable\n\t\t\t\tkeyField=\"teststepid\"\n\t\t\t\tdata={ this.state.TestScriptTestData }\n\t\t\t\tcolumns={ testScriptcolumns }\n\t\t\t\tstriped\n\t\t\t\thover\n\t\t\t\tcondensed\n\t\t\t\tpagination={ paginationFactory(testScriptoptions) }\n\t\t\t\trowEvents={ rowEvents }\n\t\t\t\tonDataSizeChange={ this.handleDataChange }\n\t\t\t\tselectRow={ selectTestScriptRow }\n\t\t\t\tcellEdit={ cellEditFactory({\n\t\t\t\t\tmode: 'click',\n\t\t\t\t\tblurToSave: true,\n\t\t\t\t\t//onStartEdit: (row, column, rowIndex, columnIndex) => { console.log('start to edit!!!'); },\n\t\t\t\t\t//beforeSaveCell: (oldValue, newValue, row, column) => { console.log('Before Saving Cell!!'); },\n\t\t\t\t\t// afterSaveCell: (oldValue, newValue, row, column) => { console.log('After Saving Cell!!'); console.log(row); console.log(column); }\n\t\t\t\t\t})}\n\t       />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n}\n};\n\nexport default CustomFunction;\n"],"sourceRoot":""}
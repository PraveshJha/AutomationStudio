{"version":3,"sources":["components/Typography.js","components/Page.js","utils/colors.js","utils/demos.js","pages/CardPage.js"],"names":["tagMap","h1","h2","h3","h4","h5","h6","p","lead","blockquote","Typography","Tag","tag","className","type","restProps","classes","classNames","TypoComp","defaultProps","bem","bn","create","Page","title","breadcrumbs","children","b","e","length","map","name","active","index","key","getColor","availableColor","window","getComputedStyle","document","documentElement","getPropertyValue","getThemeColors","randomNum","min","max","random","number","MONTHS","genLineData","moreData","moreData2","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","CardPage","lg","md","sm","xs","col","for","selected","color","placeholder","onSelect","console","log","responsive","scope","row"],"mappings":"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","file":"static/js/32.4175a39f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nconst tagMap = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  'display-1': 'h1',\n  'display-2': 'h1',\n  'display-3': 'h1',\n  'display-4': 'h1',\n  p: 'p',\n  lead: 'p',\n  blockquote: 'blockquote',\n};\n\nconst types = Object.keys(tagMap);\n\nconst Typography = ({ tag: Tag, className, type, ...restProps }) => {\n  const classes = classNames({ [type]: !!type }, className);\n  let TypoComp;\n\n  if (Tag) {\n    TypoComp = Tag;\n  } else if (!Tag && tagMap[type]) {\n    TypoComp = tagMap[type];\n  } else {\n    TypoComp = 'p';\n  }\n\n  return <TypoComp {...restProps} className={classes} />;\n};\n\nTypography.propTypes = {\n  tag: PropTypes.component,\n  className: PropTypes.string,\n  type: PropTypes.oneOf(types),\n};\n\nTypography.defaultProps = {\n  type: 'p',\n};\n\nexport default Typography;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport bn from 'utils/bemnames';\n\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nimport Typography from './Typography';\n\nconst bem = bn.create('page');\n\nconst Page = ({\n  title,\n  breadcrumbs,\n  tag: Tag,\n  className,\n  children,\n  ...restProps\n}) => {\n  const classes = bem.b('px-3', className);\n\n  return (\n    <Tag className={classes} {...restProps}>\n      <div className={bem.e('header')}>\n        {title && typeof title === 'string' ? (\n          <Typography type=\"h1\" className={bem.e('title')}>\n            {title}\n          </Typography>\n        ) : (\n            title\n          )}\n        {breadcrumbs && (\n          <Breadcrumb className={bem.e('breadcrumb')}>\n            <BreadcrumbItem>Home</BreadcrumbItem>\n            {breadcrumbs.length &&\n              breadcrumbs.map(({ name, active }, index) => (\n                <BreadcrumbItem key={index} active={active}>\n                  {name}\n                </BreadcrumbItem>\n              ))}\n          </Breadcrumb>\n        )}\n      </div>\n      {children}\n    </Tag>\n  );\n};\n\nPage.propTypes = {\n  tag: PropTypes.component,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  className: PropTypes.string,\n  children: PropTypes.node,\n  breadcrumbs: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      active: PropTypes.bool,\n    })\n  ),\n};\n\nPage.defaultProps = {\n  tag: 'div',\n  title: '',\n};\n\nexport default Page;\n","// const availableColors = [\n//   'blue',\n//   'indigo',\n//   'purple',\n//   'pink',\n//   'red',\n//   'orange',\n//   'yellow',\n//   'green',\n//   'teal',\n//   'cyan',\n//   'white',\n//   'gray',\n//   'gray-dark',\n//   'primary',\n//   'secondary',\n//   'success',\n//   'info',\n//   'warning',\n//   'danger',\n//   'light',\n//   'dark',\n// ];\n\nexport const getColor = (availableColor = 'primary') => {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  const color = window\n    .getComputedStyle(document.documentElement)\n    .getPropertyValue(`--${availableColor}`);\n\n  return color;\n};\n\nexport const getThemeColors = () => [\n  'primary',\n  'secondary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n","import random from 'faker/lib/random';\n\nexport const randomNum = (min = 0, max = 1000) => {\n  return random().number({ min, max });\n};\n","import Page from 'components/Page';\nimport React from 'react';\nimport { randomNum } from 'utils/demos';\nimport { getColor } from 'utils/colors';\nimport { Pie,Bar} from 'react-chartjs-2';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Form,\n  FormGroup,\n  Input,\n  Label,\n  Row,\n  Table,\n} from 'reactstrap';\nimport {Tabs, Tab} from 'react-bootstrap-tabs';\nconst genPieData = () => {\n  return {\n    datasets: [\n      {\n        data: [randomNum(), randomNum()],\n        backgroundColor: [\n          getColor('success'),\n          getColor('danger'),\n        ],\n        label: 'Dataset 1',\n      },\n    ],\n    labels: ['PASS', 'FAIL'],\n  };\n};\nconst MONTHS = ['PLP', 'PIP', 'Shopping Cart', 'Header', 'Footer', 'Payment Method', 'Login'];\nconst genLineData = (moreData = {}, moreData2 = {}) => {\n  return {\n    labels: MONTHS,\n    datasets: [\n      {\n        label: 'PASS',\n        backgroundColor: getColor('success'),\n        borderColor: getColor('success'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData,\n      },\n      {\n        label: 'FAIL',\n        backgroundColor: getColor('danger'),\n        borderColor: getColor('danger'),\n        borderWidth: 1,\n        data: [\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n          randomNum(),\n        ],\n        ...moreData2,\n      },\n    ],\n  };\n};\nconst CardPage = () => {\n  return (\n    <Page title=\"Execution Lab\" breadcrumbs={[{ name: 'Execution Lab', active: true }]}>\n      <Row>\n        <Col lg={4} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Execution Configuration</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Environment*\n                  </Label>\n                  <Col>\n                    <Input type=\"select\" name=\"select\" />\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n                  <Label for=\"exampleSelect\" sm={5}>\n                    Browser*\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"browser\">\n\t\t\t\t\t<option selected=\"selected\"></option>\n\t\t\t\t\t<option>CHROME</option>\n                    <option>FIREFOX</option>\n\t\t\t\t\t</Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    ScreenShot*\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"screenshot\">\n\t\t\t\t\t<option selected=\"selected\"></option>\n\t\t\t\t\t<option>FOR EACH STEP</option>\n                    <option>FOR STEP FAILURE</option>\n\t\t\t\t\t</Input>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t <Col lg={3} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Execution Setup</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={6}>\n                    Run at*\n                  </Label>\n                  <Col>\n                    <Input type=\"select\" name=\"runat\">\n\t\t\t\t\t<option selected=\"selected\"></option>\n\t\t\t\t\t<option>LOCAL</option>\n                    <option>SELENIUM GRID</option>\n\t\t\t\t\t</Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n                  <Label for=\"exampleSelect\" sm={10}>\n                    Thread Count per Machine*\n                  </Label>\n                  <Col >\n                    <Input type=\"select\" name=\"threadcount\">\n\t\t\t\t\t<option selected=\"selected\"></option>\n\t\t\t\t\t<option>1</option>\n                    <option>2</option>\n\t\t\t\t\t<option>3</option>\n                    <option>4</option>\n\t\t\t\t\t<option>5</option>\n\t\t\t\t\t</Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n                  <Label for=\"exampleSelect\" sm={12}>\n                    Jenkins Suite Name*\n                  </Label>\n                  <Col >\n                    <Input type=\"input\" name=\"select\" />\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n                  <Col >\n\t\t\t\t\t<Button color=\"info\">Save Test Suite</Button>\n                  </Col>\n                </FormGroup>\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={5} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Email Configuration</CardHeader>\n            <CardBody>\n              <Form>\n                <FormGroup col>\n                  <Label for=\"exampleSelect\" sm={5}>\n                    Email Trigger*\n                  </Label>\n                  <Col>\n                    <Input type=\"select\" name=\"email\">\n\t\t\t\t\t<option selected=\"selected\"></option>\n\t\t\t\t\t<option>YES</option>\n                    <option>NO</option>\n\t\t\t\t\t</Input>\n                  </Col>\n                </FormGroup>\n\t\t\t\t<FormGroup col>\n\t\t\t\t<Label for=\"exampleSelect\" sm={5}>\n                    From Email*\n                  </Label>\n                  <Col >\n                    <Input type=\"input\" name=\"select\" placeholder=\"enter your Email Address\"/>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t<FormGroup col>\n\t\t\t\t<Label for=\"exampleSelect\" sm={5}>\n                    Password*\n                  </Label>\n                  <Col >\n                    <Input type=\"input\" name=\"select\" placeholder=\"enter your Password\"/>\n                  </Col>\n                </FormGroup>{' '}\n\t\t\t\t<FormGroup col>\n\t\t\t\t<Label for=\"exampleSelect\" sm={5}>\n                    Receiver Email*\n                  </Label>\n                 <Col >\n                    <Input type=\"input\" name=\"select\" placeholder=\"enter your Receiver email\"/>\n                  </Col>\n                </FormGroup>{' '}\n              </Form>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n\t  <Row>\n\t  \t<Col lg={12} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Executable Test Scripts</CardHeader>\n            <CardBody>\n              <Tabs className=\"table-primary\" onSelect={(index, label) => console.log(label + ' selected')}>\n\t\t\t\t<Tab label=\"Product List Page\">\n\t\t\t\t      <Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t  <Card className=\"mb-3\">\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t  <Table responsive>\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />Tick\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th>TestID</th>\n\t\t\t\t\t\t\t\t\t<th>Test Case Name</th>\n\t\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">1</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>CNB-1001</td>\n\t\t\t\t\t\t\t\t\t<td>To Test validation message on Product list page</td>\n\t\t\t\t\t\t\t\t\t<td>PASS</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">2</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>CNB-1002</td>\n\t\t\t\t\t\t\t\t\t<td>To Test Add Item in cart from Product list page</td>\n\t\t\t\t\t\t\t\t\t<td>PASS</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">3</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>CNB-1003</td>\n\t\t\t\t\t\t\t\t\t<td>Validate Product price on Product list page</td>\n\t\t\t\t\t\t\t\t\t<td>PASS</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t  </Table>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t  </Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t  </Row>\n\t\t\t\t</Tab>\n\t\t\t\t<Tab label=\"Product Information Page\">\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t  <Card className=\"mb-3\">\n\t\t\t\t\t\t\t<CardBody>\n\t\t\t\t\t\t\t  <Table responsive>\n\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th>#</th>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />Tick\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th>TestID</th>\n\t\t\t\t\t\t\t\t\t<th>Test Case Name</th>\n\t\t\t\t\t\t\t\t\t<th>Status</th>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">1</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>CNB-1004</td>\n\t\t\t\t\t\t\t\t\t<td>To Test all mendatory validation message on PIP page</td>\n\t\t\t\t\t\t\t\t\t<td>PASS</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">2</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>CNB-1005</td>\n\t\t\t\t\t\t\t\t\t<td>To Test Add Item in cart from PIP page</td>\n\t\t\t\t\t\t\t\t\t<td>PASS</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">3</th>\n\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<Input type=\"checkbox\" />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td>CNB-1006</td>\n\t\t\t\t\t\t\t\t\t<td>Place an order from PIP page.</td>\n\t\t\t\t\t\t\t\t\t<td>FAIL</td>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t  </Table>\n\t\t\t\t\t\t\t</CardBody>\n\t\t\t\t\t\t  </Card>\n\t\t\t\t\t\t</Col>\n\t\t\t\t\t  </Row>\n\t\t\t\t</Tab>\n\t\t\t</Tabs>\n            </CardBody>\n          </Card>\n        </Col>\t\t\t\n        </Row>\n\t\t<Row>\n\t\t\t<Col lg={12} md={6} sm={6} xs={12}>\n\t\t\t  <Card >\n\t\t\t\t<CardBody>\n\t\t\t\t  <Form>\n\t\t\t\t   <FormGroup row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Button color=\"info\">Execute Test Scripts</Button>\n\t\t\t\t\t  </Col>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Button color=\"info\">Reset Execution Lab</Button>\n\t\t\t\t\t  </Col>\n\t\t\t\t\t  </FormGroup>{' '}\n\t\t\t\t  </Form>\n\t\t\t\t</CardBody>\n\t\t\t  </Card>\n\t\t\t</Col>\n\t\t</Row>\n\t\t<Row>\n        <Col lg={4} md={6} sm={6} xs={12}>\n          <Card>\n            <CardHeader>Total Pass Fail Count</CardHeader>\n\t\t\t<CardBody>\n              <Pie data={genPieData()} />\n            </CardBody>\n          </Card>\n        </Col>\n\t\t<Col lg={8} md={6} sm={6} xs={12}>\n\t\t<Card>\n            <CardHeader>Pass Fail Count Module wise</CardHeader>\n\t\t\t<CardBody>\n              <Bar data={genLineData()} />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Page>\n  );\n};\n\nexport default CardPage;\n"],"sourceRoot":""}
{"version":3,"sources":["utils/propTypes.js","utils/bemnames.js","components/AuthForm.js","assets/img/sidebar/sidebar-4.jpg","assets/img/logo/logo_200.png","assets/img/users/100_4.jpg","assets/img/bg/background_1920-2.jpg","components/GAListener.js","components/Layout/Content.js","components/Layout/EmptyLayout.js","components/Layout/Footer.js","components/Avatar.js","components/Card/UserCard.js","components/Card/AnnouncementCard.js","components/Todos.js","components/Card/TodosCard.js","components/Notifications.js","components/SearchInput.js","hocs/withBadge.js","components/Layout/Header.js","components/Layout/LayoutRoute.js","utils/constants.js","components/Layout/MainLayout.js","components/SourceLink.js","components/Layout/Sidebar.js","components/PageSpinner.js","pages/AuthPage.js","App.js","index.js"],"names":["PropTypes","ID","oneOfType","string","number","isRequired","component","func","date","instanceOf","Date","bemNames","namespace","create","blockName","block","b","more","classNames","e","className","m","AuthForm","React","Component","changeAuthState","authState","event","preventDefault","this","props","onChangeAuthState","handleSubmit","STATE_LOGIN","STATE_SIGNUP","renderButtonText","buttonText","isLogin","isSignup","render","showLogo","usernameLabel","usernameInputProps","passwordLabel","passwordInputProps","confirmPasswordLabel","confirmPasswordInputProps","children","onLogoClick","onSubmit","src","logo200Image","style","width","height","cursor","alt","onClick","for","check","type","size","href","defaultProps","placeholder","module","exports","ReactGA","initialize","process","GAListener","componentDidMount","sendPageView","context","router","history","location","listen","set","page","pathname","pageview","contextTypes","object","bem","bn","Content","Tag","tag","restProps","classes","Container","EmptyLayout","fluid","Footer","Navbar","Nav","navbar","NavItem","Avatar","rounded","circle","userImage","UserCard","avatar","avatarSize","title","subtitle","text","Card","inverse","CardBody","CardTitle","CardSubtitle","CardText","AnnouncementCard","color","header","name","buttonProps","bgColor","CardHeader","Button","arrayOf","shape","id","done","bool","Todos","todos","ListGroup","flush","map","ListGroupItem","key","FormGroup","Label","Input","checked","readOnly","TodosCard","image","CardImg","CardImgOverlay","opacity","backgroundImage","Notifications","notificationsData","length","message","Media","left","body","middle","right","SearchInput","Form","inline","withBadge","Header","state","isOpenNotificationPopover","isNotificationConfirmed","isOpenUserCardPopover","toggleNotificationPopover","setState","toggleUserCardPopover","handleSidebarControlButton","stopPropagation","document","querySelector","classList","toggle","light","expand","outline","NavLink","Popover","placement","isOpen","target","minWidth","PopoverBody","LayoutRoute","Layout","layout","rest","Route","NOTIFICATION_SYSTEM_STYLE","NotificationItem","DefaultStyle","display","justifyContent","alignItems","borderRadius","fontSize","success","borderTop","backgroundColor","WebkitBoxShadow","MozBoxShadow","boxShadow","error","warning","info","background","Title","margin","padding","paddingRight","fontWeight","MessageWrapper","Dismiss","fontFamily","position","textAlign","float","top","lineHeight","Action","border","ActionWrapper","MainLayout","handleContentClick","isSidebarOpen","breakpoint","openSidebar","contains","componentWillReceiveProps","checkBreakpoint","setTimeout","notificationSystem","addNotification","level","openOrClose","add","remove","dismissible","ref","SourceLink","rel","sidebarBackground","sidebarBgImage","backgroundSize","backgroundRepeat","navComponents","to","exact","Icon","MdViewList","navItems","MdDashboard","MdInsertChart","MdWidgets","Sidebar","isOpenComponents","isOpenContents","isOpenPages","handleClick","prevState","data-image","vertical","index","activeClassName","transform","transitionDuration","transitionProperty","Collapse","PageSpinner","Spinner","AuthPage","handleAuthState","push","handleLogoClick","Row","Col","md","lg","AlertPage","lazy","AuthModalPage","BadgePage","ButtonGroupPage","ButtonPage","CardPage","ChartPage","DashboardPage","DropdownPage","FormPage","InputGroupPage","ModalPage","ProgressPage","TablePage","TypographyPage","WidgetPage","ExecutionLabPage","TestScripts","TestAttribute","LocatorProperty","TestData","UpdateTestScript","CustomFunction","SeleniumGrid","Configuration","CICDSupport","App","BrowserRouter","basename","split","pop","Switch","path","Suspense","fallback","Redirect","componentQueries","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0bb25390.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default {\n  ...PropTypes,\n  ID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  component: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string]),\n};\n","import classNames from 'classnames';\n\nexport const createBEM = namespace => {\n  return {\n    create: blockName => {\n      let block = blockName;\n\n      if (typeof namespace === 'string') {\n        block = `${namespace}-${blockName}`;\n      }\n\n      return {\n        b: (...more) => {\n          return classNames(block, more);\n        },\n        e: (className, ...more) => {\n          return classNames(`${block}__${className}`, more);\n        },\n        m: (className, ...more) => {\n          return classNames(`${block}--${className}`, more);\n        },\n      };\n    },\n  };\n};\n\nexport const bemNames = createBEM('cr');\n\nexport default bemNames;\n","import logo200Image from 'assets/img/logo/logo_200.png';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\n\nclass AuthForm extends React.Component {\n  get isLogin() {\n    return this.props.authState === STATE_LOGIN;\n  }\n\n  get isSignup() {\n    return this.props.authState === STATE_SIGNUP;\n  }\n\n  changeAuthState = authState => event => {\n    event.preventDefault();\n\n    this.props.onChangeAuthState(authState);\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  renderButtonText() {\n    const { buttonText } = this.props;\n\n    if (!buttonText && this.isLogin) {\n      return 'Login';\n    }\n\n    if (!buttonText && this.isSignup) {\n      return 'Signup';\n    }\n\n    return buttonText;\n  }\n\n  render() {\n    const {\n      showLogo,\n      usernameLabel,\n      usernameInputProps,\n      passwordLabel,\n      passwordInputProps,\n      confirmPasswordLabel,\n      confirmPasswordInputProps,\n      children,\n      onLogoClick,\n    } = this.props;\n\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        {showLogo && (\n          <div className=\"text-center pb-4\">\n            <img\n              src={logo200Image}\n              className=\"rounded\"\n              style={{ width: 60, height: 60, cursor: 'pointer' }}\n              alt=\"logo\"\n              onClick={onLogoClick}\n            />\n          </div>\n        )}\n        <FormGroup>\n          <Label for={usernameLabel}>{usernameLabel}</Label>\n          <Input {...usernameInputProps} />\n        </FormGroup>\n        <FormGroup>\n          <Label for={passwordLabel}>{passwordLabel}</Label>\n          <Input {...passwordInputProps} />\n        </FormGroup>\n        {this.isSignup && (\n          <FormGroup>\n            <Label for={confirmPasswordLabel}>{confirmPasswordLabel}</Label>\n            <Input {...confirmPasswordInputProps} />\n          </FormGroup>\n        )}\n        <FormGroup check>\n          <Label check>\n            <Input type=\"checkbox\" />{' '}\n            {this.isSignup ? 'Agree the terms and policy' : 'Remember me'}\n          </Label>\n        </FormGroup>\n        <hr />\n        <Button\n          size=\"lg\"\n          className=\"bg-gradient-theme-left border-0\"\n          block\n          onClick={this.handleSubmit}>\n          {this.renderButtonText()}\n        </Button>\n\n        <div className=\"text-center pt-1\">\n          <h6>or</h6>\n          <h6>\n            {this.isSignup ? (\n              <a href=\"#login\" onClick={this.changeAuthState(STATE_LOGIN)}>\n                Login\n              </a>\n            ) : (\n              <a href=\"#signup\" onClick={this.changeAuthState(STATE_SIGNUP)}>\n                Signup\n              </a>\n            )}\n          </h6>\n        </div>\n\n        {children}\n      </Form>\n    );\n  }\n}\n\nexport const STATE_LOGIN = 'LOGIN';\nexport const STATE_SIGNUP = 'SIGNUP';\n\nAuthForm.propTypes = {\n  authState: PropTypes.oneOf([STATE_LOGIN, STATE_SIGNUP]).isRequired,\n  showLogo: PropTypes.bool,\n  usernameLabel: PropTypes.string,\n  usernameInputProps: PropTypes.object,\n  passwordLabel: PropTypes.string,\n  passwordInputProps: PropTypes.object,\n  confirmPasswordLabel: PropTypes.string,\n  confirmPasswordInputProps: PropTypes.object,\n  onLogoClick: PropTypes.func,\n};\n\nAuthForm.defaultProps = {\n  authState: 'LOGIN',\n  showLogo: true,\n  usernameLabel: 'Email',\n  usernameInputProps: {\n    type: 'email',\n    placeholder: 'your@email.com',\n  },\n  passwordLabel: 'Password',\n  passwordInputProps: {\n    type: 'password',\n    placeholder: 'your password',\n  },\n  confirmPasswordLabel: 'Confirm Password',\n  confirmPasswordInputProps: {\n    type: 'password',\n    placeholder: 'confirm your password',\n  },\n  onLogoClick: () => {},\n};\n\nexport default AuthForm;\n","module.exports = __webpack_public_path__ + \"static/media/sidebar-4.80d4a4e5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo_200.5faf4221.png\";","module.exports = __webpack_public_path__ + \"static/media/100_4.851fe893.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background_1920-2.c54eef50.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ReactGA from 'react-ga';\n\nconst hasGAId = !!process.env.REACT_APP_GOOGLE_ANALYTICS;\n\nif (hasGAId) {\n  ReactGA.initialize(process.env.REACT_APP_GOOGLE_ANALYTICS);\n}\n\nclass GAListener extends React.Component {\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  componentDidMount() {\n    if (hasGAId) {\n      this.sendPageView(this.context.router.history.location);\n      this.context.router.history.listen(this.sendPageView);\n    }\n  }\n\n  sendPageView(location) {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default GAListener;\n","import React from 'react';\n\nimport bn from 'utils/bemnames';\n\nimport { Container } from 'reactstrap';\n\nconst bem = bn.create('content');\n\nconst Content = ({ tag: Tag, className, ...restProps }) => {\n  const classes = bem.b(className);\n\n  return <Tag className={classes} {...restProps} />;\n};\n\nContent.defaultProps = {\n  tag: Container,\n};\n\nexport default Content;\n","import { Content } from 'components/Layout';\nimport React from 'react';\n\nconst EmptyLayout = ({ children, ...restProps }) => (\n  <main className=\"cr-app bg-light\" {...restProps}>\n    <Content fluid>{children}</Content>\n  </main>\n);\n\nexport default EmptyLayout;\n","import React from 'react';\n\nimport { Navbar, Nav, NavItem } from 'reactstrap';\n\nconst Footer = () => {\n  return (\n    <Navbar>\n      <Nav navbar>\n        <NavItem>\n          Copyright © 2020 by Automation Studio (Pravesh Jha)\n        </NavItem>\n      </Nav>\n    </Navbar>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport userImage from 'assets/img/users/100_4.jpg';\n\nconst Avatar = ({\n  rounded,\n  circle,\n  src,\n  size,\n  tag: Tag,\n  className,\n  style,\n  ...restProps\n}) => {\n  const classes = classNames({ 'rounded-circle': circle, rounded }, className);\n  return (\n    <Tag\n      src={src}\n      style={{ width: size, height: size, ...style }}\n      className={classes}\n      {...restProps}\n    />\n  );\n};\n\nAvatar.propTypes = {\n  tag: PropTypes.component,\n  rounded: PropTypes.bool,\n  circle: PropTypes.bool,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  src: PropTypes.string,\n  style: PropTypes.object,\n};\n\nAvatar.defaultProps = {\n  tag: 'img',\n  rounded: false,\n  circle: true,\n  size: 40,\n  src: userImage,\n  style: {},\n};\n\nexport default Avatar;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport classNames from 'classnames';\n\nimport { Card, CardTitle, CardSubtitle, CardText, CardBody } from 'reactstrap';\n\nimport Avatar from '../Avatar';\n\nconst UserCard = ({\n  avatar,\n  avatarSize,\n  title,\n  subtitle,\n  text,\n  children,\n  className,\n  ...restProps\n}) => {\n  const classes = classNames('bg-gradient-theme', className);\n\n  return (\n    <Card inverse className={classes} {...restProps}>\n      <CardBody className=\"d-flex justify-content-center align-items-center flex-column\">\n        <Avatar src={avatar} size={avatarSize} className=\"mb-2\" />\n        <CardTitle>{title}</CardTitle>\n        <CardSubtitle>{subtitle}</CardSubtitle>\n        <CardText>\n          <small>{text}</small>\n        </CardText>\n      </CardBody>\n      {children}\n    </Card>\n  );\n};\n\nUserCard.propTypes = {\n  avatar: PropTypes.string,\n  avatarSize: PropTypes.number,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  text: PropTypes.string,\n  className: PropTypes.string,\n};\n\nUserCard.defaultProps = {\n  avatarSize: 80,\n};\n\nexport default UserCard;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardHeader, CardBody, CardText, Button } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nimport classNames from 'classnames';\n\nconst AnnouncementCard = ({\n  color,\n  header,\n  avatar,\n  avatarSize,\n  name,\n  date,\n  text,\n  className,\n  buttonProps,\n  ...restProps\n}) => {\n  const bgColor = `bg-${color}`;\n  const classes = classNames(bgColor, className);\n\n  return (\n    <Card inverse className={classes} {...restProps}>\n      {header && typeof header === 'string' ? (\n        <CardHeader className={bgColor}>{header}</CardHeader>\n      ) : (\n        header\n      )}\n      <CardBody className=\"d-flex flex-wrap flex-column align-items-center justify-content-center\">\n        <Avatar size={avatarSize} src={avatar} />\n        <CardText className=\"text-center\">\n          <strong className=\"d-block\">{name}</strong>\n          <small className=\"text-muted\">{date}</small>\n        </CardText>\n        <CardText className=\"text-center\">{text}</CardText>\n\n        <Button color=\"primary\" {...buttonProps} />\n      </CardBody>\n    </Card>\n  );\n};\n\nAnnouncementCard.propTypes = {\n  color: PropTypes.string,\n  header: PropTypes.node,\n  avatar: PropTypes.string,\n  avatarSize: PropTypes.number,\n  name: PropTypes.string,\n  date: PropTypes.date,\n  className: PropTypes.string,\n  children: PropTypes.element,\n};\n\nAnnouncementCard.defaultProps = {\n  color: 'gradient-secondary',\n  avatarSize: 60,\n};\n\nexport default AnnouncementCard;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport {\n  ListGroup,\n  ListGroupItem,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from 'reactstrap';\n\nexport const propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.ID,\n      title: PropTypes.string,\n      done: PropTypes.bool,\n    })\n  ),\n};\n\nconst Todos = ({ todos, ...restProps }) => {\n  return (\n    <ListGroup flush {...restProps}>\n      {todos.map(({ id, title, done } = {}) => (\n        <ListGroupItem key={id} className=\"border-0\">\n          <FormGroup check>\n            <Label check>\n              <Input type=\"checkbox\" checked={done} readOnly />\n              {done ? <strike>{title}</strike> : <span>{title}</span>}\n            </Label>\n          </FormGroup>\n        </ListGroupItem>\n      ))}\n      <Button block>Add</Button>\n    </ListGroup>\n  );\n};\n\nTodos.propTypes = propTypes;\n\nTodos.defaultProps = {\n  todos: [],\n};\n\nexport default Todos;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Card, CardImg, CardImgOverlay, CardTitle, CardText } from 'reactstrap';\n\nimport Todos, { propTypes as TodosPropTypes } from 'components/Todos';\n\nimport backgroundImage from 'assets/img/bg/background_1920-2.jpg';\n\nconst TodosCard = ({ image, title, subtitle, todos, ...restProps }) => {\n  return (\n    <Card {...restProps}>\n      <div className=\"position-relative\">\n        <CardImg src={image} />\n        <CardImgOverlay className=\"bg-dark\" style={{ opacity: 0.2 }}>\n          <CardTitle className=\"text-white\">{title}</CardTitle>\n          <CardText className=\"text-white\">{subtitle}</CardText>\n        </CardImgOverlay>\n      </div>\n      <Todos todos={todos} />\n    </Card>\n  );\n};\n\nTodosCard.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  todos: TodosPropTypes.todos,\n};\n\nTodosCard.defaultProps = {\n  image: backgroundImage,\n  title: 'Tasks',\n  subtitle: 'Due soon...',\n};\n\nexport default TodosCard;\n","import React from 'react';\nimport PropTypes from 'utils/propTypes';\n\nimport { Media } from 'reactstrap';\n\nimport Avatar from 'components/Avatar';\n\nconst Notifications = ({ notificationsData }) => {\n  return (\n    notificationsData &&\n    notificationsData.length &&\n    notificationsData.map(({ id, avatar, message, date }) => (\n      <Media key={id} className=\"pb-2\">\n        <Media left className=\"align-self-center pr-3\">\n          <Avatar tag={Media} object src={avatar} alt=\"Avatar\" />\n        </Media>\n        <Media body middle className=\"align-self-center\">\n          {message}\n        </Media>\n        <Media right className=\"align-self-center\">\n          <small className=\"text-muted\">{date}</small>\n        </Media>\n      </Media>\n    ))\n  );\n};\n\nNotifications.propTypes = {\n  notificationsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.ID,\n      avatar: PropTypes.string,\n      message: PropTypes.node,\n      date: PropTypes.date,\n    })\n  ),\n};\n\nNotifications.defaultProps = {\n  notificationsData: [],\n};\n\nexport default Notifications;\n","import React from 'react';\nimport { MdSearch } from 'react-icons/md';\nimport { Form, Input } from 'reactstrap';\n\nconst SearchInput = () => {\n  return (\n    <Form inline className=\"cr-search-form\" onSubmit={e => e.preventDefault()}>\n      <MdSearch\n        size=\"20\"\n        className=\"cr-search-form__icon-search text-secondary\"\n      />\n      <Input\n        type=\"search\"\n        className=\"cr-search-form__input\"\n        placeholder=\"Search...\"\n      />\n    </Form>\n  );\n};\n\nexport default SearchInput;\n","import React from 'react';\n\nimport classNames from 'classnames';\n\nimport { Badge } from 'reactstrap';\n\nconst positionMap = {\n  'top-right': {\n    top: -3,\n    right: -3,\n  },\n  'top-left': {\n    top: -3,\n    left: -3,\n  },\n  'bottom-left': {\n    bottom: -3,\n    left: -3,\n  },\n  'bottom-right': {\n    bottom: -3,\n    right: -3,\n  },\n};\n\nconst sizeMap = {\n  xs: {\n    width: 10,\n    height: 10,\n  },\n  sm: {\n    width: 15,\n    height: 15,\n  },\n  md: {\n    width: 20,\n    height: 20,\n  },\n  lg: {\n    width: 25,\n    height: 25,\n  },\n  xl: {\n    width: 30,\n    height: 30,\n  },\n};\n\nconst withBadge = ({\n  position = 'bottom-right',\n  size = 'sm',\n  style = {},\n  className,\n  ...restBadgeProps\n} = {}) => WrappedComponent => ({ tag: Tag = 'div', ...restProps }) => {\n  return (\n    <Tag className=\"d-inline-block position-relative\">\n      <WrappedComponent {...restProps} />\n      <Badge\n        className={classNames('position-absolute', className)}\n        style={{\n          ...positionMap[position],\n          ...sizeMap[size],\n          borderRadius: '50%',\n          border: '2px solid #fff',\n          ...style,\n        }}\n        {...restBadgeProps}\n      />\n    </Tag>\n  );\n};\n\nexport default withBadge;\n","import Avatar from 'components/Avatar';\nimport { UserCard } from 'components/Card';\nimport Notifications from 'components/Notifications';\nimport SearchInput from 'components/SearchInput';\nimport { notificationsData } from 'demos/header';\nimport withBadge from 'hocs/withBadge';\nimport React from 'react';\nimport {\n  MdClearAll,\n  MdExitToApp,\n  MdHelp,\n  MdInsertChart,\n  MdMessage,\n  MdNotificationsActive,\n  MdNotificationsNone,\n  MdPersonPin,\n  MdSettingsApplications,\n} from 'react-icons/md';\nimport {\n  Button,\n  ListGroup,\n  ListGroupItem,\n  // NavbarToggler,\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink,\n  Popover,\n  PopoverBody,\n} from 'reactstrap';\nimport bn from 'utils/bemnames';\n\nconst bem = bn.create('header');\n\n\n\nclass Header extends React.Component {\n  state = {\n    isOpenNotificationPopover: false,\n    isNotificationConfirmed: false,\n    isOpenUserCardPopover: false,\n  };\n\n  toggleNotificationPopover = () => {\n    this.setState({\n      isOpenNotificationPopover: !this.state.isOpenNotificationPopover,\n    });\n\n    if (!this.state.isNotificationConfirmed) {\n      this.setState({ isNotificationConfirmed: true });\n    }\n  };\n\n  toggleUserCardPopover = () => {\n    this.setState({\n      isOpenUserCardPopover: !this.state.isOpenUserCardPopover,\n    });\n  };\n\n  handleSidebarControlButton = event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    document.querySelector('.cr-sidebar').classList.toggle('cr-sidebar--open');\n  };\n\n  render() {\n    const { isNotificationConfirmed } = this.state;\n\n    return (\n      <Navbar light expand className={bem.b('bg-white')}>\n        <Nav navbar className=\"mr-2\">\n          <Button outline onClick={this.handleSidebarControlButton}>\n            <MdClearAll size={25} />\n          </Button>\n        </Nav>\n        <Nav navbar>\n          <SearchInput />\n        </Nav>\n\n        <Nav navbar className={bem.e('nav-right')}>\n          <NavItem>\n            <NavLink id=\"Popover2\">\n              <Avatar\n                onClick={this.toggleUserCardPopover}\n                className=\"can-click\"\n              />\n            </NavLink>\n            <Popover\n              placement=\"bottom-end\"\n              isOpen={this.state.isOpenUserCardPopover}\n              toggle={this.toggleUserCardPopover}\n              target=\"Popover2\"\n              className=\"p-0 border-0\"\n              style={{ minWidth: 250 }}\n            >\n              <PopoverBody className=\"p-0 border-light\">\n                <UserCard\n                  title=\"Pravesh Jha\"\n                  subtitle=\"Address : pravesh28@gmail.com\n\t\t\t\t\t\t\t\t\t  https://www.linkedin.com/in/pravesh-jha-33013155\"\n                  className=\"border-light\"\n                >\n\n                </UserCard>\n              </PopoverBody>\n            </Popover>\n          </NavItem>\n        </Nav>\n      </Navbar>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nconst LayoutRoute = ({ component: Component, layout: Layout, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n\nexport default LayoutRoute;\n","export const NOTIFICATION_SYSTEM_STYLE = {\n  NotificationItem: {\n    DefaultStyle: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n\n      borderRadius: '4px',\n      fontSize: '14px',\n    },\n\n    success: {\n      borderTop: 0,\n      backgroundColor: '#45b649',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n\n    error: {\n      borderTop: 0,\n      backgroundColor: '#f85032',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n\n    warning: {\n      borderTop: 0,\n      backgroundColor: '#ffd700',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n\n    info: {\n      borderTop: 0,\n      background: 'linear-gradient(to right, #6a82fb, #fc5c7d)',\n      WebkitBoxShadow: 0,\n      MozBoxShadow: 0,\n      boxShadow: 0,\n    },\n  },\n\n  Title: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0,\n      paddingRight: 5,\n      color: '#fff',\n      display: 'inline-flex',\n      fontSize: 20,\n      fontWeight: 'bold',\n      // left: '15px',\n      // position: 'absolute',\n      // top: '50%',\n    },\n  },\n\n  MessageWrapper: {\n    DefaultStyle: {\n      display: 'block',\n      color: '#fff',\n      width: '100%',\n    },\n  },\n\n  Dismiss: {\n    DefaultStyle: {\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontFamily: 'inherit',\n      fontSize: 20,\n      color: '#f2f2f2',\n      position: 'relative',\n      margin: 0,\n      padding: 0,\n      background: 'none',\n      borderRadius: 0,\n      opacity: 1,\n      width: 20,\n      height: 20,\n      textAlign: 'initial',\n      float: 'none',\n      top: 'unset',\n      right: 'unset',\n      lineHeight: 'inherit',\n    },\n  },\n\n  Action: {\n    DefaultStyle: {\n      background: '#fff',\n      borderRadius: '2px',\n      padding: '6px 20px',\n      fontWeight: 'bold',\n      margin: '10px 0 0 0',\n      border: 0,\n    },\n\n    success: {\n      backgroundColor: '#45b649',\n      color: '#fff',\n    },\n\n    error: {\n      backgroundColor: '#f85032',\n      color: '#fff',\n    },\n\n    warning: {\n      backgroundColor: '#ffd700',\n      color: '#fff',\n    },\n\n    info: {\n      backgroundColor: '#00c9ff',\n      color: '#fff',\n    },\n  },\n\n  ActionWrapper: {\n    DefaultStyle: {\n      margin: 0,\n      padding: 0,\n    },\n  },\n};\n","import { Content, Footer, Header, Sidebar } from 'components/Layout';\nimport React from 'react';\nimport {\n  MdImportantDevices,\n  // MdCardGiftcard,\n  MdLoyalty,\n} from 'react-icons/md';\nimport NotificationSystem from 'react-notification-system';\nimport { NOTIFICATION_SYSTEM_STYLE } from 'utils/constants';\n\nclass MainLayout extends React.Component {\n  static isSidebarOpen() {\n    return document\n      .querySelector('.cr-sidebar')\n      .classList.contains('cr-sidebar--open');\n  }\n\n  componentWillReceiveProps({ breakpoint }) {\n    if (breakpoint !== this.props.breakpoint) {\n      this.checkBreakpoint(breakpoint);\n    }\n  }\n\n  componentDidMount() {\n    this.checkBreakpoint(this.props.breakpoint);\n\n    setTimeout(() => {\n      if (!this.notificationSystem) {\n        return;\n      }\n\n      this.notificationSystem.addNotification({\n        title: <MdImportantDevices />,\n        message: 'Welome to Automation Studio!',\n        level: 'info',\n      });\n    }, 1500);\n\n    setTimeout(() => {\n      if (!this.notificationSystem) {\n        return;\n      }\n\n      this.notificationSystem.addNotification({\n        title: <MdLoyalty />,\n        message:\n          'Automation Studio is complete QA Automation Solution',\n        level: 'info',\n      });\n    }, 2500);\n  }\n\n  // close sidebar when\n  handleContentClick = event => {\n    // close sidebar if sidebar is open and screen size is less than `md`\n    if (\n      MainLayout.isSidebarOpen() &&\n      (this.props.breakpoint === 'xs' ||\n        this.props.breakpoint === 'sm' ||\n        this.props.breakpoint === 'md')\n    ) {\n      this.openSidebar('close');\n    }\n  };\n\n  checkBreakpoint(breakpoint) {\n    switch (breakpoint) {\n      case 'xs':\n      case 'sm':\n      case 'md':\n        return this.openSidebar('close');\n\n      case 'lg':\n      case 'xl':\n      default:\n        return this.openSidebar('open');\n    }\n  }\n\n  openSidebar(openOrClose) {\n    if (openOrClose === 'open') {\n      return document\n        .querySelector('.cr-sidebar')\n        .classList.add('cr-sidebar--open');\n    }\n    document.querySelector('.cr-sidebar').classList.remove('cr-sidebar--open');\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <main className=\"cr-app bg-light\">\n        <Sidebar />\n        <Content fluid onClick={this.handleContentClick}>\n          <Header />\n          {children}\n          <Footer />\n        </Content>\n\n        <NotificationSystem\n          dismissible={false}\n          ref={notificationSystem =>\n            (this.notificationSystem = notificationSystem)\n          }\n          style={NOTIFICATION_SYSTEM_STYLE}\n        />\n      </main>\n    );\n  }\n}\n\nexport default MainLayout;\n","import React from 'react';\n\nconst SourceLink = props => {\n  /* eslint-disable jsx-a11y/anchor-has-content */\n  return (\n    <a href={process.env.REACT_APP_SOURCE_URL} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n  );\n};\n\nexport default SourceLink;\n","import sidebarBgImage from 'assets/img/sidebar/sidebar-4.jpg';\nimport SourceLink from 'components/SourceLink';\nimport React from 'react';\nimport {\n  MdAccountCircle,\n  MdDashboard,\n  MdExtension,\n  MdInsertChart,\n  MdKeyboardArrowDown,\n  MdPages,\n\n  MdViewCarousel,\n  MdViewList,\n  MdWidgets,\n} from 'react-icons/md';\nimport { NavLink } from 'react-router-dom';\nimport {\n  // UncontrolledTooltip,\n  Collapse,\n  Nav,\n  Navbar,\n  NavItem,\n  NavLink as BSNavLink,\n} from 'reactstrap';\nimport bn from 'utils/bemnames';\n\nconst sidebarBackground = {\n  backgroundImage: `url(\"${sidebarBgImage}\")`,\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n};\n\nconst navComponents = [\n  { to: '/testattribute', name: 'Test Attribute', exact: false, Icon: MdViewList },\n  {to: '/locatorproperty',name: 'Locator Property',exact: false,Icon: MdViewList,},\n  {to: '/testdata',name: 'Test Data',exact: false,Icon: MdViewList,},\n  {to: '/updatetestscript',name: 'Update Test Script',exact: false,Icon: MdViewList,},\n  {to: '/customfunction',name: 'Custom Function',exact: false,Icon: MdViewList,},\n  { to: '/seleniumgrid', name: 'Selenium Grid', exact: false, Icon: MdViewList },\n  { to: '/configuration', name: 'Configuration Setup', exact: false, Icon: MdViewList },\n\n];\n//const pageContents = [\n // { to: '/login', name: 'login / signup', exact: false, Icon: MdAccountCircle },\n // {\n  //  to: '/login-modal',\n  //  name: 'login modal',\n   // exact: false,\n    //Icon: MdViewCarousel,\n // },\n//];\n\nconst navItems = [\n  { to: '/', name: 'dashboard', exact: true, Icon: MdDashboard },\n  { to: '/executionlabpage', name: 'Execution Lab', exact: false, Icon: MdInsertChart },\n  { to: '/testscripts', name: 'Test Scripts', exact: false, Icon: MdWidgets },\n  { to: '/cicd', name: 'CI/CD Support', exact: false, Icon: MdWidgets }\n // { to: '/aiau', name: 'AI Test Scripts', exact: false, Icon: MdWidgets },\n];\n\nconst bem = bn.create('sidebar');\n\nclass Sidebar extends React.Component {\n  state = {\n    isOpenComponents: false,\n    isOpenContents: false,\n    isOpenPages: false,\n  };\n\n  handleClick = name => () => {\n    this.setState(prevState => {\n      const isOpen = prevState[`isOpen${name}`];\n\n      return {\n        [`isOpen${name}`]: !isOpen,\n      };\n    });\n  };\n\n  render() {\n    return (\n      <aside className={bem.b()} data-image={sidebarBgImage}>\n        <div className={bem.e('background')} style={sidebarBackground} />\n        <div className={bem.e('content')}>\n          <Navbar>\n            <SourceLink className=\"navbar-brand d-flex\">\n\n              <span className=\"text-white\">\n                Automation Studio\n              </span>\n            </SourceLink>\n          </Navbar>\n          <Nav vertical>\n            {navItems.map(({ to, name, exact, Icon }, index) => (\n              <NavItem key={index} className={bem.e('nav-item')}>\n                <BSNavLink\n                  id={`navItem-${name}-${index}`}\n                  className=\"text-uppercase\"\n                  tag={NavLink}\n                  to={to}\n                  activeClassName=\"active\"\n                  exact={exact}\n                >\n                  <Icon className={bem.e('nav-item-icon')} />\n                  <span className=\"\">{name}</span>\n                </BSNavLink>\n              </NavItem>\n            ))}\n\n            <NavItem\n              className={bem.e('nav-item')}\n              onClick={this.handleClick('Components')}\n            >\n              <BSNavLink className={bem.e('nav-item-collapse')}>\n                <div className=\"d-flex\">\n                  <MdExtension className={bem.e('nav-item-icon')} />\n                  <span className=\" align-self-start\">Maintenance</span>\n                </div>\n                <MdKeyboardArrowDown\n                  className={bem.e('nav-item-icon')}\n                  style={{\n                    padding: 0,\n                    transform: this.state.isOpenComponents\n                      ? 'rotate(0deg)'\n                      : 'rotate(-90deg)',\n                    transitionDuration: '0.3s',\n                    transitionProperty: 'transform',\n                  }}\n                />\n              </BSNavLink>\n            </NavItem>\n            <Collapse isOpen={this.state.isOpenComponents}>\n              {navComponents.map(({ to, name, exact, Icon }, index) => (\n                <NavItem key={index} className={bem.e('nav-item')}>\n                  <BSNavLink\n                    id={`navItem-${name}-${index}`}\n                    className=\"text-uppercase\"\n                    tag={NavLink}\n                    to={to}\n                    activeClassName=\"active\"\n                    exact={exact}\n                  >\n                    <Icon className={bem.e('nav-item-icon')} />\n                    <span className=\"\">{name}</span>\n                  </BSNavLink>\n                </NavItem>\n              ))}\n            </Collapse>\n          </Nav>\n        </div>\n      </aside>\n    );\n  }\n}\n\nexport default Sidebar;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Spinner } from 'reactstrap';\n\nconst PageSpinner = ({ color = 'primary' }) => {\n  return (\n    <div className=\"cr-page-spinner\">\n      <Spinner color={color} />\n    </div>\n  );\n};\n\nPageSpinner.propTypes = {\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'success',\n    'danger',\n    'warning',\n    'info',\n    'light',\n    'dark',\n  ]),\n};\n\nexport default PageSpinner;\n","import AuthForm, { STATE_LOGIN } from 'components/AuthForm';\nimport React from 'react';\nimport { Card, Col, Row } from 'reactstrap';\n\nclass AuthPage extends React.Component {\n  handleAuthState = authState => {\n    if (authState === STATE_LOGIN) {\n      this.props.history.push('/login');\n    } else {\n      this.props.history.push('/signup');\n    }\n  };\n\n  handleLogoClick = () => {\n    this.props.history.push('/');\n  };\n\n  render() {\n    return (\n      <Row\n        style={{\n          height: '100vh',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        <Col md={6} lg={4}>\n          <Card body>\n            <AuthForm\n              authState={this.props.authState}\n              onChangeAuthState={this.handleAuthState}\n              onLogoClick={this.handleLogoClick}\n            />\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default AuthPage;\n","import { STATE_LOGIN, STATE_SIGNUP } from 'components/AuthForm';\nimport GAListener from 'components/GAListener';\nimport { EmptyLayout, LayoutRoute, MainLayout } from 'components/Layout';\nimport PageSpinner from 'components/PageSpinner';\nimport AuthPage from 'pages/AuthPage';\nimport React from 'react';\nimport componentQueries from 'react-component-queries';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport './styles/reduction.scss';\n\nconst AlertPage = React.lazy(() => import('pages/AlertPage'));\nconst AuthModalPage = React.lazy(() => import('pages/AuthModalPage'));\nconst BadgePage = React.lazy(() => import('pages/BadgePage'));\nconst ButtonGroupPage = React.lazy(() => import('pages/ButtonGroupPage'));\nconst ButtonPage = React.lazy(() => import('pages/ButtonPage'));\nconst CardPage = React.lazy(() => import('pages/CardPage'));\nconst ChartPage = React.lazy(() => import('pages/ChartPage'));\nconst DashboardPage = React.lazy(() => import('pages/DashboardPage'));\nconst DropdownPage = React.lazy(() => import('pages/DropdownPage'));\nconst FormPage = React.lazy(() => import('pages/FormPage'));\nconst InputGroupPage = React.lazy(() => import('pages/InputGroupPage'));\nconst ModalPage = React.lazy(() => import('pages/ModalPage'));\nconst ProgressPage = React.lazy(() => import('pages/ProgressPage'));\nconst TablePage = React.lazy(() => import('pages/TablePage'));\nconst TypographyPage = React.lazy(() => import('pages/TypographyPage'));\nconst WidgetPage = React.lazy(() => import('pages/WidgetPage'));\nconst ExecutionLabPage = React.lazy(() => import('pages/ExecutionLabPage'));\nconst TestScripts = React.lazy(() => import('pages/TestScripts'));\nconst TestAttribute = React.lazy(() => import('pages/TestAttribute'));\nconst LocatorProperty = React.lazy(() => import('pages/LocatorProperty'));\nconst TestData = React.lazy(() => import('pages/TestData'));\nconst UpdateTestScript = React.lazy(() => import('pages/UpdateTestScript'));\nconst CustomFunction = React.lazy(() => import('pages/CustomFunction'));\nconst SeleniumGrid = React.lazy(() => import('pages/SeleniumGrid'));\nconst Configuration = React.lazy(() => import('pages/Configuration'));\nconst CICDSupport = React.lazy(() => import('pages/CICDSupport'));\n\n\nconst getBasename = () => {\n  return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <BrowserRouter basename={getBasename()}>\n        <GAListener>\n          <Switch>\n            <LayoutRoute\n              exact\n              path=\"/login\"\n              layout={EmptyLayout}\n              component={props => (\n                <AuthPage {...props} authState={STATE_LOGIN} />\n              )}\n            />\n            <LayoutRoute\n              exact\n              path=\"/signup\"\n              layout={EmptyLayout}\n              component={props => (\n                <AuthPage {...props} authState={STATE_SIGNUP} />\n              )}\n            />\n\n            <MainLayout breakpoint={this.props.breakpoint}>\n              <React.Suspense fallback={<PageSpinner />}>\n                <Route exact path=\"/\" component={DashboardPage} />\n                <Route exact path=\"/login-modal\" component={AuthModalPage} />\n                <Route exact path=\"/buttons\" component={ButtonPage} />\n                <Route exact path=\"/cards\" component={CardPage} />\n                <Route exact path=\"/widgets\" component={WidgetPage} />\n                <Route exact path=\"/typography\" component={TypographyPage} />\n                <Route exact path=\"/alerts\" component={AlertPage} />\n                <Route exact path=\"/tables\" component={TablePage} />\n                <Route exact path=\"/badges\" component={BadgePage} />\n\t\t\t\t<Route exact path=\"/executionlabpage\" component={ExecutionLabPage} />\n\t\t\t\t<Route exact path=\"/testscripts\" component={TestScripts} />\n                <Route exact path=\"/button-groups\" component={ButtonGroupPage}/>\n                <Route exact path=\"/dropdowns\" component={DropdownPage} />\n                <Route exact path=\"/progress\" component={ProgressPage} />\n                <Route exact path=\"/modals\" component={ModalPage} />\n                <Route exact path=\"/forms\" component={FormPage} />\n                <Route exact path=\"/input-groups\" component={InputGroupPage} />\n                <Route exact path=\"/charts\" component={ChartPage} />\n\t\t\t\t<Route exact path=\"/testattribute\" component={TestAttribute} />\n\t\t\t\t<Route exact path=\"/locatorproperty\" component={LocatorProperty} />\n\t\t\t\t<Route exact path=\"/testdata\" component={TestData} />\n\t\t\t\t<Route exact path=\"/updatetestscript\" component={UpdateTestScript} />\n\t\t\t\t<Route exact path=\"/customfunction\" component={CustomFunction} />\n\t\t\t\t<Route exact path=\"/seleniumgrid\" component={SeleniumGrid} />\n\t\t\t\t<Route exact path=\"/configuration\" component={Configuration} />\n\t\t\t\t<Route exact path=\"/cicd\" component={CICDSupport} />\n              </React.Suspense>\n            </MainLayout>\n            <Redirect to=\"/\" />\n          </Switch>\n        </GAListener>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst query = ({ width }) => {\n  if (width < 575) {\n    return { breakpoint: 'xs' };\n  }\n\n  if (576 < width && width < 767) {\n    return { breakpoint: 'sm' };\n  }\n\n  if (768 < width && width < 991) {\n    return { breakpoint: 'md' };\n  }\n\n  if (992 < width && width < 1199) {\n    return { breakpoint: 'lg' };\n  }\n\n  if (width > 1200) {\n    return { breakpoint: 'xl' };\n  }\n\n  return { breakpoint: 'xs' };\n};\n\nexport default componentQueries(query)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}